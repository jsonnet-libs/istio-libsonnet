{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"istio Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>1.19</li> <li>1.18</li> <li>1.17</li> </ul>"},{"location":"1.17/","title":"istio","text":"<pre><code>local istio = import \"github.com/jsonnet-libs/istio-libsonnet/1.17/main.libsonnet\"\n</code></pre> <ul> <li>extensions</li> <li>networking</li> <li>security</li> <li>telemetry</li> </ul>"},{"location":"1.17/extensions/","title":"extensions","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.17/extensions/v1alpha1/","title":"extensions.v1alpha1","text":"<ul> <li>wasmPlugin</li> </ul>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/","title":"extensions.v1alpha1.wasmPlugin","text":""},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withImagePullSecret(imagePullSecret)</code></li> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withPhase(phase)</code></li> <li><code>fn withPluginConfig(pluginConfig)</code></li> <li><code>fn withPluginConfigMixin(pluginConfig)</code></li> <li><code>fn withPluginName(pluginName)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>fn withSha256(sha256)</code></li> <li><code>fn withUrl(url)</code></li> <li><code>fn withVerificationKey(verificationKey)</code></li> <li><code>obj spec.match</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>obj spec.match.ports</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> <li><code>obj spec.vmConfig</code><ul> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>obj spec.vmConfig.env</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fields","title":"Fields","text":""},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WasmPlugin</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-spec","title":"obj spec","text":"<p>\"Extend the functionality provided by the Istio proxy through WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithimagepullpolicy","title":"fn spec.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithimagepullsecret","title":"fn spec.withImagePullSecret","text":"<pre><code>withImagePullSecret(imagePullSecret)\n</code></pre> <p>\"Credentials to use for OCI image pulling.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithmatch","title":"fn spec.withMatch","text":"<pre><code>withMatch(match)\n</code></pre> <p>\"Specifies the criteria to determine which traffic is passed to WasmPlugin.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithmatchmixin","title":"fn spec.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>\"Specifies the criteria to determine which traffic is passed to WasmPlugin.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithphase","title":"fn spec.withPhase","text":"<pre><code>withPhase(phase)\n</code></pre> <p>\"Determines where in the filter chain this <code>WasmPlugin</code> is to be injected.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithpluginconfig","title":"fn spec.withPluginConfig","text":"<pre><code>withPluginConfig(pluginConfig)\n</code></pre> <p>\"The configuration that will be passed on to the plugin.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithpluginconfigmixin","title":"fn spec.withPluginConfigMixin","text":"<pre><code>withPluginConfigMixin(pluginConfig)\n</code></pre> <p>\"The configuration that will be passed on to the plugin.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithpluginname","title":"fn spec.withPluginName","text":"<pre><code>withPluginName(pluginName)\n</code></pre>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithpriority","title":"fn spec.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre> <p>\"Determines ordering of <code>WasmPlugins</code> in the same <code>phase</code>.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithsha256","title":"fn spec.withSha256","text":"<pre><code>withSha256(sha256)\n</code></pre> <p>\"SHA256 checksum that will be used to verify Wasm module or OCI container.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of a Wasm module or OCI container.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specwithverificationkey","title":"fn spec.withVerificationKey","text":"<pre><code>withVerificationKey(verificationKey)\n</code></pre>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-specmatch","title":"obj spec.match","text":"<p>\"Specifies the criteria to determine which traffic is passed to WasmPlugin.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specmatchwithmode","title":"fn spec.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"Criteria for selecting traffic by their direction.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specmatchwithports","title":"fn spec.match.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Criteria for selecting traffic by their destination port.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specmatchwithportsmixin","title":"fn spec.match.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Criteria for selecting traffic by their destination port.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-specmatchports","title":"obj spec.match.ports","text":"<p>\"Criteria for selecting traffic by their destination port.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specmatchportswithnumber","title":"fn spec.match.ports.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-specselector","title":"obj spec.selector","text":""},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-specvmconfig","title":"obj spec.vmConfig","text":"<p>\"Configuration for a Wasm VM.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigwithenv","title":"fn spec.vmConfig.withEnv","text":"<pre><code>withEnv(env)\n</code></pre> <p>\"Specifies environment variables to be injected to this VM.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigwithenvmixin","title":"fn spec.vmConfig.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>\"Specifies environment variables to be injected to this VM.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#obj-specvmconfigenv","title":"obj spec.vmConfig.env","text":"<p>\"Specifies environment variables to be injected to this VM.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigenvwithname","title":"fn spec.vmConfig.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigenvwithvalue","title":"fn spec.vmConfig.env.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value for the environment variable.\"</p>"},{"location":"1.17/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigenvwithvaluefrom","title":"fn spec.vmConfig.env.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.17/networking/","title":"networking","text":"<ul> <li>v1alpha3</li> <li>v1beta1</li> </ul>"},{"location":"1.17/networking/v1alpha3/","title":"networking.v1alpha3","text":"<ul> <li>destinationRule</li> <li>envoyFilter</li> <li>gateway</li> <li>serviceEntry</li> <li>sidecar</li> <li>virtualService</li> <li>workloadEntry</li> <li>workloadGroup</li> </ul>"},{"location":"1.17/networking/v1alpha3/destinationRule/","title":"networking.v1alpha3.destinationRule","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubsets(subsets)</code></li> <li><code>fn withSubsetsMixin(subsets)</code></li> <li><code>obj spec.subsets</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.subsets.trafficPolicy</code></li> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool</code><ul> <li><code>obj spec.subsets.trafficPolicy.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings</code><ul> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.port</code></li> <li><code>fn withNumber(number)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tunnel</code><ul> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy</code><ul> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.trafficPolicy.connectionPool</code></li> <li><code>obj spec.trafficPolicy.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool</code><ul> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.trafficPolicy.tunnel</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DestinationRule</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specwithhost","title":"fn spec.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specwithsubsets","title":"fn spec.withSubsets","text":"<pre><code>withSubsets(subsets)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specwithsubsetsmixin","title":"fn spec.withSubsetsMixin","text":"<pre><code>withSubsetsMixin(subsets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsets","title":"obj spec.subsets","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetswithlabels","title":"fn spec.subsets.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetswithlabelsmixin","title":"fn spec.subsets.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetswithname","title":"fn spec.subsets.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the subset.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicy","title":"obj spec.subsets.trafficPolicy","text":"<p>\"Traffic policies that apply to this subset.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettings","title":"fn spec.subsets.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettingsmixin","title":"fn spec.subsets.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpool","title":"obj spec.subsets.trafficPolicy.connectionPool","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancer","title":"obj spec.subsets.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyoutlierdetection","title":"obj spec.subsets.trafficPolicy.outlierDetection","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettings","title":"obj spec.subsets.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsport","title":"obj spec.subsets.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.subsets.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingstls","title":"obj spec.subsets.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithmode","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsni","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicytls","title":"obj spec.subsets.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithcacertificates","title":"fn spec.subsets.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithcredentialname","title":"fn spec.subsets.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithmode","title":"fn spec.subsets.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithprivatekey","title":"fn spec.subsets.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithsni","title":"fn spec.subsets.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicytunnel","title":"obj spec.subsets.trafficPolicy.tunnel","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytunnelwithprotocol","title":"fn spec.subsets.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargethost","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargetport","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicy","title":"obj spec.trafficPolicy","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicywithportlevelsettings","title":"fn spec.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicywithportlevelsettingsmixin","title":"fn spec.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpool","title":"obj spec.trafficPolicy.connectionPool","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpoolhttp","title":"obj spec.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpooltcp","title":"obj spec.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancer","title":"obj spec.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerwithsimple","title":"fn spec.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyoutlierdetection","title":"obj spec.trafficPolicy.outlierDetection","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettings","title":"obj spec.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsport","title":"obj spec.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingstls","title":"obj spec.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithmode","title":"fn spec.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsni","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicytls","title":"obj spec.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithcacertificates","title":"fn spec.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithclientcertificate","title":"fn spec.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithcredentialname","title":"fn spec.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithinsecureskipverify","title":"fn spec.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithmode","title":"fn spec.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithprivatekey","title":"fn spec.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithsni","title":"fn spec.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnames","title":"fn spec.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-spectrafficpolicytunnel","title":"obj spec.trafficPolicy.tunnel","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytunnelwithprotocol","title":"fn spec.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytunnelwithtargethost","title":"fn spec.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytunnelwithtargetport","title":"fn spec.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1alpha3/destinationRule/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specworkloadselectorwithmatchlabels","title":"fn spec.workloadSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/destinationRule/#fn-specworkloadselectorwithmatchlabelsmixin","title":"fn spec.workloadSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/","title":"networking.v1alpha3.envoyFilter","text":""},{"location":"1.17/networking/v1alpha3/envoyFilter/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConfigPatches(configPatches)</code></li> <li><code>fn withConfigPatchesMixin(configPatches)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>obj spec.configPatches</code><ul> <li><code>fn withApplyTo(applyTo)</code></li> <li><code>obj spec.configPatches.match</code></li> <li><code>fn withContext(context)</code></li> <li><code>obj spec.configPatches.match.cluster</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPortNumber(portNumber)</code></li> <li><code>fn withService(service)</code></li> <li><code>fn withSubset(subset)</code></li> </ul> </li> <li><code>obj spec.configPatches.match.listener</code><ul> <li><code>fn withListenerFilter(listenerFilter)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPortName(portName)</code></li> <li><code>fn withPortNumber(portNumber)</code></li> <li><code>obj spec.configPatches.match.listener.filterChain</code></li> <li><code>fn withApplicationProtocols(applicationProtocols)</code></li> <li><code>fn withDestinationPort(destinationPort)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withTransportProtocol(transportProtocol)</code></li> <li><code>obj spec.configPatches.match.listener.filterChain.filter</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.configPatches.match.listener.filterChain.filter.subFilter</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.configPatches.match.proxy</code><ul> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withProxyVersion(proxyVersion)</code></li> </ul> </li> <li><code>obj spec.configPatches.match.routeConfiguration</code><ul> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPortName(portName)</code></li> <li><code>fn withPortNumber(portNumber)</code></li> <li><code>obj spec.configPatches.match.routeConfiguration.vhost</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.configPatches.match.routeConfiguration.vhost.route</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.configPatches.patch</code></li> <li><code>fn withFilterClass(filterClass)</code></li> <li><code>fn withOperation(operation)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueMixin(value)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EnvoyFilter</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-spec","title":"obj spec","text":"<p>\"Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specwithconfigpatches","title":"fn spec.withConfigPatches","text":"<pre><code>withConfigPatches(configPatches)\n</code></pre> <p>\"One or more patches with match conditions.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specwithconfigpatchesmixin","title":"fn spec.withConfigPatchesMixin","text":"<pre><code>withConfigPatchesMixin(configPatches)\n</code></pre> <p>\"One or more patches with match conditions.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specwithpriority","title":"fn spec.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre> <p>\"Priority defines the order in which patch sets are applied within a context.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatches","title":"obj spec.configPatches","text":"<p>\"One or more patches with match conditions.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatcheswithapplyto","title":"fn spec.configPatches.withApplyTo","text":"<pre><code>withApplyTo(applyTo)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatch","title":"obj spec.configPatches.match","text":"<p>\"Match on listener/route configuration/cluster.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchwithcontext","title":"fn spec.configPatches.match.withContext","text":"<pre><code>withContext(context)\n</code></pre> <p>\"The specific config generation context to match on.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchcluster","title":"obj spec.configPatches.match.cluster","text":"<p>\"Match on envoy cluster attributes.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithname","title":"fn spec.configPatches.match.cluster.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The exact name of the cluster to match.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithportnumber","title":"fn spec.configPatches.match.cluster.withPortNumber","text":"<pre><code>withPortNumber(portNumber)\n</code></pre> <p>\"The service port for which this cluster was generated.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithservice","title":"fn spec.configPatches.match.cluster.withService","text":"<pre><code>withService(service)\n</code></pre> <p>\"The fully qualified service name for this cluster.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithsubset","title":"fn spec.configPatches.match.cluster.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The subset associated with the service.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistener","title":"obj spec.configPatches.match.listener","text":"<p>\"Match on envoy listener attributes.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithlistenerfilter","title":"fn spec.configPatches.match.listener.withListenerFilter","text":"<pre><code>withListenerFilter(listenerFilter)\n</code></pre> <p>\"Match a specific listener filter.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithname","title":"fn spec.configPatches.match.listener.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Match a specific listener by its name.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithportname","title":"fn spec.configPatches.match.listener.withPortName","text":"<pre><code>withPortName(portName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithportnumber","title":"fn spec.configPatches.match.listener.withPortNumber","text":"<pre><code>withPortNumber(portNumber)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistenerfilterchain","title":"obj spec.configPatches.match.listener.filterChain","text":"<p>\"Match a specific filter chain in a listener.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithapplicationprotocols","title":"fn spec.configPatches.match.listener.filterChain.withApplicationProtocols","text":"<pre><code>withApplicationProtocols(applicationProtocols)\n</code></pre> <p>\"Applies only to sidecars.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithdestinationport","title":"fn spec.configPatches.match.listener.filterChain.withDestinationPort","text":"<pre><code>withDestinationPort(destinationPort)\n</code></pre> <p>\"The destination_port value used by a filter chain's match condition.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithname","title":"fn spec.configPatches.match.listener.filterChain.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to the filter chain.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithsni","title":"fn spec.configPatches.match.listener.filterChain.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"The SNI value used by a filter chain's match condition.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithtransportprotocol","title":"fn spec.configPatches.match.listener.filterChain.withTransportProtocol","text":"<pre><code>withTransportProtocol(transportProtocol)\n</code></pre> <p>\"Applies only to <code>SIDECAR_INBOUND</code> context.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistenerfilterchainfilter","title":"obj spec.configPatches.match.listener.filterChain.filter","text":"<p>\"The name of a specific filter to apply the patch to.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainfilterwithname","title":"fn spec.configPatches.match.listener.filterChain.filter.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The filter name to match on.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistenerfilterchainfiltersubfilter","title":"obj spec.configPatches.match.listener.filterChain.filter.subFilter","text":""},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainfiltersubfilterwithname","title":"fn spec.configPatches.match.listener.filterChain.filter.subFilter.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The filter name to match on.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchproxy","title":"obj spec.configPatches.match.proxy","text":"<p>\"Match on properties associated with a proxy.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchproxywithmetadata","title":"fn spec.configPatches.match.proxy.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchproxywithmetadatamixin","title":"fn spec.configPatches.match.proxy.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchproxywithproxyversion","title":"fn spec.configPatches.match.proxy.withProxyVersion","text":"<pre><code>withProxyVersion(proxyVersion)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchrouteconfiguration","title":"obj spec.configPatches.match.routeConfiguration","text":"<p>\"Match on envoy HTTP route configuration attributes.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithgateway","title":"fn spec.configPatches.match.routeConfiguration.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithname","title":"fn spec.configPatches.match.routeConfiguration.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Route configuration name to match on.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithportname","title":"fn spec.configPatches.match.routeConfiguration.withPortName","text":"<pre><code>withPortName(portName)\n</code></pre> <p>\"Applicable only for GATEWAY context.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithportnumber","title":"fn spec.configPatches.match.routeConfiguration.withPortNumber","text":"<pre><code>withPortNumber(portNumber)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchrouteconfigurationvhost","title":"obj spec.configPatches.match.routeConfiguration.vhost","text":""},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationvhostwithname","title":"fn spec.configPatches.match.routeConfiguration.vhost.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchrouteconfigurationvhostroute","title":"obj spec.configPatches.match.routeConfiguration.vhost.route","text":"<p>\"Match a specific route within the virtual host.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationvhostroutewithaction","title":"fn spec.configPatches.match.routeConfiguration.vhost.route.withAction","text":"<pre><code>withAction(action)\n</code></pre> <p>\"Match a route with specific action type.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationvhostroutewithname","title":"fn spec.configPatches.match.routeConfiguration.vhost.route.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specconfigpatchespatch","title":"obj spec.configPatches.patch","text":"<p>\"The patch to apply along with the operation.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithfilterclass","title":"fn spec.configPatches.patch.withFilterClass","text":"<pre><code>withFilterClass(filterClass)\n</code></pre> <p>\"Determines the filter insertion order.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithoperation","title":"fn spec.configPatches.patch.withOperation","text":"<pre><code>withOperation(operation)\n</code></pre> <p>\"Determines how the patch should be applied.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithvalue","title":"fn spec.configPatches.patch.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"The JSON config of the object being patched.\"</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithvaluemixin","title":"fn spec.configPatches.patch.withValueMixin","text":"<pre><code>withValueMixin(value)\n</code></pre> <p>\"The JSON config of the object being patched.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/envoyFilter/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/","title":"networking.v1alpha3.gateway","text":""},{"location":"1.17/networking/v1alpha3/gateway/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> <li><code>fn withServers(servers)</code></li> <li><code>fn withServersMixin(servers)</code></li> <li><code>obj spec.servers</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.servers.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.servers.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/gateway/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/gateway/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Gateway</p>"},{"location":"1.17/networking/v1alpha3/gateway/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specwithselectormixin","title":"fn spec.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specwithservers","title":"fn spec.withServers","text":"<pre><code>withServers(servers)\n</code></pre> <p>\"A list of server specifications.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specwithserversmixin","title":"fn spec.withServersMixin","text":"<pre><code>withServersMixin(servers)\n</code></pre> <p>\"A list of server specifications.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#obj-specservers","title":"obj spec.servers","text":"<p>\"A list of server specifications.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverswithbind","title":"fn spec.servers.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverswithdefaultendpoint","title":"fn spec.servers.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverswithhosts","title":"fn spec.servers.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverswithhostsmixin","title":"fn spec.servers.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverswithname","title":"fn spec.servers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"An optional name of the server, when set must be unique across all servers.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#obj-specserversport","title":"obj spec.servers.port","text":""},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserversportwithname","title":"fn spec.servers.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserversportwithnumber","title":"fn spec.servers.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserversportwithprotocol","title":"fn spec.servers.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserversportwithtargetport","title":"fn spec.servers.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#obj-specserverstls","title":"obj spec.servers.tls","text":"<p>\"Set of TLS related options that govern the server's behavior.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithcacertificates","title":"fn spec.servers.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithciphersuites","title":"fn spec.servers.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithciphersuitesmixin","title":"fn spec.servers.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithcredentialname","title":"fn spec.servers.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithhttpsredirect","title":"fn spec.servers.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithmaxprotocolversion","title":"fn spec.servers.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithminprotocolversion","title":"fn spec.servers.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithmode","title":"fn spec.servers.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithprivatekey","title":"fn spec.servers.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithservercertificate","title":"fn spec.servers.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithsubjectaltnames","title":"fn spec.servers.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithsubjectaltnamesmixin","title":"fn spec.servers.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatehash","title":"fn spec.servers.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatehashmixin","title":"fn spec.servers.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatespki","title":"fn spec.servers.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatespkimixin","title":"fn spec.servers.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/","title":"networking.v1alpha3.serviceEntry","text":""},{"location":"1.17/networking/v1alpha3/serviceEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddresses(addresses)</code></li> <li><code>fn withAddressesMixin(addresses)</code></li> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withEndpointsMixin(endpoints)</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withLocation(location)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResolution(resolution)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.endpoints</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ServiceEntry</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithaddresses","title":"fn spec.withAddresses","text":"<pre><code>withAddresses(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithaddressesmixin","title":"fn spec.withAddressesMixin","text":"<pre><code>withAddressesMixin(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithendpoints","title":"fn spec.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithendpointsmixin","title":"fn spec.withEndpointsMixin","text":"<pre><code>withEndpointsMixin(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithlocation","title":"fn spec.withLocation","text":"<pre><code>withLocation(location)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithresolution","title":"fn spec.withResolution","text":"<pre><code>withResolution(resolution)\n</code></pre> <p>\"Service resolution mode for the hosts.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithsubjectaltnames","title":"fn spec.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specwithsubjectaltnamesmixin","title":"fn spec.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#obj-specendpoints","title":"obj spec.endpoints","text":"<p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithaddress","title":"fn spec.endpoints.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithlabels","title":"fn spec.endpoints.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithlabelsmixin","title":"fn spec.endpoints.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithlocality","title":"fn spec.endpoints.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithnetwork","title":"fn spec.endpoints.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithports","title":"fn spec.endpoints.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithportsmixin","title":"fn spec.endpoints.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithserviceaccount","title":"fn spec.endpoints.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specendpointswithweight","title":"fn spec.endpoints.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#obj-specports","title":"obj spec.ports","text":"<p>\"The ports associated with the external service.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specportswithnumber","title":"fn spec.ports.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specportswithtargetport","title":"fn spec.ports.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":"<p>\"Applicable only for MESH_INTERNAL services.\"</p>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/serviceEntry/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/","title":"networking.v1alpha3.sidecar","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>obj spec.egress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>obj spec.ingress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.ingress.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> <li><code>obj spec.outboundTrafficPolicy</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/sidecar/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sidecar</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specegress","title":"obj spec.egress","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegresswithbind","title":"fn spec.egress.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegresswithcapturemode","title":"fn spec.egress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegresswithhosts","title":"fn spec.egress.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegresswithhostsmixin","title":"fn spec.egress.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specegressport","title":"obj spec.egress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegressportwithname","title":"fn spec.egress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegressportwithnumber","title":"fn spec.egress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegressportwithprotocol","title":"fn spec.egress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specegressportwithtargetport","title":"fn spec.egress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specingress","title":"obj spec.ingress","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresswithbind","title":"fn spec.ingress.withBind","text":"<pre><code>withBind(bind)\n</code></pre> <p>\"The IP(IPv4 or IPv6) to which the listener should be bound.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresswithcapturemode","title":"fn spec.ingress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresswithdefaultendpoint","title":"fn spec.ingress.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specingressport","title":"obj spec.ingress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingressportwithname","title":"fn spec.ingress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingressportwithnumber","title":"fn spec.ingress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingressportwithprotocol","title":"fn spec.ingress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingressportwithtargetport","title":"fn spec.ingress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specingresstls","title":"obj spec.ingress.tls","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithcacertificates","title":"fn spec.ingress.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithciphersuites","title":"fn spec.ingress.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithciphersuitesmixin","title":"fn spec.ingress.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithcredentialname","title":"fn spec.ingress.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithhttpsredirect","title":"fn spec.ingress.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithmaxprotocolversion","title":"fn spec.ingress.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithminprotocolversion","title":"fn spec.ingress.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithmode","title":"fn spec.ingress.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithprivatekey","title":"fn spec.ingress.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithservercertificate","title":"fn spec.ingress.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithsubjectaltnames","title":"fn spec.ingress.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithsubjectaltnamesmixin","title":"fn spec.ingress.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatehash","title":"fn spec.ingress.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatehashmixin","title":"fn spec.ingress.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatespki","title":"fn spec.ingress.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatespkimixin","title":"fn spec.ingress.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specoutboundtrafficpolicy","title":"obj spec.outboundTrafficPolicy","text":"<p>\"Configuration for the outbound traffic policy.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicywithmode","title":"fn spec.outboundTrafficPolicy.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specoutboundtrafficpolicyegressproxy","title":"obj spec.outboundTrafficPolicy.egressProxy","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicyegressproxywithhost","title":"fn spec.outboundTrafficPolicy.egressProxy.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicyegressproxywithsubset","title":"fn spec.outboundTrafficPolicy.egressProxy.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specoutboundtrafficpolicyegressproxyport","title":"obj spec.outboundTrafficPolicy.egressProxy.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicyegressproxyportwithnumber","title":"fn spec.outboundTrafficPolicy.egressProxy.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/sidecar/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/","title":"networking.v1alpha3.virtualService","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withHttp(http)</code></li> <li><code>fn withHttpMixin(http)</code></li> <li><code>fn withTcp(tcp)</code></li> <li><code>fn withTcpMixin(tcp)</code></li> <li><code>fn withTls(tls)</code></li> <li><code>fn withTlsMixin(tls)</code></li> <li><code>obj spec.http</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withMirrorPercent(mirrorPercent)</code></li> <li><code>fn withMirror_percent(mirror_percent)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>obj spec.http.corsPolicy</code></li> <li><code>fn withAllowCredentials(allowCredentials)</code></li> <li><code>fn withAllowHeaders(allowHeaders)</code></li> <li><code>fn withAllowHeadersMixin(allowHeaders)</code></li> <li><code>fn withAllowMethods(allowMethods)</code></li> <li><code>fn withAllowMethodsMixin(allowMethods)</code></li> <li><code>fn withAllowOrigin(allowOrigin)</code></li> <li><code>fn withAllowOriginMixin(allowOrigin)</code></li> <li><code>fn withAllowOrigins(allowOrigins)</code></li> <li><code>fn withAllowOriginsMixin(allowOrigins)</code></li> <li><code>fn withExposeHeaders(exposeHeaders)</code></li> <li><code>fn withExposeHeadersMixin(exposeHeaders)</code></li> <li><code>fn withMaxAge(maxAge)</code></li> <li><code>obj spec.http.corsPolicy.allowOrigins</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.delegate</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.http.directResponse</code></li> <li><code>obj spec.http.directResponse.body</code><ul> <li><code>fn withBytes(bytes)</code></li> <li><code>fn withString(string)</code></li> </ul> </li> <li><code>obj spec.http.fault</code></li> <li><code>obj spec.http.fault.abort</code><ul> <li><code>fn withGrpcStatus(grpcStatus)</code></li> <li><code>fn withHttp2Error(http2Error)</code></li> <li><code>fn withHttpStatus(httpStatus)</code></li> <li><code>obj spec.http.fault.abort.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.fault.delay</code><ul> <li><code>fn withExponentialDelay(exponentialDelay)</code></li> <li><code>fn withFixedDelay(fixedDelay)</code></li> <li><code>fn withPercent(percent)</code></li> <li><code>obj spec.http.fault.delay.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.headers</code></li> <li><code>obj spec.http.headers.request</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.headers.response</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.match</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHeaders(headers)</code></li> <li><code>fn withHeadersMixin(headers)</code></li> <li><code>fn withIgnoreUriCase(ignoreUriCase)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withQueryParams(queryParams)</code></li> <li><code>fn withQueryParamsMixin(queryParams)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withStatPrefix(statPrefix)</code></li> <li><code>fn withWithoutHeaders(withoutHeaders)</code></li> <li><code>fn withWithoutHeadersMixin(withoutHeaders)</code></li> <li><code>obj spec.http.match.authority</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.headers</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.match.method</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.queryParams</code><ul> <li><code>fn withExact(key, value)</code></li> <li><code>fn withExactMixin(key, value)</code></li> <li><code>fn withRegex(key, value)</code></li> <li><code>fn withRegexMixin(key, value)</code></li> </ul> </li> <li><code>obj spec.http.match.scheme</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.uri</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.withoutHeaders</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.mirror</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.mirror.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.mirrorPercentage</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.http.redirect</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withDerivePort(derivePort)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withRedirectCode(redirectCode)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.retries</code></li> <li><code>fn withAttempts(attempts)</code></li> <li><code>fn withPerTryTimeout(perTryTimeout)</code></li> <li><code>fn withRetryOn(retryOn)</code></li> <li><code>fn withRetryRemoteLocalities(retryRemoteLocalities)</code></li> <li><code>obj spec.http.rewrite</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.http.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.route.headers</code><ul> <li><code>obj spec.http.route.headers.request</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> <li><code>obj spec.http.route.headers.response</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tcp</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tcp.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withSourceSubnet(sourceSubnet)</code></li> <li><code>obj spec.tcp.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tcp.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tcp.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tls</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tls.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSniHosts(sniHosts)</code></li> <li><code>fn withSniHostsMixin(sniHosts)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>obj spec.tls.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tls.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tls.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/virtualService/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of VirtualService</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithgateways","title":"fn spec.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithgatewaysmixin","title":"fn spec.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithhttp","title":"fn spec.withHttp","text":"<pre><code>withHttp(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithhttpmixin","title":"fn spec.withHttpMixin","text":"<pre><code>withHttpMixin(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithtcp","title":"fn spec.withTcp","text":"<pre><code>withTcp(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithtcpmixin","title":"fn spec.withTcpMixin","text":"<pre><code>withTcpMixin(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithtls","title":"fn spec.withTls","text":"<pre><code>withTls(tls)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-specwithtlsmixin","title":"fn spec.withTlsMixin","text":"<pre><code>withTlsMixin(tls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttp","title":"obj spec.http","text":"<p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithmatch","title":"fn spec.http.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithmatchmixin","title":"fn spec.http.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithmirrorpercent","title":"fn spec.http.withMirrorPercent","text":"<pre><code>withMirrorPercent(mirrorPercent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithmirror_percent","title":"fn spec.http.withMirror_percent","text":"<pre><code>withMirror_percent(mirror_percent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithname","title":"fn spec.http.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to the route for debugging purposes.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithroute","title":"fn spec.http.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithroutemixin","title":"fn spec.http.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpwithtimeout","title":"fn spec.http.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout for HTTP requests, default is disabled.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpcorspolicy","title":"obj spec.http.corsPolicy","text":"<p>\"Cross-Origin Resource Sharing policy (CORS).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowcredentials","title":"fn spec.http.corsPolicy.withAllowCredentials","text":"<pre><code>withAllowCredentials(allowCredentials)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowheaders","title":"fn spec.http.corsPolicy.withAllowHeaders","text":"<pre><code>withAllowHeaders(allowHeaders)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowheadersmixin","title":"fn spec.http.corsPolicy.withAllowHeadersMixin","text":"<pre><code>withAllowHeadersMixin(allowHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowmethods","title":"fn spec.http.corsPolicy.withAllowMethods","text":"<pre><code>withAllowMethods(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowmethodsmixin","title":"fn spec.http.corsPolicy.withAllowMethodsMixin","text":"<pre><code>withAllowMethodsMixin(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworigin","title":"fn spec.http.corsPolicy.withAllowOrigin","text":"<pre><code>withAllowOrigin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworiginmixin","title":"fn spec.http.corsPolicy.withAllowOriginMixin","text":"<pre><code>withAllowOriginMixin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworigins","title":"fn spec.http.corsPolicy.withAllowOrigins","text":"<pre><code>withAllowOrigins(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworiginsmixin","title":"fn spec.http.corsPolicy.withAllowOriginsMixin","text":"<pre><code>withAllowOriginsMixin(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithexposeheaders","title":"fn spec.http.corsPolicy.withExposeHeaders","text":"<pre><code>withExposeHeaders(exposeHeaders)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithexposeheadersmixin","title":"fn spec.http.corsPolicy.withExposeHeadersMixin","text":"<pre><code>withExposeHeadersMixin(exposeHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithmaxage","title":"fn spec.http.corsPolicy.withMaxAge","text":"<pre><code>withMaxAge(maxAge)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpcorspolicyalloworigins","title":"obj spec.http.corsPolicy.allowOrigins","text":"<p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicyalloworiginswithexact","title":"fn spec.http.corsPolicy.allowOrigins.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicyalloworiginswithprefix","title":"fn spec.http.corsPolicy.allowOrigins.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpcorspolicyalloworiginswithregex","title":"fn spec.http.corsPolicy.allowOrigins.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpdelegate","title":"obj spec.http.delegate","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpdelegatewithname","title":"fn spec.http.delegate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the delegate VirtualService.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpdelegatewithnamespace","title":"fn spec.http.delegate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace where the delegate VirtualService resides.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpdirectresponse","title":"obj spec.http.directResponse","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpdirectresponsebody","title":"obj spec.http.directResponse.body","text":"<p>\"Specifies the content of the response body.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpdirectresponsebodywithbytes","title":"fn spec.http.directResponse.body.withBytes","text":"<pre><code>withBytes(bytes)\n</code></pre> <p>\"response body as base64 encoded bytes.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpdirectresponsebodywithstring","title":"fn spec.http.directResponse.body.withString","text":"<pre><code>withString(string)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpfault","title":"obj spec.http.fault","text":"<p>\"Fault injection policy to apply on HTTP traffic at the client side.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpfaultabort","title":"obj spec.http.fault.abort","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultabortwithgrpcstatus","title":"fn spec.http.fault.abort.withGrpcStatus","text":"<pre><code>withGrpcStatus(grpcStatus)\n</code></pre> <p>\"GRPC status code to use to abort the request.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultabortwithhttp2error","title":"fn spec.http.fault.abort.withHttp2Error","text":"<pre><code>withHttp2Error(http2Error)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultabortwithhttpstatus","title":"fn spec.http.fault.abort.withHttpStatus","text":"<pre><code>withHttpStatus(httpStatus)\n</code></pre> <p>\"HTTP status code to use to abort the Http request.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpfaultabortpercentage","title":"obj spec.http.fault.abort.percentage","text":"<p>\"Percentage of requests to be aborted with the error code provided.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultabortpercentagewithvalue","title":"fn spec.http.fault.abort.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpfaultdelay","title":"obj spec.http.fault.delay","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaywithexponentialdelay","title":"fn spec.http.fault.delay.withExponentialDelay","text":"<pre><code>withExponentialDelay(exponentialDelay)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaywithfixeddelay","title":"fn spec.http.fault.delay.withFixedDelay","text":"<pre><code>withFixedDelay(fixedDelay)\n</code></pre> <p>\"Add a fixed delay before forwarding the request.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaywithpercent","title":"fn spec.http.fault.delay.withPercent","text":"<pre><code>withPercent(percent)\n</code></pre> <p>\"Percentage of requests on which the delay will be injected (0-100).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpfaultdelaypercentage","title":"obj spec.http.fault.delay.percentage","text":"<p>\"Percentage of requests on which the delay will be injected.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaypercentagewithvalue","title":"fn spec.http.fault.delay.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpheaders","title":"obj spec.http.headers","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpheadersrequest","title":"obj spec.http.headers.request","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithadd","title":"fn spec.http.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithaddmixin","title":"fn spec.http.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithremove","title":"fn spec.http.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithremovemixin","title":"fn spec.http.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithset","title":"fn spec.http.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithsetmixin","title":"fn spec.http.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpheadersresponse","title":"obj spec.http.headers.response","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithadd","title":"fn spec.http.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithaddmixin","title":"fn spec.http.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithremove","title":"fn spec.http.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithremovemixin","title":"fn spec.http.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithset","title":"fn spec.http.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithsetmixin","title":"fn spec.http.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatch","title":"obj spec.http.match","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithgateways","title":"fn spec.http.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithgatewaysmixin","title":"fn spec.http.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithheaders","title":"fn spec.http.match.withHeaders","text":"<pre><code>withHeaders(headers)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithheadersmixin","title":"fn spec.http.match.withHeadersMixin","text":"<pre><code>withHeadersMixin(headers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithignoreuricase","title":"fn spec.http.match.withIgnoreUriCase","text":"<pre><code>withIgnoreUriCase(ignoreUriCase)\n</code></pre> <p>\"Flag to specify whether the URI matching should be case-insensitive.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithname","title":"fn spec.http.match.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to a match.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithport","title":"fn spec.http.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the ports on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithqueryparams","title":"fn spec.http.match.withQueryParams","text":"<pre><code>withQueryParams(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithqueryparamsmixin","title":"fn spec.http.match.withQueryParamsMixin","text":"<pre><code>withQueryParamsMixin(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithsourcelabels","title":"fn spec.http.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithsourcelabelsmixin","title":"fn spec.http.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithsourcenamespace","title":"fn spec.http.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithstatprefix","title":"fn spec.http.match.withStatPrefix","text":"<pre><code>withStatPrefix(statPrefix)\n</code></pre> <p>\"The human readable prefix to use when emitting statistics for this route.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithwithoutheaders","title":"fn spec.http.match.withWithoutHeaders","text":"<pre><code>withWithoutHeaders(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithwithoutheadersmixin","title":"fn spec.http.match.withWithoutHeadersMixin","text":"<pre><code>withWithoutHeadersMixin(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchauthority","title":"obj spec.http.match.authority","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchauthoritywithexact","title":"fn spec.http.match.authority.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchauthoritywithprefix","title":"fn spec.http.match.authority.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchauthoritywithregex","title":"fn spec.http.match.authority.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchheaders","title":"obj spec.http.match.headers","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithexact","title":"fn spec.http.match.headers.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithexactmixin","title":"fn spec.http.match.headers.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithprefix","title":"fn spec.http.match.headers.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithprefixmixin","title":"fn spec.http.match.headers.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithregex","title":"fn spec.http.match.headers.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithregexmixin","title":"fn spec.http.match.headers.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchmethod","title":"obj spec.http.match.method","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchmethodwithexact","title":"fn spec.http.match.method.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchmethodwithprefix","title":"fn spec.http.match.method.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchmethodwithregex","title":"fn spec.http.match.method.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchqueryparams","title":"obj spec.http.match.queryParams","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithexact","title":"fn spec.http.match.queryParams.withExact","text":"<pre><code>withExact(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithexactmixin","title":"fn spec.http.match.queryParams.withExactMixin","text":"<pre><code>withExactMixin(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithregex","title":"fn spec.http.match.queryParams.withRegex","text":"<pre><code>withRegex(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithregexmixin","title":"fn spec.http.match.queryParams.withRegexMixin","text":"<pre><code>withRegexMixin(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchscheme","title":"obj spec.http.match.scheme","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchschemewithexact","title":"fn spec.http.match.scheme.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchschemewithprefix","title":"fn spec.http.match.scheme.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchschemewithregex","title":"fn spec.http.match.scheme.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchuri","title":"obj spec.http.match.uri","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchuriwithexact","title":"fn spec.http.match.uri.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchuriwithprefix","title":"fn spec.http.match.uri.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchuriwithregex","title":"fn spec.http.match.uri.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmatchwithoutheaders","title":"obj spec.http.match.withoutHeaders","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithexact","title":"fn spec.http.match.withoutHeaders.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithexactmixin","title":"fn spec.http.match.withoutHeaders.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithprefix","title":"fn spec.http.match.withoutHeaders.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithprefixmixin","title":"fn spec.http.match.withoutHeaders.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithregex","title":"fn spec.http.match.withoutHeaders.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithregexmixin","title":"fn spec.http.match.withoutHeaders.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmirror","title":"obj spec.http.mirror","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmirrorwithhost","title":"fn spec.http.mirror.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmirrorwithsubset","title":"fn spec.http.mirror.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmirrorport","title":"obj spec.http.mirror.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmirrorportwithnumber","title":"fn spec.http.mirror.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpmirrorpercentage","title":"obj spec.http.mirrorPercentage","text":"<p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpmirrorpercentagewithvalue","title":"fn spec.http.mirrorPercentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpredirect","title":"obj spec.http.redirect","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpredirectwithauthority","title":"fn spec.http.redirect.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpredirectwithderiveport","title":"fn spec.http.redirect.withDerivePort","text":"<pre><code>withDerivePort(derivePort)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpredirectwithport","title":"fn spec.http.redirect.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"On a redirect, overwrite the port portion of the URL with this value.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpredirectwithredirectcode","title":"fn spec.http.redirect.withRedirectCode","text":"<pre><code>withRedirectCode(redirectCode)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpredirectwithscheme","title":"fn spec.http.redirect.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre> <p>\"On a redirect, overwrite the scheme portion of the URL with this value.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpredirectwithuri","title":"fn spec.http.redirect.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttpretries","title":"obj spec.http.retries","text":"<p>\"Retry policy for HTTP requests.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpretrieswithattempts","title":"fn spec.http.retries.withAttempts","text":"<pre><code>withAttempts(attempts)\n</code></pre> <p>\"Number of retries to be allowed for a given request.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpretrieswithpertrytimeout","title":"fn spec.http.retries.withPerTryTimeout","text":"<pre><code>withPerTryTimeout(perTryTimeout)\n</code></pre> <p>\"Timeout per attempt for a given request, including the initial call and any retries.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpretrieswithretryon","title":"fn spec.http.retries.withRetryOn","text":"<pre><code>withRetryOn(retryOn)\n</code></pre> <p>\"Specifies the conditions under which retry takes place.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttpretrieswithretryremotelocalities","title":"fn spec.http.retries.withRetryRemoteLocalities","text":"<pre><code>withRetryRemoteLocalities(retryRemoteLocalities)\n</code></pre> <p>\"Flag to specify whether the retries should retry to other localities.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttprewrite","title":"obj spec.http.rewrite","text":"<p>\"Rewrite HTTP URIs and Authority headers.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprewritewithauthority","title":"fn spec.http.rewrite.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre> <p>\"rewrite the Authority/Host header with this value.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprewritewithuri","title":"fn spec.http.rewrite.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttproute","title":"obj spec.http.route","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttproutewithweight","title":"fn spec.http.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttproutedestination","title":"obj spec.http.route.destination","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttproutedestinationwithhost","title":"fn spec.http.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttproutedestinationwithsubset","title":"fn spec.http.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttproutedestinationport","title":"obj spec.http.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttproutedestinationportwithnumber","title":"fn spec.http.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttprouteheaders","title":"obj spec.http.route.headers","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttprouteheadersrequest","title":"obj spec.http.route.headers.request","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithadd","title":"fn spec.http.route.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithaddmixin","title":"fn spec.http.route.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithremove","title":"fn spec.http.route.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithremovemixin","title":"fn spec.http.route.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithset","title":"fn spec.http.route.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithsetmixin","title":"fn spec.http.route.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spechttprouteheadersresponse","title":"obj spec.http.route.headers.response","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithadd","title":"fn spec.http.route.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithaddmixin","title":"fn spec.http.route.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithremove","title":"fn spec.http.route.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithremovemixin","title":"fn spec.http.route.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithset","title":"fn spec.http.route.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithsetmixin","title":"fn spec.http.route.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectcp","title":"obj spec.tcp","text":"<p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpwithmatch","title":"fn spec.tcp.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpwithmatchmixin","title":"fn spec.tcp.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpwithroute","title":"fn spec.tcp.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpwithroutemixin","title":"fn spec.tcp.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectcpmatch","title":"obj spec.tcp.match","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithdestinationsubnets","title":"fn spec.tcp.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithdestinationsubnetsmixin","title":"fn spec.tcp.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithgateways","title":"fn spec.tcp.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithgatewaysmixin","title":"fn spec.tcp.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithport","title":"fn spec.tcp.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcelabels","title":"fn spec.tcp.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcelabelsmixin","title":"fn spec.tcp.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcenamespace","title":"fn spec.tcp.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcesubnet","title":"fn spec.tcp.match.withSourceSubnet","text":"<pre><code>withSourceSubnet(sourceSubnet)\n</code></pre> <p>\"IPv4 or IPv6 ip address of source with optional subnet.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectcproute","title":"obj spec.tcp.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcproutewithweight","title":"fn spec.tcp.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectcproutedestination","title":"obj spec.tcp.route.destination","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcproutedestinationwithhost","title":"fn spec.tcp.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcproutedestinationwithsubset","title":"fn spec.tcp.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectcproutedestinationport","title":"obj spec.tcp.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectcproutedestinationportwithnumber","title":"fn spec.tcp.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectls","title":"obj spec.tls","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlswithmatch","title":"fn spec.tls.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlswithmatchmixin","title":"fn spec.tls.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlswithroute","title":"fn spec.tls.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlswithroutemixin","title":"fn spec.tls.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectlsmatch","title":"obj spec.tls.match","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithdestinationsubnets","title":"fn spec.tls.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithdestinationsubnetsmixin","title":"fn spec.tls.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithgateways","title":"fn spec.tls.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithgatewaysmixin","title":"fn spec.tls.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithport","title":"fn spec.tls.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsnihosts","title":"fn spec.tls.match.withSniHosts","text":"<pre><code>withSniHosts(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsnihostsmixin","title":"fn spec.tls.match.withSniHostsMixin","text":"<pre><code>withSniHostsMixin(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsourcelabels","title":"fn spec.tls.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsourcelabelsmixin","title":"fn spec.tls.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsourcenamespace","title":"fn spec.tls.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectlsroute","title":"obj spec.tls.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsroutewithweight","title":"fn spec.tls.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectlsroutedestination","title":"obj spec.tls.route.destination","text":""},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsroutedestinationwithhost","title":"fn spec.tls.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsroutedestinationwithsubset","title":"fn spec.tls.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#obj-spectlsroutedestinationport","title":"obj spec.tls.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1alpha3/virtualService/#fn-spectlsroutedestinationportwithnumber","title":"fn spec.tls.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadEntry/","title":"networking.v1alpha3.workloadEntry","text":""},{"location":"1.17/networking/v1alpha3/workloadEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadEntry</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithaddress","title":"fn spec.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithlabels","title":"fn spec.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithlabelsmixin","title":"fn spec.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithlocality","title":"fn spec.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithnetwork","title":"fn spec.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithserviceaccount","title":"fn spec.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadEntry/#fn-specwithweight","title":"fn spec.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/","title":"networking.v1alpha3.workloadGroup","text":""},{"location":"1.17/networking/v1alpha3/workloadGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>obj spec.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.probe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.probe.exec</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>obj spec.probe.httpGet</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.probe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.probe.tcpSocket</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadGroup</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-spec","title":"obj spec","text":"<p>\"Describes a collection of workload instances. See more details at: https://istio.io/docs/reference/config/networking/workload-group.html\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-specmetadata","title":"obj spec.metadata","text":"<p>\"Metadata that will be used for all corresponding <code>WorkloadEntries</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specmetadatawithannotations","title":"fn spec.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specmetadatawithannotationsmixin","title":"fn spec.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specmetadatawithlabels","title":"fn spec.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specmetadatawithlabelsmixin","title":"fn spec.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-specprobe","title":"obj spec.probe","text":"<p>\"<code>ReadinessProbe</code> describes the configuration the user must provide for healthchecking on their workload.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobewithfailurethreshold","title":"fn spec.probe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre> <p>\"Minimum consecutive failures for the probe to be considered failed after having succeeded.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobewithinitialdelayseconds","title":"fn spec.probe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre> <p>\"Number of seconds after the container has started before readiness probes are initiated.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobewithperiodseconds","title":"fn spec.probe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre> <p>\"How often (in seconds) to perform the probe.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobewithsuccessthreshold","title":"fn spec.probe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre> <p>\"Minimum consecutive successes for the probe to be considered successful after having failed.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobewithtimeoutseconds","title":"fn spec.probe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre> <p>\"Number of seconds after which the probe times out.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-specprobeexec","title":"obj spec.probe.exec","text":"<p>\"Health is determined by how the command that is executed exited.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobeexecwithcommand","title":"fn spec.probe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre> <p>\"Command to run.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobeexecwithcommandmixin","title":"fn spec.probe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>\"Command to run.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-specprobehttpget","title":"obj spec.probe.httpGet","text":""},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithhost","title":"fn spec.probe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"Host name to connect to, defaults to the pod IP.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithhttpheaders","title":"fn spec.probe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithhttpheadersmixin","title":"fn spec.probe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithpath","title":"fn spec.probe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to access on the HTTP server.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithport","title":"fn spec.probe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Port on which the endpoint lives.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithscheme","title":"fn spec.probe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-specprobehttpgethttpheaders","title":"obj spec.probe.httpGet.httpHeaders","text":"<p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgethttpheaderswithname","title":"fn spec.probe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobehttpgethttpheaderswithvalue","title":"fn spec.probe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-specprobetcpsocket","title":"obj spec.probe.tcpSocket","text":"<p>\"Health is determined by if the proxy is able to connect.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobetcpsocketwithhost","title":"fn spec.probe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-specprobetcpsocketwithport","title":"fn spec.probe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template to be used for the generation of <code>WorkloadEntry</code> resources that belong to this <code>WorkloadGroup</code>.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithaddress","title":"fn spec.template.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithlabels","title":"fn spec.template.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithlabelsmixin","title":"fn spec.template.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithlocality","title":"fn spec.template.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithnetwork","title":"fn spec.template.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithports","title":"fn spec.template.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithportsmixin","title":"fn spec.template.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithserviceaccount","title":"fn spec.template.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.17/networking/v1alpha3/workloadGroup/#fn-spectemplatewithweight","title":"fn spec.template.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/","title":"networking.v1beta1","text":"<ul> <li>destinationRule</li> <li>gateway</li> <li>proxyConfig</li> <li>serviceEntry</li> <li>sidecar</li> <li>virtualService</li> <li>workloadEntry</li> <li>workloadGroup</li> </ul>"},{"location":"1.17/networking/v1beta1/destinationRule/","title":"networking.v1beta1.destinationRule","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubsets(subsets)</code></li> <li><code>fn withSubsetsMixin(subsets)</code></li> <li><code>obj spec.subsets</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.subsets.trafficPolicy</code></li> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool</code><ul> <li><code>obj spec.subsets.trafficPolicy.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings</code><ul> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.port</code></li> <li><code>fn withNumber(number)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tunnel</code><ul> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy</code><ul> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.trafficPolicy.connectionPool</code></li> <li><code>obj spec.trafficPolicy.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool</code><ul> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.trafficPolicy.tunnel</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/destinationRule/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DestinationRule</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specwithhost","title":"fn spec.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specwithsubsets","title":"fn spec.withSubsets","text":"<pre><code>withSubsets(subsets)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specwithsubsetsmixin","title":"fn spec.withSubsetsMixin","text":"<pre><code>withSubsetsMixin(subsets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsets","title":"obj spec.subsets","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetswithlabels","title":"fn spec.subsets.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetswithlabelsmixin","title":"fn spec.subsets.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetswithname","title":"fn spec.subsets.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the subset.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicy","title":"obj spec.subsets.trafficPolicy","text":"<p>\"Traffic policies that apply to this subset.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettings","title":"fn spec.subsets.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettingsmixin","title":"fn spec.subsets.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpool","title":"obj spec.subsets.trafficPolicy.connectionPool","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancer","title":"obj spec.subsets.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyoutlierdetection","title":"obj spec.subsets.trafficPolicy.outlierDetection","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettings","title":"obj spec.subsets.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsport","title":"obj spec.subsets.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.subsets.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingstls","title":"obj spec.subsets.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithmode","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsni","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicytls","title":"obj spec.subsets.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithcacertificates","title":"fn spec.subsets.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithcredentialname","title":"fn spec.subsets.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithmode","title":"fn spec.subsets.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithprivatekey","title":"fn spec.subsets.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithsni","title":"fn spec.subsets.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicytunnel","title":"obj spec.subsets.trafficPolicy.tunnel","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytunnelwithprotocol","title":"fn spec.subsets.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargethost","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargetport","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicy","title":"obj spec.trafficPolicy","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicywithportlevelsettings","title":"fn spec.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicywithportlevelsettingsmixin","title":"fn spec.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpool","title":"obj spec.trafficPolicy.connectionPool","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpoolhttp","title":"obj spec.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpooltcp","title":"obj spec.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancer","title":"obj spec.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerwithsimple","title":"fn spec.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyoutlierdetection","title":"obj spec.trafficPolicy.outlierDetection","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettings","title":"obj spec.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsport","title":"obj spec.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingstls","title":"obj spec.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithmode","title":"fn spec.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsni","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicytls","title":"obj spec.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithcacertificates","title":"fn spec.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithclientcertificate","title":"fn spec.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithcredentialname","title":"fn spec.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithinsecureskipverify","title":"fn spec.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithmode","title":"fn spec.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithprivatekey","title":"fn spec.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithsni","title":"fn spec.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnames","title":"fn spec.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-spectrafficpolicytunnel","title":"obj spec.trafficPolicy.tunnel","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytunnelwithprotocol","title":"fn spec.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytunnelwithtargethost","title":"fn spec.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-spectrafficpolicytunnelwithtargetport","title":"fn spec.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.17/networking/v1beta1/destinationRule/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specworkloadselectorwithmatchlabels","title":"fn spec.workloadSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/destinationRule/#fn-specworkloadselectorwithmatchlabelsmixin","title":"fn spec.workloadSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/","title":"networking.v1beta1.gateway","text":""},{"location":"1.17/networking/v1beta1/gateway/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> <li><code>fn withServers(servers)</code></li> <li><code>fn withServersMixin(servers)</code></li> <li><code>obj spec.servers</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.servers.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.servers.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/gateway/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/gateway/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Gateway</p>"},{"location":"1.17/networking/v1beta1/gateway/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specwithselectormixin","title":"fn spec.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specwithservers","title":"fn spec.withServers","text":"<pre><code>withServers(servers)\n</code></pre> <p>\"A list of server specifications.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specwithserversmixin","title":"fn spec.withServersMixin","text":"<pre><code>withServersMixin(servers)\n</code></pre> <p>\"A list of server specifications.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#obj-specservers","title":"obj spec.servers","text":"<p>\"A list of server specifications.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverswithbind","title":"fn spec.servers.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverswithdefaultendpoint","title":"fn spec.servers.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverswithhosts","title":"fn spec.servers.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverswithhostsmixin","title":"fn spec.servers.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverswithname","title":"fn spec.servers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"An optional name of the server, when set must be unique across all servers.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#obj-specserversport","title":"obj spec.servers.port","text":""},{"location":"1.17/networking/v1beta1/gateway/#fn-specserversportwithname","title":"fn spec.servers.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserversportwithnumber","title":"fn spec.servers.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserversportwithprotocol","title":"fn spec.servers.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserversportwithtargetport","title":"fn spec.servers.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#obj-specserverstls","title":"obj spec.servers.tls","text":"<p>\"Set of TLS related options that govern the server's behavior.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithcacertificates","title":"fn spec.servers.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithciphersuites","title":"fn spec.servers.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithciphersuitesmixin","title":"fn spec.servers.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithcredentialname","title":"fn spec.servers.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithhttpsredirect","title":"fn spec.servers.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithmaxprotocolversion","title":"fn spec.servers.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithminprotocolversion","title":"fn spec.servers.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithmode","title":"fn spec.servers.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithprivatekey","title":"fn spec.servers.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithservercertificate","title":"fn spec.servers.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithsubjectaltnames","title":"fn spec.servers.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithsubjectaltnamesmixin","title":"fn spec.servers.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatehash","title":"fn spec.servers.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatehashmixin","title":"fn spec.servers.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatespki","title":"fn spec.servers.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.17/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatespkimixin","title":"fn spec.servers.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/","title":"networking.v1beta1.proxyConfig","text":""},{"location":"1.17/networking/v1beta1/proxyConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConcurrency(concurrency)</code></li> <li><code>fn withEnvironmentVariables(environmentVariables)</code></li> <li><code>fn withEnvironmentVariablesMixin(environmentVariables)</code></li> <li><code>obj spec.image</code><ul> <li><code>fn withImageType(imageType)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ProxyConfig</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#obj-spec","title":"obj spec","text":"<p>\"Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-specwithconcurrency","title":"fn spec.withConcurrency","text":"<pre><code>withConcurrency(concurrency)\n</code></pre> <p>\"The number of worker threads to run.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-specwithenvironmentvariables","title":"fn spec.withEnvironmentVariables","text":"<pre><code>withEnvironmentVariables(environmentVariables)\n</code></pre> <p>\"Additional environment variables for the proxy.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-specwithenvironmentvariablesmixin","title":"fn spec.withEnvironmentVariablesMixin","text":"<pre><code>withEnvironmentVariablesMixin(environmentVariables)\n</code></pre> <p>\"Additional environment variables for the proxy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#obj-specimage","title":"obj spec.image","text":"<p>\"Specifies the details of the proxy image.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-specimagewithimagetype","title":"fn spec.image.withImageType","text":"<pre><code>withImageType(imageType)\n</code></pre> <p>\"The image type of the image.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/proxyConfig/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/","title":"networking.v1beta1.serviceEntry","text":""},{"location":"1.17/networking/v1beta1/serviceEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddresses(addresses)</code></li> <li><code>fn withAddressesMixin(addresses)</code></li> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withEndpointsMixin(endpoints)</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withLocation(location)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResolution(resolution)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.endpoints</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ServiceEntry</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithaddresses","title":"fn spec.withAddresses","text":"<pre><code>withAddresses(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithaddressesmixin","title":"fn spec.withAddressesMixin","text":"<pre><code>withAddressesMixin(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithendpoints","title":"fn spec.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithendpointsmixin","title":"fn spec.withEndpointsMixin","text":"<pre><code>withEndpointsMixin(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithlocation","title":"fn spec.withLocation","text":"<pre><code>withLocation(location)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithresolution","title":"fn spec.withResolution","text":"<pre><code>withResolution(resolution)\n</code></pre> <p>\"Service resolution mode for the hosts.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithsubjectaltnames","title":"fn spec.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specwithsubjectaltnamesmixin","title":"fn spec.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#obj-specendpoints","title":"obj spec.endpoints","text":"<p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithaddress","title":"fn spec.endpoints.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithlabels","title":"fn spec.endpoints.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithlabelsmixin","title":"fn spec.endpoints.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithlocality","title":"fn spec.endpoints.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithnetwork","title":"fn spec.endpoints.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithports","title":"fn spec.endpoints.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithportsmixin","title":"fn spec.endpoints.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithserviceaccount","title":"fn spec.endpoints.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specendpointswithweight","title":"fn spec.endpoints.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#obj-specports","title":"obj spec.ports","text":"<p>\"The ports associated with the external service.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specportswithnumber","title":"fn spec.ports.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specportswithtargetport","title":"fn spec.ports.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":"<p>\"Applicable only for MESH_INTERNAL services.\"</p>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/serviceEntry/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/","title":"networking.v1beta1.sidecar","text":""},{"location":"1.17/networking/v1beta1/sidecar/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>obj spec.egress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>obj spec.ingress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.ingress.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> <li><code>obj spec.outboundTrafficPolicy</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/sidecar/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/sidecar/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sidecar</p>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specegress","title":"obj spec.egress","text":""},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegresswithbind","title":"fn spec.egress.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegresswithcapturemode","title":"fn spec.egress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegresswithhosts","title":"fn spec.egress.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegresswithhostsmixin","title":"fn spec.egress.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specegressport","title":"obj spec.egress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegressportwithname","title":"fn spec.egress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegressportwithnumber","title":"fn spec.egress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegressportwithprotocol","title":"fn spec.egress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specegressportwithtargetport","title":"fn spec.egress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specingress","title":"obj spec.ingress","text":""},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresswithbind","title":"fn spec.ingress.withBind","text":"<pre><code>withBind(bind)\n</code></pre> <p>\"The IP(IPv4 or IPv6) to which the listener should be bound.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresswithcapturemode","title":"fn spec.ingress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresswithdefaultendpoint","title":"fn spec.ingress.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specingressport","title":"obj spec.ingress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingressportwithname","title":"fn spec.ingress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingressportwithnumber","title":"fn spec.ingress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingressportwithprotocol","title":"fn spec.ingress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingressportwithtargetport","title":"fn spec.ingress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specingresstls","title":"obj spec.ingress.tls","text":""},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithcacertificates","title":"fn spec.ingress.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithciphersuites","title":"fn spec.ingress.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithciphersuitesmixin","title":"fn spec.ingress.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithcredentialname","title":"fn spec.ingress.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithhttpsredirect","title":"fn spec.ingress.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithmaxprotocolversion","title":"fn spec.ingress.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithminprotocolversion","title":"fn spec.ingress.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithmode","title":"fn spec.ingress.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithprivatekey","title":"fn spec.ingress.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithservercertificate","title":"fn spec.ingress.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithsubjectaltnames","title":"fn spec.ingress.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithsubjectaltnamesmixin","title":"fn spec.ingress.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatehash","title":"fn spec.ingress.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatehashmixin","title":"fn spec.ingress.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatespki","title":"fn spec.ingress.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatespkimixin","title":"fn spec.ingress.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specoutboundtrafficpolicy","title":"obj spec.outboundTrafficPolicy","text":"<p>\"Configuration for the outbound traffic policy.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicywithmode","title":"fn spec.outboundTrafficPolicy.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specoutboundtrafficpolicyegressproxy","title":"obj spec.outboundTrafficPolicy.egressProxy","text":""},{"location":"1.17/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicyegressproxywithhost","title":"fn spec.outboundTrafficPolicy.egressProxy.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicyegressproxywithsubset","title":"fn spec.outboundTrafficPolicy.egressProxy.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specoutboundtrafficpolicyegressproxyport","title":"obj spec.outboundTrafficPolicy.egressProxy.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicyegressproxyportwithnumber","title":"fn spec.outboundTrafficPolicy.egressProxy.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.17/networking/v1beta1/sidecar/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/sidecar/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/","title":"networking.v1beta1.virtualService","text":""},{"location":"1.17/networking/v1beta1/virtualService/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withHttp(http)</code></li> <li><code>fn withHttpMixin(http)</code></li> <li><code>fn withTcp(tcp)</code></li> <li><code>fn withTcpMixin(tcp)</code></li> <li><code>fn withTls(tls)</code></li> <li><code>fn withTlsMixin(tls)</code></li> <li><code>obj spec.http</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withMirrorPercent(mirrorPercent)</code></li> <li><code>fn withMirror_percent(mirror_percent)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>obj spec.http.corsPolicy</code></li> <li><code>fn withAllowCredentials(allowCredentials)</code></li> <li><code>fn withAllowHeaders(allowHeaders)</code></li> <li><code>fn withAllowHeadersMixin(allowHeaders)</code></li> <li><code>fn withAllowMethods(allowMethods)</code></li> <li><code>fn withAllowMethodsMixin(allowMethods)</code></li> <li><code>fn withAllowOrigin(allowOrigin)</code></li> <li><code>fn withAllowOriginMixin(allowOrigin)</code></li> <li><code>fn withAllowOrigins(allowOrigins)</code></li> <li><code>fn withAllowOriginsMixin(allowOrigins)</code></li> <li><code>fn withExposeHeaders(exposeHeaders)</code></li> <li><code>fn withExposeHeadersMixin(exposeHeaders)</code></li> <li><code>fn withMaxAge(maxAge)</code></li> <li><code>obj spec.http.corsPolicy.allowOrigins</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.delegate</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.http.directResponse</code></li> <li><code>obj spec.http.directResponse.body</code><ul> <li><code>fn withBytes(bytes)</code></li> <li><code>fn withString(string)</code></li> </ul> </li> <li><code>obj spec.http.fault</code></li> <li><code>obj spec.http.fault.abort</code><ul> <li><code>fn withGrpcStatus(grpcStatus)</code></li> <li><code>fn withHttp2Error(http2Error)</code></li> <li><code>fn withHttpStatus(httpStatus)</code></li> <li><code>obj spec.http.fault.abort.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.fault.delay</code><ul> <li><code>fn withExponentialDelay(exponentialDelay)</code></li> <li><code>fn withFixedDelay(fixedDelay)</code></li> <li><code>fn withPercent(percent)</code></li> <li><code>obj spec.http.fault.delay.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.headers</code></li> <li><code>obj spec.http.headers.request</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.headers.response</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.match</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHeaders(headers)</code></li> <li><code>fn withHeadersMixin(headers)</code></li> <li><code>fn withIgnoreUriCase(ignoreUriCase)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withQueryParams(queryParams)</code></li> <li><code>fn withQueryParamsMixin(queryParams)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withStatPrefix(statPrefix)</code></li> <li><code>fn withWithoutHeaders(withoutHeaders)</code></li> <li><code>fn withWithoutHeadersMixin(withoutHeaders)</code></li> <li><code>obj spec.http.match.authority</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.headers</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.match.method</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.queryParams</code><ul> <li><code>fn withExact(key, value)</code></li> <li><code>fn withExactMixin(key, value)</code></li> <li><code>fn withRegex(key, value)</code></li> <li><code>fn withRegexMixin(key, value)</code></li> </ul> </li> <li><code>obj spec.http.match.scheme</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.uri</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.withoutHeaders</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.mirror</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.mirror.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.mirrorPercentage</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.http.redirect</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withDerivePort(derivePort)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withRedirectCode(redirectCode)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.retries</code></li> <li><code>fn withAttempts(attempts)</code></li> <li><code>fn withPerTryTimeout(perTryTimeout)</code></li> <li><code>fn withRetryOn(retryOn)</code></li> <li><code>fn withRetryRemoteLocalities(retryRemoteLocalities)</code></li> <li><code>obj spec.http.rewrite</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.http.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.route.headers</code><ul> <li><code>obj spec.http.route.headers.request</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> <li><code>obj spec.http.route.headers.response</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tcp</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tcp.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withSourceSubnet(sourceSubnet)</code></li> <li><code>obj spec.tcp.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tcp.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tcp.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tls</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tls.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSniHosts(sniHosts)</code></li> <li><code>fn withSniHostsMixin(sniHosts)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>obj spec.tls.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tls.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tls.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/virtualService/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of VirtualService</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithgateways","title":"fn spec.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithgatewaysmixin","title":"fn spec.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithhttp","title":"fn spec.withHttp","text":"<pre><code>withHttp(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithhttpmixin","title":"fn spec.withHttpMixin","text":"<pre><code>withHttpMixin(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithtcp","title":"fn spec.withTcp","text":"<pre><code>withTcp(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithtcpmixin","title":"fn spec.withTcpMixin","text":"<pre><code>withTcpMixin(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithtls","title":"fn spec.withTls","text":"<pre><code>withTls(tls)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-specwithtlsmixin","title":"fn spec.withTlsMixin","text":"<pre><code>withTlsMixin(tls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttp","title":"obj spec.http","text":"<p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithmatch","title":"fn spec.http.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithmatchmixin","title":"fn spec.http.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithmirrorpercent","title":"fn spec.http.withMirrorPercent","text":"<pre><code>withMirrorPercent(mirrorPercent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithmirror_percent","title":"fn spec.http.withMirror_percent","text":"<pre><code>withMirror_percent(mirror_percent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithname","title":"fn spec.http.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to the route for debugging purposes.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithroute","title":"fn spec.http.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithroutemixin","title":"fn spec.http.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpwithtimeout","title":"fn spec.http.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout for HTTP requests, default is disabled.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpcorspolicy","title":"obj spec.http.corsPolicy","text":"<p>\"Cross-Origin Resource Sharing policy (CORS).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowcredentials","title":"fn spec.http.corsPolicy.withAllowCredentials","text":"<pre><code>withAllowCredentials(allowCredentials)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowheaders","title":"fn spec.http.corsPolicy.withAllowHeaders","text":"<pre><code>withAllowHeaders(allowHeaders)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowheadersmixin","title":"fn spec.http.corsPolicy.withAllowHeadersMixin","text":"<pre><code>withAllowHeadersMixin(allowHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowmethods","title":"fn spec.http.corsPolicy.withAllowMethods","text":"<pre><code>withAllowMethods(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowmethodsmixin","title":"fn spec.http.corsPolicy.withAllowMethodsMixin","text":"<pre><code>withAllowMethodsMixin(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworigin","title":"fn spec.http.corsPolicy.withAllowOrigin","text":"<pre><code>withAllowOrigin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworiginmixin","title":"fn spec.http.corsPolicy.withAllowOriginMixin","text":"<pre><code>withAllowOriginMixin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworigins","title":"fn spec.http.corsPolicy.withAllowOrigins","text":"<pre><code>withAllowOrigins(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworiginsmixin","title":"fn spec.http.corsPolicy.withAllowOriginsMixin","text":"<pre><code>withAllowOriginsMixin(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithexposeheaders","title":"fn spec.http.corsPolicy.withExposeHeaders","text":"<pre><code>withExposeHeaders(exposeHeaders)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithexposeheadersmixin","title":"fn spec.http.corsPolicy.withExposeHeadersMixin","text":"<pre><code>withExposeHeadersMixin(exposeHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithmaxage","title":"fn spec.http.corsPolicy.withMaxAge","text":"<pre><code>withMaxAge(maxAge)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpcorspolicyalloworigins","title":"obj spec.http.corsPolicy.allowOrigins","text":"<p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicyalloworiginswithexact","title":"fn spec.http.corsPolicy.allowOrigins.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicyalloworiginswithprefix","title":"fn spec.http.corsPolicy.allowOrigins.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpcorspolicyalloworiginswithregex","title":"fn spec.http.corsPolicy.allowOrigins.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpdelegate","title":"obj spec.http.delegate","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpdelegatewithname","title":"fn spec.http.delegate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the delegate VirtualService.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpdelegatewithnamespace","title":"fn spec.http.delegate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace where the delegate VirtualService resides.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpdirectresponse","title":"obj spec.http.directResponse","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpdirectresponsebody","title":"obj spec.http.directResponse.body","text":"<p>\"Specifies the content of the response body.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpdirectresponsebodywithbytes","title":"fn spec.http.directResponse.body.withBytes","text":"<pre><code>withBytes(bytes)\n</code></pre> <p>\"response body as base64 encoded bytes.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpdirectresponsebodywithstring","title":"fn spec.http.directResponse.body.withString","text":"<pre><code>withString(string)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpfault","title":"obj spec.http.fault","text":"<p>\"Fault injection policy to apply on HTTP traffic at the client side.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpfaultabort","title":"obj spec.http.fault.abort","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultabortwithgrpcstatus","title":"fn spec.http.fault.abort.withGrpcStatus","text":"<pre><code>withGrpcStatus(grpcStatus)\n</code></pre> <p>\"GRPC status code to use to abort the request.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultabortwithhttp2error","title":"fn spec.http.fault.abort.withHttp2Error","text":"<pre><code>withHttp2Error(http2Error)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultabortwithhttpstatus","title":"fn spec.http.fault.abort.withHttpStatus","text":"<pre><code>withHttpStatus(httpStatus)\n</code></pre> <p>\"HTTP status code to use to abort the Http request.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpfaultabortpercentage","title":"obj spec.http.fault.abort.percentage","text":"<p>\"Percentage of requests to be aborted with the error code provided.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultabortpercentagewithvalue","title":"fn spec.http.fault.abort.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpfaultdelay","title":"obj spec.http.fault.delay","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultdelaywithexponentialdelay","title":"fn spec.http.fault.delay.withExponentialDelay","text":"<pre><code>withExponentialDelay(exponentialDelay)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultdelaywithfixeddelay","title":"fn spec.http.fault.delay.withFixedDelay","text":"<pre><code>withFixedDelay(fixedDelay)\n</code></pre> <p>\"Add a fixed delay before forwarding the request.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultdelaywithpercent","title":"fn spec.http.fault.delay.withPercent","text":"<pre><code>withPercent(percent)\n</code></pre> <p>\"Percentage of requests on which the delay will be injected (0-100).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpfaultdelaypercentage","title":"obj spec.http.fault.delay.percentage","text":"<p>\"Percentage of requests on which the delay will be injected.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpfaultdelaypercentagewithvalue","title":"fn spec.http.fault.delay.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpheaders","title":"obj spec.http.headers","text":""},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpheadersrequest","title":"obj spec.http.headers.request","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithadd","title":"fn spec.http.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithaddmixin","title":"fn spec.http.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithremove","title":"fn spec.http.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithremovemixin","title":"fn spec.http.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithset","title":"fn spec.http.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithsetmixin","title":"fn spec.http.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpheadersresponse","title":"obj spec.http.headers.response","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithadd","title":"fn spec.http.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithaddmixin","title":"fn spec.http.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithremove","title":"fn spec.http.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithremovemixin","title":"fn spec.http.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithset","title":"fn spec.http.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithsetmixin","title":"fn spec.http.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatch","title":"obj spec.http.match","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithgateways","title":"fn spec.http.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithgatewaysmixin","title":"fn spec.http.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithheaders","title":"fn spec.http.match.withHeaders","text":"<pre><code>withHeaders(headers)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithheadersmixin","title":"fn spec.http.match.withHeadersMixin","text":"<pre><code>withHeadersMixin(headers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithignoreuricase","title":"fn spec.http.match.withIgnoreUriCase","text":"<pre><code>withIgnoreUriCase(ignoreUriCase)\n</code></pre> <p>\"Flag to specify whether the URI matching should be case-insensitive.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithname","title":"fn spec.http.match.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to a match.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithport","title":"fn spec.http.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the ports on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithqueryparams","title":"fn spec.http.match.withQueryParams","text":"<pre><code>withQueryParams(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithqueryparamsmixin","title":"fn spec.http.match.withQueryParamsMixin","text":"<pre><code>withQueryParamsMixin(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithsourcelabels","title":"fn spec.http.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithsourcelabelsmixin","title":"fn spec.http.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithsourcenamespace","title":"fn spec.http.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithstatprefix","title":"fn spec.http.match.withStatPrefix","text":"<pre><code>withStatPrefix(statPrefix)\n</code></pre> <p>\"The human readable prefix to use when emitting statistics for this route.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithwithoutheaders","title":"fn spec.http.match.withWithoutHeaders","text":"<pre><code>withWithoutHeaders(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithwithoutheadersmixin","title":"fn spec.http.match.withWithoutHeadersMixin","text":"<pre><code>withWithoutHeadersMixin(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchauthority","title":"obj spec.http.match.authority","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchauthoritywithexact","title":"fn spec.http.match.authority.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchauthoritywithprefix","title":"fn spec.http.match.authority.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchauthoritywithregex","title":"fn spec.http.match.authority.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchheaders","title":"obj spec.http.match.headers","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithexact","title":"fn spec.http.match.headers.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithexactmixin","title":"fn spec.http.match.headers.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithprefix","title":"fn spec.http.match.headers.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithprefixmixin","title":"fn spec.http.match.headers.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithregex","title":"fn spec.http.match.headers.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithregexmixin","title":"fn spec.http.match.headers.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchmethod","title":"obj spec.http.match.method","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchmethodwithexact","title":"fn spec.http.match.method.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchmethodwithprefix","title":"fn spec.http.match.method.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchmethodwithregex","title":"fn spec.http.match.method.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchqueryparams","title":"obj spec.http.match.queryParams","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithexact","title":"fn spec.http.match.queryParams.withExact","text":"<pre><code>withExact(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithexactmixin","title":"fn spec.http.match.queryParams.withExactMixin","text":"<pre><code>withExactMixin(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithregex","title":"fn spec.http.match.queryParams.withRegex","text":"<pre><code>withRegex(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithregexmixin","title":"fn spec.http.match.queryParams.withRegexMixin","text":"<pre><code>withRegexMixin(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchscheme","title":"obj spec.http.match.scheme","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchschemewithexact","title":"fn spec.http.match.scheme.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchschemewithprefix","title":"fn spec.http.match.scheme.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchschemewithregex","title":"fn spec.http.match.scheme.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchuri","title":"obj spec.http.match.uri","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchuriwithexact","title":"fn spec.http.match.uri.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchuriwithprefix","title":"fn spec.http.match.uri.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchuriwithregex","title":"fn spec.http.match.uri.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmatchwithoutheaders","title":"obj spec.http.match.withoutHeaders","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithexact","title":"fn spec.http.match.withoutHeaders.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithexactmixin","title":"fn spec.http.match.withoutHeaders.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithprefix","title":"fn spec.http.match.withoutHeaders.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithprefixmixin","title":"fn spec.http.match.withoutHeaders.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithregex","title":"fn spec.http.match.withoutHeaders.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithregexmixin","title":"fn spec.http.match.withoutHeaders.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmirror","title":"obj spec.http.mirror","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmirrorwithhost","title":"fn spec.http.mirror.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmirrorwithsubset","title":"fn spec.http.mirror.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmirrorport","title":"obj spec.http.mirror.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmirrorportwithnumber","title":"fn spec.http.mirror.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpmirrorpercentage","title":"obj spec.http.mirrorPercentage","text":"<p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpmirrorpercentagewithvalue","title":"fn spec.http.mirrorPercentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpredirect","title":"obj spec.http.redirect","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpredirectwithauthority","title":"fn spec.http.redirect.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpredirectwithderiveport","title":"fn spec.http.redirect.withDerivePort","text":"<pre><code>withDerivePort(derivePort)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpredirectwithport","title":"fn spec.http.redirect.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"On a redirect, overwrite the port portion of the URL with this value.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpredirectwithredirectcode","title":"fn spec.http.redirect.withRedirectCode","text":"<pre><code>withRedirectCode(redirectCode)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpredirectwithscheme","title":"fn spec.http.redirect.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre> <p>\"On a redirect, overwrite the scheme portion of the URL with this value.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpredirectwithuri","title":"fn spec.http.redirect.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttpretries","title":"obj spec.http.retries","text":"<p>\"Retry policy for HTTP requests.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpretrieswithattempts","title":"fn spec.http.retries.withAttempts","text":"<pre><code>withAttempts(attempts)\n</code></pre> <p>\"Number of retries to be allowed for a given request.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpretrieswithpertrytimeout","title":"fn spec.http.retries.withPerTryTimeout","text":"<pre><code>withPerTryTimeout(perTryTimeout)\n</code></pre> <p>\"Timeout per attempt for a given request, including the initial call and any retries.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpretrieswithretryon","title":"fn spec.http.retries.withRetryOn","text":"<pre><code>withRetryOn(retryOn)\n</code></pre> <p>\"Specifies the conditions under which retry takes place.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttpretrieswithretryremotelocalities","title":"fn spec.http.retries.withRetryRemoteLocalities","text":"<pre><code>withRetryRemoteLocalities(retryRemoteLocalities)\n</code></pre> <p>\"Flag to specify whether the retries should retry to other localities.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttprewrite","title":"obj spec.http.rewrite","text":"<p>\"Rewrite HTTP URIs and Authority headers.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprewritewithauthority","title":"fn spec.http.rewrite.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre> <p>\"rewrite the Authority/Host header with this value.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprewritewithuri","title":"fn spec.http.rewrite.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttproute","title":"obj spec.http.route","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttproutewithweight","title":"fn spec.http.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttproutedestination","title":"obj spec.http.route.destination","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttproutedestinationwithhost","title":"fn spec.http.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttproutedestinationwithsubset","title":"fn spec.http.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttproutedestinationport","title":"obj spec.http.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttproutedestinationportwithnumber","title":"fn spec.http.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttprouteheaders","title":"obj spec.http.route.headers","text":""},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttprouteheadersrequest","title":"obj spec.http.route.headers.request","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithadd","title":"fn spec.http.route.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithaddmixin","title":"fn spec.http.route.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithremove","title":"fn spec.http.route.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithremovemixin","title":"fn spec.http.route.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithset","title":"fn spec.http.route.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithsetmixin","title":"fn spec.http.route.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spechttprouteheadersresponse","title":"obj spec.http.route.headers.response","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithadd","title":"fn spec.http.route.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithaddmixin","title":"fn spec.http.route.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithremove","title":"fn spec.http.route.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithremovemixin","title":"fn spec.http.route.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithset","title":"fn spec.http.route.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithsetmixin","title":"fn spec.http.route.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectcp","title":"obj spec.tcp","text":"<p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpwithmatch","title":"fn spec.tcp.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpwithmatchmixin","title":"fn spec.tcp.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpwithroute","title":"fn spec.tcp.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpwithroutemixin","title":"fn spec.tcp.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectcpmatch","title":"obj spec.tcp.match","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithdestinationsubnets","title":"fn spec.tcp.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithdestinationsubnetsmixin","title":"fn spec.tcp.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithgateways","title":"fn spec.tcp.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithgatewaysmixin","title":"fn spec.tcp.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithport","title":"fn spec.tcp.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcelabels","title":"fn spec.tcp.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcelabelsmixin","title":"fn spec.tcp.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcenamespace","title":"fn spec.tcp.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcesubnet","title":"fn spec.tcp.match.withSourceSubnet","text":"<pre><code>withSourceSubnet(sourceSubnet)\n</code></pre> <p>\"IPv4 or IPv6 ip address of source with optional subnet.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectcproute","title":"obj spec.tcp.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcproutewithweight","title":"fn spec.tcp.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectcproutedestination","title":"obj spec.tcp.route.destination","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcproutedestinationwithhost","title":"fn spec.tcp.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcproutedestinationwithsubset","title":"fn spec.tcp.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectcproutedestinationport","title":"obj spec.tcp.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectcproutedestinationportwithnumber","title":"fn spec.tcp.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectls","title":"obj spec.tls","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlswithmatch","title":"fn spec.tls.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlswithmatchmixin","title":"fn spec.tls.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlswithroute","title":"fn spec.tls.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlswithroutemixin","title":"fn spec.tls.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectlsmatch","title":"obj spec.tls.match","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithdestinationsubnets","title":"fn spec.tls.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithdestinationsubnetsmixin","title":"fn spec.tls.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithgateways","title":"fn spec.tls.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithgatewaysmixin","title":"fn spec.tls.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithport","title":"fn spec.tls.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithsnihosts","title":"fn spec.tls.match.withSniHosts","text":"<pre><code>withSniHosts(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithsnihostsmixin","title":"fn spec.tls.match.withSniHostsMixin","text":"<pre><code>withSniHostsMixin(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithsourcelabels","title":"fn spec.tls.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithsourcelabelsmixin","title":"fn spec.tls.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsmatchwithsourcenamespace","title":"fn spec.tls.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectlsroute","title":"obj spec.tls.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsroutewithweight","title":"fn spec.tls.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectlsroutedestination","title":"obj spec.tls.route.destination","text":""},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsroutedestinationwithhost","title":"fn spec.tls.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsroutedestinationwithsubset","title":"fn spec.tls.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#obj-spectlsroutedestinationport","title":"obj spec.tls.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.17/networking/v1beta1/virtualService/#fn-spectlsroutedestinationportwithnumber","title":"fn spec.tls.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadEntry/","title":"networking.v1beta1.workloadEntry","text":""},{"location":"1.17/networking/v1beta1/workloadEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadEntry</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithaddress","title":"fn spec.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithlabels","title":"fn spec.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithlabelsmixin","title":"fn spec.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithlocality","title":"fn spec.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithnetwork","title":"fn spec.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithserviceaccount","title":"fn spec.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadEntry/#fn-specwithweight","title":"fn spec.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/","title":"networking.v1beta1.workloadGroup","text":""},{"location":"1.17/networking/v1beta1/workloadGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>obj spec.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.probe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.probe.exec</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>obj spec.probe.httpGet</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.probe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.probe.tcpSocket</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> </ul>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fields","title":"Fields","text":""},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadGroup</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-spec","title":"obj spec","text":""},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-specmetadata","title":"obj spec.metadata","text":"<p>\"Metadata that will be used for all corresponding <code>WorkloadEntries</code>.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specmetadatawithannotations","title":"fn spec.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specmetadatawithannotationsmixin","title":"fn spec.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specmetadatawithlabels","title":"fn spec.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specmetadatawithlabelsmixin","title":"fn spec.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-specprobe","title":"obj spec.probe","text":"<p>\"<code>ReadinessProbe</code> describes the configuration the user must provide for healthchecking on their workload.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobewithfailurethreshold","title":"fn spec.probe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre> <p>\"Minimum consecutive failures for the probe to be considered failed after having succeeded.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobewithinitialdelayseconds","title":"fn spec.probe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre> <p>\"Number of seconds after the container has started before readiness probes are initiated.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobewithperiodseconds","title":"fn spec.probe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre> <p>\"How often (in seconds) to perform the probe.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobewithsuccessthreshold","title":"fn spec.probe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre> <p>\"Minimum consecutive successes for the probe to be considered successful after having failed.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobewithtimeoutseconds","title":"fn spec.probe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre> <p>\"Number of seconds after which the probe times out.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-specprobeexec","title":"obj spec.probe.exec","text":"<p>\"Health is determined by how the command that is executed exited.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobeexecwithcommand","title":"fn spec.probe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre> <p>\"Command to run.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobeexecwithcommandmixin","title":"fn spec.probe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>\"Command to run.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-specprobehttpget","title":"obj spec.probe.httpGet","text":""},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithhost","title":"fn spec.probe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"Host name to connect to, defaults to the pod IP.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithhttpheaders","title":"fn spec.probe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithhttpheadersmixin","title":"fn spec.probe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithpath","title":"fn spec.probe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to access on the HTTP server.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithport","title":"fn spec.probe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Port on which the endpoint lives.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithscheme","title":"fn spec.probe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-specprobehttpgethttpheaders","title":"obj spec.probe.httpGet.httpHeaders","text":"<p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgethttpheaderswithname","title":"fn spec.probe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobehttpgethttpheaderswithvalue","title":"fn spec.probe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-specprobetcpsocket","title":"obj spec.probe.tcpSocket","text":"<p>\"Health is determined by if the proxy is able to connect.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobetcpsocketwithhost","title":"fn spec.probe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-specprobetcpsocketwithport","title":"fn spec.probe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template to be used for the generation of <code>WorkloadEntry</code> resources that belong to this <code>WorkloadGroup</code>.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithaddress","title":"fn spec.template.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithlabels","title":"fn spec.template.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithlabelsmixin","title":"fn spec.template.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithlocality","title":"fn spec.template.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithnetwork","title":"fn spec.template.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithports","title":"fn spec.template.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithportsmixin","title":"fn spec.template.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithserviceaccount","title":"fn spec.template.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.17/networking/v1beta1/workloadGroup/#fn-spectemplatewithweight","title":"fn spec.template.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.17/security/","title":"security","text":"<ul> <li>v1</li> <li>v1beta1</li> </ul>"},{"location":"1.17/security/v1/","title":"security.v1","text":"<ul> <li>authorizationPolicy</li> <li>requestAuthentication</li> </ul>"},{"location":"1.17/security/v1/authorizationPolicy/","title":"security.v1.authorizationPolicy","text":""},{"location":"1.17/security/v1/authorizationPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAction(action)</code></li> <li><code>fn withRules(rules)</code></li> <li><code>fn withRulesMixin(rules)</code></li> <li><code>obj spec.provider</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.rules</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withFromMixin(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>fn withWhen(when)</code></li> <li><code>fn withWhenMixin(when)</code></li> <li><code>obj spec.rules.from</code></li> <li><code>obj spec.rules.from.source</code><ul> <li><code>fn withIpBlocks(ipBlocks)</code></li> <li><code>fn withIpBlocksMixin(ipBlocks)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withNotIpBlocks(notIpBlocks)</code></li> <li><code>fn withNotIpBlocksMixin(notIpBlocks)</code></li> <li><code>fn withNotNamespaces(notNamespaces)</code></li> <li><code>fn withNotNamespacesMixin(notNamespaces)</code></li> <li><code>fn withNotPrincipals(notPrincipals)</code></li> <li><code>fn withNotPrincipalsMixin(notPrincipals)</code></li> <li><code>fn withNotRemoteIpBlocks(notRemoteIpBlocks)</code></li> <li><code>fn withNotRemoteIpBlocksMixin(notRemoteIpBlocks)</code></li> <li><code>fn withNotRequestPrincipals(notRequestPrincipals)</code></li> <li><code>fn withNotRequestPrincipalsMixin(notRequestPrincipals)</code></li> <li><code>fn withPrincipals(principals)</code></li> <li><code>fn withPrincipalsMixin(principals)</code></li> <li><code>fn withRemoteIpBlocks(remoteIpBlocks)</code></li> <li><code>fn withRemoteIpBlocksMixin(remoteIpBlocks)</code></li> <li><code>fn withRequestPrincipals(requestPrincipals)</code></li> <li><code>fn withRequestPrincipalsMixin(requestPrincipals)</code></li> </ul> </li> <li><code>obj spec.rules.to</code></li> <li><code>obj spec.rules.to.operation</code><ul> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withNotHosts(notHosts)</code></li> <li><code>fn withNotHostsMixin(notHosts)</code></li> <li><code>fn withNotMethods(notMethods)</code></li> <li><code>fn withNotMethodsMixin(notMethods)</code></li> <li><code>fn withNotPaths(notPaths)</code></li> <li><code>fn withNotPathsMixin(notPaths)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> </ul> </li> <li><code>obj spec.rules.when</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withNotValues(notValues)</code></li> <li><code>fn withNotValuesMixin(notValues)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/security/v1/authorizationPolicy/#fields","title":"Fields","text":""},{"location":"1.17/security/v1/authorizationPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of AuthorizationPolicy</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-spec","title":"obj spec","text":"<p>\"Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specwithaction","title":"fn spec.withAction","text":"<pre><code>withAction(action)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specwithrules","title":"fn spec.withRules","text":"<pre><code>withRules(rules)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specwithrulesmixin","title":"fn spec.withRulesMixin","text":"<pre><code>withRulesMixin(rules)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specprovider","title":"obj spec.provider","text":"<p>\"Specifies detailed configuration of the CUSTOM action.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specproviderwithname","title":"fn spec.provider.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Specifies the name of the extension provider.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specrules","title":"obj spec.rules","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswithfrom","title":"fn spec.rules.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswithfrommixin","title":"fn spec.rules.withFromMixin","text":"<pre><code>withFromMixin(from)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswithto","title":"fn spec.rules.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswithtomixin","title":"fn spec.rules.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswithwhen","title":"fn spec.rules.withWhen","text":"<pre><code>withWhen(when)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswithwhenmixin","title":"fn spec.rules.withWhenMixin","text":"<pre><code>withWhenMixin(when)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specrulesfrom","title":"obj spec.rules.from","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specrulesfromsource","title":"obj spec.rules.from.source","text":"<p>\"Source specifies the source of a request.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithipblocks","title":"fn spec.rules.from.source.withIpBlocks","text":"<pre><code>withIpBlocks(ipBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithipblocksmixin","title":"fn spec.rules.from.source.withIpBlocksMixin","text":"<pre><code>withIpBlocksMixin(ipBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnamespaces","title":"fn spec.rules.from.source.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnamespacesmixin","title":"fn spec.rules.from.source.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocks","title":"fn spec.rules.from.source.withNotIpBlocks","text":"<pre><code>withNotIpBlocks(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocksmixin","title":"fn spec.rules.from.source.withNotIpBlocksMixin","text":"<pre><code>withNotIpBlocksMixin(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespaces","title":"fn spec.rules.from.source.withNotNamespaces","text":"<pre><code>withNotNamespaces(notNamespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespacesmixin","title":"fn spec.rules.from.source.withNotNamespacesMixin","text":"<pre><code>withNotNamespacesMixin(notNamespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipals","title":"fn spec.rules.from.source.withNotPrincipals","text":"<pre><code>withNotPrincipals(notPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipalsmixin","title":"fn spec.rules.from.source.withNotPrincipalsMixin","text":"<pre><code>withNotPrincipalsMixin(notPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocks","title":"fn spec.rules.from.source.withNotRemoteIpBlocks","text":"<pre><code>withNotRemoteIpBlocks(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocksmixin","title":"fn spec.rules.from.source.withNotRemoteIpBlocksMixin","text":"<pre><code>withNotRemoteIpBlocksMixin(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipals","title":"fn spec.rules.from.source.withNotRequestPrincipals","text":"<pre><code>withNotRequestPrincipals(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipalsmixin","title":"fn spec.rules.from.source.withNotRequestPrincipalsMixin","text":"<pre><code>withNotRequestPrincipalsMixin(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithprincipals","title":"fn spec.rules.from.source.withPrincipals","text":"<pre><code>withPrincipals(principals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithprincipalsmixin","title":"fn spec.rules.from.source.withPrincipalsMixin","text":"<pre><code>withPrincipalsMixin(principals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocks","title":"fn spec.rules.from.source.withRemoteIpBlocks","text":"<pre><code>withRemoteIpBlocks(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocksmixin","title":"fn spec.rules.from.source.withRemoteIpBlocksMixin","text":"<pre><code>withRemoteIpBlocksMixin(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipals","title":"fn spec.rules.from.source.withRequestPrincipals","text":"<pre><code>withRequestPrincipals(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipalsmixin","title":"fn spec.rules.from.source.withRequestPrincipalsMixin","text":"<pre><code>withRequestPrincipalsMixin(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specrulesto","title":"obj spec.rules.to","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specrulestooperation","title":"obj spec.rules.to.operation","text":"<p>\"Operation specifies the operation of a request.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithhosts","title":"fn spec.rules.to.operation.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithhostsmixin","title":"fn spec.rules.to.operation.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithmethods","title":"fn spec.rules.to.operation.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithmethodsmixin","title":"fn spec.rules.to.operation.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnothosts","title":"fn spec.rules.to.operation.withNotHosts","text":"<pre><code>withNotHosts(notHosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnothostsmixin","title":"fn spec.rules.to.operation.withNotHostsMixin","text":"<pre><code>withNotHostsMixin(notHosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotmethods","title":"fn spec.rules.to.operation.withNotMethods","text":"<pre><code>withNotMethods(notMethods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotmethodsmixin","title":"fn spec.rules.to.operation.withNotMethodsMixin","text":"<pre><code>withNotMethodsMixin(notMethods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotpaths","title":"fn spec.rules.to.operation.withNotPaths","text":"<pre><code>withNotPaths(notPaths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotpathsmixin","title":"fn spec.rules.to.operation.withNotPathsMixin","text":"<pre><code>withNotPathsMixin(notPaths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotports","title":"fn spec.rules.to.operation.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotportsmixin","title":"fn spec.rules.to.operation.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithpaths","title":"fn spec.rules.to.operation.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithpathsmixin","title":"fn spec.rules.to.operation.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithports","title":"fn spec.rules.to.operation.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specrulestooperationwithportsmixin","title":"fn spec.rules.to.operation.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specruleswhen","title":"obj spec.rules.when","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswhenwithkey","title":"fn spec.rules.when.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The name of an Istio attribute.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswhenwithnotvalues","title":"fn spec.rules.when.withNotValues","text":"<pre><code>withNotValues(notValues)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswhenwithnotvaluesmixin","title":"fn spec.rules.when.withNotValuesMixin","text":"<pre><code>withNotValuesMixin(notValues)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswhenwithvalues","title":"fn spec.rules.when.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specruleswhenwithvaluesmixin","title":"fn spec.rules.when.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/authorizationPolicy/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/security/v1/authorizationPolicy/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/","title":"security.v1.requestAuthentication","text":""},{"location":"1.17/security/v1/requestAuthentication/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withJwtRules(jwtRules)</code></li> <li><code>fn withJwtRulesMixin(jwtRules)</code></li> <li><code>obj spec.jwtRules</code><ul> <li><code>fn withAudiences(audiences)</code></li> <li><code>fn withAudiencesMixin(audiences)</code></li> <li><code>fn withForwardOriginalToken(forwardOriginalToken)</code></li> <li><code>fn withFromHeaders(fromHeaders)</code></li> <li><code>fn withFromHeadersMixin(fromHeaders)</code></li> <li><code>fn withFromParams(fromParams)</code></li> <li><code>fn withFromParamsMixin(fromParams)</code></li> <li><code>fn withIssuer(issuer)</code></li> <li><code>fn withJwks(jwks)</code></li> <li><code>fn withJwksUri(jwksUri)</code></li> <li><code>fn withJwks_uri(jwks_uri)</code></li> <li><code>fn withOutputClaimToHeaders(outputClaimToHeaders)</code></li> <li><code>fn withOutputClaimToHeadersMixin(outputClaimToHeaders)</code></li> <li><code>fn withOutputPayloadToHeader(outputPayloadToHeader)</code></li> <li><code>obj spec.jwtRules.fromHeaders</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.jwtRules.outputClaimToHeaders</code></li> <li><code>fn withClaim(claim)</code></li> <li><code>fn withHeader(header)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/security/v1/requestAuthentication/#fields","title":"Fields","text":""},{"location":"1.17/security/v1/requestAuthentication/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of RequestAuthentication</p>"},{"location":"1.17/security/v1/requestAuthentication/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#obj-spec","title":"obj spec","text":"<p>\"RequestAuthentication defines what request authentication methods are supported by a workload.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specwithjwtrules","title":"fn spec.withJwtRules","text":"<pre><code>withJwtRules(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specwithjwtrulesmixin","title":"fn spec.withJwtRulesMixin","text":"<pre><code>withJwtRulesMixin(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#obj-specjwtrules","title":"obj spec.jwtRules","text":"<p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithaudiences","title":"fn spec.jwtRules.withAudiences","text":"<pre><code>withAudiences(audiences)\n</code></pre>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithaudiencesmixin","title":"fn spec.jwtRules.withAudiencesMixin","text":"<pre><code>withAudiencesMixin(audiences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithforwardoriginaltoken","title":"fn spec.jwtRules.withForwardOriginalToken","text":"<pre><code>withForwardOriginalToken(forwardOriginalToken)\n</code></pre> <p>\"If set to true, the original token will be kept for the upstream request.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithfromheaders","title":"fn spec.jwtRules.withFromHeaders","text":"<pre><code>withFromHeaders(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithfromheadersmixin","title":"fn spec.jwtRules.withFromHeadersMixin","text":"<pre><code>withFromHeadersMixin(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithfromparams","title":"fn spec.jwtRules.withFromParams","text":"<pre><code>withFromParams(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithfromparamsmixin","title":"fn spec.jwtRules.withFromParamsMixin","text":"<pre><code>withFromParamsMixin(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithissuer","title":"fn spec.jwtRules.withIssuer","text":"<pre><code>withIssuer(issuer)\n</code></pre> <p>\"Identifies the issuer that issued the JWT.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithjwks","title":"fn spec.jwtRules.withJwks","text":"<pre><code>withJwks(jwks)\n</code></pre> <p>\"JSON Web Key Set of public keys to validate signature of the JWT.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithjwksuri","title":"fn spec.jwtRules.withJwksUri","text":"<pre><code>withJwksUri(jwksUri)\n</code></pre>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithjwks_uri","title":"fn spec.jwtRules.withJwks_uri","text":"<pre><code>withJwks_uri(jwks_uri)\n</code></pre>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheaders","title":"fn spec.jwtRules.withOutputClaimToHeaders","text":"<pre><code>withOutputClaimToHeaders(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheadersmixin","title":"fn spec.jwtRules.withOutputClaimToHeadersMixin","text":"<pre><code>withOutputClaimToHeadersMixin(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtruleswithoutputpayloadtoheader","title":"fn spec.jwtRules.withOutputPayloadToHeader","text":"<pre><code>withOutputPayloadToHeader(outputPayloadToHeader)\n</code></pre>"},{"location":"1.17/security/v1/requestAuthentication/#obj-specjwtrulesfromheaders","title":"obj spec.jwtRules.fromHeaders","text":"<p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtrulesfromheaderswithname","title":"fn spec.jwtRules.fromHeaders.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The HTTP header name.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtrulesfromheaderswithprefix","title":"fn spec.jwtRules.fromHeaders.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre> <p>\"The prefix that should be stripped before decoding the token.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#obj-specjwtrulesoutputclaimtoheaders","title":"obj spec.jwtRules.outputClaimToHeaders","text":"<p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithclaim","title":"fn spec.jwtRules.outputClaimToHeaders.withClaim","text":"<pre><code>withClaim(claim)\n</code></pre> <p>\"The name of the claim to be copied from.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithheader","title":"fn spec.jwtRules.outputClaimToHeaders.withHeader","text":"<pre><code>withHeader(header)\n</code></pre> <p>\"The name of the header to be created.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/security/v1/requestAuthentication/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/","title":"security.v1beta1","text":"<ul> <li>authorizationPolicy</li> <li>peerAuthentication</li> <li>requestAuthentication</li> </ul>"},{"location":"1.17/security/v1beta1/authorizationPolicy/","title":"security.v1beta1.authorizationPolicy","text":""},{"location":"1.17/security/v1beta1/authorizationPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAction(action)</code></li> <li><code>fn withRules(rules)</code></li> <li><code>fn withRulesMixin(rules)</code></li> <li><code>obj spec.provider</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.rules</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withFromMixin(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>fn withWhen(when)</code></li> <li><code>fn withWhenMixin(when)</code></li> <li><code>obj spec.rules.from</code></li> <li><code>obj spec.rules.from.source</code><ul> <li><code>fn withIpBlocks(ipBlocks)</code></li> <li><code>fn withIpBlocksMixin(ipBlocks)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withNotIpBlocks(notIpBlocks)</code></li> <li><code>fn withNotIpBlocksMixin(notIpBlocks)</code></li> <li><code>fn withNotNamespaces(notNamespaces)</code></li> <li><code>fn withNotNamespacesMixin(notNamespaces)</code></li> <li><code>fn withNotPrincipals(notPrincipals)</code></li> <li><code>fn withNotPrincipalsMixin(notPrincipals)</code></li> <li><code>fn withNotRemoteIpBlocks(notRemoteIpBlocks)</code></li> <li><code>fn withNotRemoteIpBlocksMixin(notRemoteIpBlocks)</code></li> <li><code>fn withNotRequestPrincipals(notRequestPrincipals)</code></li> <li><code>fn withNotRequestPrincipalsMixin(notRequestPrincipals)</code></li> <li><code>fn withPrincipals(principals)</code></li> <li><code>fn withPrincipalsMixin(principals)</code></li> <li><code>fn withRemoteIpBlocks(remoteIpBlocks)</code></li> <li><code>fn withRemoteIpBlocksMixin(remoteIpBlocks)</code></li> <li><code>fn withRequestPrincipals(requestPrincipals)</code></li> <li><code>fn withRequestPrincipalsMixin(requestPrincipals)</code></li> </ul> </li> <li><code>obj spec.rules.to</code></li> <li><code>obj spec.rules.to.operation</code><ul> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withNotHosts(notHosts)</code></li> <li><code>fn withNotHostsMixin(notHosts)</code></li> <li><code>fn withNotMethods(notMethods)</code></li> <li><code>fn withNotMethodsMixin(notMethods)</code></li> <li><code>fn withNotPaths(notPaths)</code></li> <li><code>fn withNotPathsMixin(notPaths)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> </ul> </li> <li><code>obj spec.rules.when</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withNotValues(notValues)</code></li> <li><code>fn withNotValuesMixin(notValues)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fields","title":"Fields","text":""},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of AuthorizationPolicy</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-spec","title":"obj spec","text":"<p>\"Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specwithaction","title":"fn spec.withAction","text":"<pre><code>withAction(action)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specwithrules","title":"fn spec.withRules","text":"<pre><code>withRules(rules)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specwithrulesmixin","title":"fn spec.withRulesMixin","text":"<pre><code>withRulesMixin(rules)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specprovider","title":"obj spec.provider","text":"<p>\"Specifies detailed configuration of the CUSTOM action.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specproviderwithname","title":"fn spec.provider.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Specifies the name of the extension provider.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specrules","title":"obj spec.rules","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswithfrom","title":"fn spec.rules.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswithfrommixin","title":"fn spec.rules.withFromMixin","text":"<pre><code>withFromMixin(from)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswithto","title":"fn spec.rules.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswithtomixin","title":"fn spec.rules.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswithwhen","title":"fn spec.rules.withWhen","text":"<pre><code>withWhen(when)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswithwhenmixin","title":"fn spec.rules.withWhenMixin","text":"<pre><code>withWhenMixin(when)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specrulesfrom","title":"obj spec.rules.from","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specrulesfromsource","title":"obj spec.rules.from.source","text":"<p>\"Source specifies the source of a request.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithipblocks","title":"fn spec.rules.from.source.withIpBlocks","text":"<pre><code>withIpBlocks(ipBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithipblocksmixin","title":"fn spec.rules.from.source.withIpBlocksMixin","text":"<pre><code>withIpBlocksMixin(ipBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnamespaces","title":"fn spec.rules.from.source.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnamespacesmixin","title":"fn spec.rules.from.source.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocks","title":"fn spec.rules.from.source.withNotIpBlocks","text":"<pre><code>withNotIpBlocks(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocksmixin","title":"fn spec.rules.from.source.withNotIpBlocksMixin","text":"<pre><code>withNotIpBlocksMixin(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespaces","title":"fn spec.rules.from.source.withNotNamespaces","text":"<pre><code>withNotNamespaces(notNamespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespacesmixin","title":"fn spec.rules.from.source.withNotNamespacesMixin","text":"<pre><code>withNotNamespacesMixin(notNamespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipals","title":"fn spec.rules.from.source.withNotPrincipals","text":"<pre><code>withNotPrincipals(notPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipalsmixin","title":"fn spec.rules.from.source.withNotPrincipalsMixin","text":"<pre><code>withNotPrincipalsMixin(notPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocks","title":"fn spec.rules.from.source.withNotRemoteIpBlocks","text":"<pre><code>withNotRemoteIpBlocks(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocksmixin","title":"fn spec.rules.from.source.withNotRemoteIpBlocksMixin","text":"<pre><code>withNotRemoteIpBlocksMixin(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipals","title":"fn spec.rules.from.source.withNotRequestPrincipals","text":"<pre><code>withNotRequestPrincipals(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipalsmixin","title":"fn spec.rules.from.source.withNotRequestPrincipalsMixin","text":"<pre><code>withNotRequestPrincipalsMixin(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithprincipals","title":"fn spec.rules.from.source.withPrincipals","text":"<pre><code>withPrincipals(principals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithprincipalsmixin","title":"fn spec.rules.from.source.withPrincipalsMixin","text":"<pre><code>withPrincipalsMixin(principals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocks","title":"fn spec.rules.from.source.withRemoteIpBlocks","text":"<pre><code>withRemoteIpBlocks(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocksmixin","title":"fn spec.rules.from.source.withRemoteIpBlocksMixin","text":"<pre><code>withRemoteIpBlocksMixin(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipals","title":"fn spec.rules.from.source.withRequestPrincipals","text":"<pre><code>withRequestPrincipals(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipalsmixin","title":"fn spec.rules.from.source.withRequestPrincipalsMixin","text":"<pre><code>withRequestPrincipalsMixin(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specrulesto","title":"obj spec.rules.to","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specrulestooperation","title":"obj spec.rules.to.operation","text":"<p>\"Operation specifies the operation of a request.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithhosts","title":"fn spec.rules.to.operation.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithhostsmixin","title":"fn spec.rules.to.operation.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithmethods","title":"fn spec.rules.to.operation.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithmethodsmixin","title":"fn spec.rules.to.operation.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnothosts","title":"fn spec.rules.to.operation.withNotHosts","text":"<pre><code>withNotHosts(notHosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnothostsmixin","title":"fn spec.rules.to.operation.withNotHostsMixin","text":"<pre><code>withNotHostsMixin(notHosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotmethods","title":"fn spec.rules.to.operation.withNotMethods","text":"<pre><code>withNotMethods(notMethods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotmethodsmixin","title":"fn spec.rules.to.operation.withNotMethodsMixin","text":"<pre><code>withNotMethodsMixin(notMethods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotpaths","title":"fn spec.rules.to.operation.withNotPaths","text":"<pre><code>withNotPaths(notPaths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotpathsmixin","title":"fn spec.rules.to.operation.withNotPathsMixin","text":"<pre><code>withNotPathsMixin(notPaths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotports","title":"fn spec.rules.to.operation.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotportsmixin","title":"fn spec.rules.to.operation.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithpaths","title":"fn spec.rules.to.operation.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithpathsmixin","title":"fn spec.rules.to.operation.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithports","title":"fn spec.rules.to.operation.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithportsmixin","title":"fn spec.rules.to.operation.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specruleswhen","title":"obj spec.rules.when","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithkey","title":"fn spec.rules.when.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The name of an Istio attribute.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithnotvalues","title":"fn spec.rules.when.withNotValues","text":"<pre><code>withNotValues(notValues)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithnotvaluesmixin","title":"fn spec.rules.when.withNotValuesMixin","text":"<pre><code>withNotValuesMixin(notValues)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithvalues","title":"fn spec.rules.when.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithvaluesmixin","title":"fn spec.rules.when.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/security/v1beta1/authorizationPolicy/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/","title":"security.v1beta1.peerAuthentication","text":""},{"location":"1.17/security/v1beta1/peerAuthentication/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withPortLevelMtls(portLevelMtls)</code></li> <li><code>fn withPortLevelMtlsMixin(portLevelMtls)</code></li> <li><code>obj spec.mtls</code><ul> <li><code>fn withMode(mode)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fields","title":"Fields","text":""},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PeerAuthentication</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#obj-spec","title":"obj spec","text":"<p>\"PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-specwithportlevelmtls","title":"fn spec.withPortLevelMtls","text":"<pre><code>withPortLevelMtls(portLevelMtls)\n</code></pre> <p>\"Port specific mutual TLS settings.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-specwithportlevelmtlsmixin","title":"fn spec.withPortLevelMtlsMixin","text":"<pre><code>withPortLevelMtlsMixin(portLevelMtls)\n</code></pre> <p>\"Port specific mutual TLS settings.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#obj-specmtls","title":"obj spec.mtls","text":"<p>\"Mutual TLS settings for workload.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-specmtlswithmode","title":"fn spec.mtls.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"Defines the mTLS mode used for peer authentication.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#obj-specselector","title":"obj spec.selector","text":"<p>\"The selector determines the workloads to apply the ChannelAuthentication on.\"</p>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/security/v1beta1/peerAuthentication/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/","title":"security.v1beta1.requestAuthentication","text":""},{"location":"1.17/security/v1beta1/requestAuthentication/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withJwtRules(jwtRules)</code></li> <li><code>fn withJwtRulesMixin(jwtRules)</code></li> <li><code>obj spec.jwtRules</code><ul> <li><code>fn withAudiences(audiences)</code></li> <li><code>fn withAudiencesMixin(audiences)</code></li> <li><code>fn withForwardOriginalToken(forwardOriginalToken)</code></li> <li><code>fn withFromHeaders(fromHeaders)</code></li> <li><code>fn withFromHeadersMixin(fromHeaders)</code></li> <li><code>fn withFromParams(fromParams)</code></li> <li><code>fn withFromParamsMixin(fromParams)</code></li> <li><code>fn withIssuer(issuer)</code></li> <li><code>fn withJwks(jwks)</code></li> <li><code>fn withJwksUri(jwksUri)</code></li> <li><code>fn withJwks_uri(jwks_uri)</code></li> <li><code>fn withOutputClaimToHeaders(outputClaimToHeaders)</code></li> <li><code>fn withOutputClaimToHeadersMixin(outputClaimToHeaders)</code></li> <li><code>fn withOutputPayloadToHeader(outputPayloadToHeader)</code></li> <li><code>obj spec.jwtRules.fromHeaders</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.jwtRules.outputClaimToHeaders</code></li> <li><code>fn withClaim(claim)</code></li> <li><code>fn withHeader(header)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fields","title":"Fields","text":""},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of RequestAuthentication</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#obj-spec","title":"obj spec","text":"<p>\"RequestAuthentication defines what request authentication methods are supported by a workload.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specwithjwtrules","title":"fn spec.withJwtRules","text":"<pre><code>withJwtRules(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specwithjwtrulesmixin","title":"fn spec.withJwtRulesMixin","text":"<pre><code>withJwtRulesMixin(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#obj-specjwtrules","title":"obj spec.jwtRules","text":"<p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithaudiences","title":"fn spec.jwtRules.withAudiences","text":"<pre><code>withAudiences(audiences)\n</code></pre>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithaudiencesmixin","title":"fn spec.jwtRules.withAudiencesMixin","text":"<pre><code>withAudiencesMixin(audiences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithforwardoriginaltoken","title":"fn spec.jwtRules.withForwardOriginalToken","text":"<pre><code>withForwardOriginalToken(forwardOriginalToken)\n</code></pre> <p>\"If set to true, the original token will be kept for the upstream request.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromheaders","title":"fn spec.jwtRules.withFromHeaders","text":"<pre><code>withFromHeaders(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromheadersmixin","title":"fn spec.jwtRules.withFromHeadersMixin","text":"<pre><code>withFromHeadersMixin(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromparams","title":"fn spec.jwtRules.withFromParams","text":"<pre><code>withFromParams(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromparamsmixin","title":"fn spec.jwtRules.withFromParamsMixin","text":"<pre><code>withFromParamsMixin(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithissuer","title":"fn spec.jwtRules.withIssuer","text":"<pre><code>withIssuer(issuer)\n</code></pre> <p>\"Identifies the issuer that issued the JWT.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithjwks","title":"fn spec.jwtRules.withJwks","text":"<pre><code>withJwks(jwks)\n</code></pre> <p>\"JSON Web Key Set of public keys to validate signature of the JWT.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithjwksuri","title":"fn spec.jwtRules.withJwksUri","text":"<pre><code>withJwksUri(jwksUri)\n</code></pre>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithjwks_uri","title":"fn spec.jwtRules.withJwks_uri","text":"<pre><code>withJwks_uri(jwks_uri)\n</code></pre>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheaders","title":"fn spec.jwtRules.withOutputClaimToHeaders","text":"<pre><code>withOutputClaimToHeaders(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheadersmixin","title":"fn spec.jwtRules.withOutputClaimToHeadersMixin","text":"<pre><code>withOutputClaimToHeadersMixin(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtruleswithoutputpayloadtoheader","title":"fn spec.jwtRules.withOutputPayloadToHeader","text":"<pre><code>withOutputPayloadToHeader(outputPayloadToHeader)\n</code></pre>"},{"location":"1.17/security/v1beta1/requestAuthentication/#obj-specjwtrulesfromheaders","title":"obj spec.jwtRules.fromHeaders","text":"<p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtrulesfromheaderswithname","title":"fn spec.jwtRules.fromHeaders.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The HTTP header name.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtrulesfromheaderswithprefix","title":"fn spec.jwtRules.fromHeaders.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre> <p>\"The prefix that should be stripped before decoding the token.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#obj-specjwtrulesoutputclaimtoheaders","title":"obj spec.jwtRules.outputClaimToHeaders","text":"<p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithclaim","title":"fn spec.jwtRules.outputClaimToHeaders.withClaim","text":"<pre><code>withClaim(claim)\n</code></pre> <p>\"The name of the claim to be copied from.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithheader","title":"fn spec.jwtRules.outputClaimToHeaders.withHeader","text":"<pre><code>withHeader(header)\n</code></pre> <p>\"The name of the header to be created.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/security/v1beta1/requestAuthentication/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/","title":"telemetry","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.17/telemetry/v1alpha1/","title":"telemetry.v1alpha1","text":"<ul> <li>telemetry</li> </ul>"},{"location":"1.17/telemetry/v1alpha1/telemetry/","title":"telemetry.v1alpha1.telemetry","text":""},{"location":"1.17/telemetry/v1alpha1/telemetry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAccessLogging(accessLogging)</code></li> <li><code>fn withAccessLoggingMixin(accessLogging)</code></li> <li><code>fn withMetrics(metrics)</code></li> <li><code>fn withMetricsMixin(metrics)</code></li> <li><code>fn withTracing(tracing)</code></li> <li><code>fn withTracingMixin(tracing)</code></li> <li><code>obj spec.accessLogging</code><ul> <li><code>fn withDisabled(disabled)</code></li> <li><code>fn withProviders(providers)</code></li> <li><code>fn withProvidersMixin(providers)</code></li> <li><code>obj spec.accessLogging.filter</code></li> <li><code>fn withExpression(expression)</code></li> <li><code>obj spec.accessLogging.match</code></li> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.accessLogging.providers</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.metrics</code><ul> <li><code>fn withOverrides(overrides)</code></li> <li><code>fn withOverridesMixin(overrides)</code></li> <li><code>fn withProviders(providers)</code></li> <li><code>fn withProvidersMixin(providers)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>obj spec.metrics.overrides</code></li> <li><code>fn withDisabled(disabled)</code></li> <li><code>fn withTagOverrides(tagOverrides)</code></li> <li><code>fn withTagOverridesMixin(tagOverrides)</code></li> <li><code>obj spec.metrics.overrides.match</code><ul> <li><code>fn withCustomMetric(customMetric)</code></li> <li><code>fn withMetric(metric)</code></li> <li><code>fn withMode(mode)</code></li> </ul> </li> <li><code>obj spec.metrics.providers</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> <li><code>obj spec.tracing</code><ul> <li><code>fn withCustomTags(customTags)</code></li> <li><code>fn withCustomTagsMixin(customTags)</code></li> <li><code>fn withDisableSpanReporting(disableSpanReporting)</code></li> <li><code>fn withProviders(providers)</code></li> <li><code>fn withProvidersMixin(providers)</code></li> <li><code>fn withRandomSamplingPercentage(randomSamplingPercentage)</code></li> <li><code>fn withUseRequestIdForTraceSampling(useRequestIdForTraceSampling)</code></li> <li><code>obj spec.tracing.match</code></li> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.tracing.providers</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fields","title":"Fields","text":""},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Telemetry</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-spec","title":"obj spec","text":"<p>\"Telemetry configuration for workloads. See more details at: https://istio.io/docs/reference/config/telemetry.html\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specwithaccesslogging","title":"fn spec.withAccessLogging","text":"<pre><code>withAccessLogging(accessLogging)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specwithaccessloggingmixin","title":"fn spec.withAccessLoggingMixin","text":"<pre><code>withAccessLoggingMixin(accessLogging)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specwithmetrics","title":"fn spec.withMetrics","text":"<pre><code>withMetrics(metrics)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specwithmetricsmixin","title":"fn spec.withMetricsMixin","text":"<pre><code>withMetricsMixin(metrics)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specwithtracing","title":"fn spec.withTracing","text":"<pre><code>withTracing(tracing)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specwithtracingmixin","title":"fn spec.withTracingMixin","text":"<pre><code>withTracingMixin(tracing)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specaccesslogging","title":"obj spec.accessLogging","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specaccessloggingwithdisabled","title":"fn spec.accessLogging.withDisabled","text":"<pre><code>withDisabled(disabled)\n</code></pre> <p>\"Controls logging.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specaccessloggingwithproviders","title":"fn spec.accessLogging.withProviders","text":"<pre><code>withProviders(providers)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specaccessloggingwithprovidersmixin","title":"fn spec.accessLogging.withProvidersMixin","text":"<pre><code>withProvidersMixin(providers)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specaccessloggingfilter","title":"obj spec.accessLogging.filter","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specaccessloggingfilterwithexpression","title":"fn spec.accessLogging.filter.withExpression","text":"<pre><code>withExpression(expression)\n</code></pre> <p>\"CEL expression for selecting when requests/connections should be logged.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specaccessloggingmatch","title":"obj spec.accessLogging.match","text":"<p>\"Allows tailoring of logging behavior to specific conditions.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specaccessloggingmatchwithmode","title":"fn spec.accessLogging.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specaccessloggingproviders","title":"obj spec.accessLogging.providers","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specaccessloggingproviderswithname","title":"fn spec.accessLogging.providers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Required.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specmetrics","title":"obj spec.metrics","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricswithoverrides","title":"fn spec.metrics.withOverrides","text":"<pre><code>withOverrides(overrides)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricswithoverridesmixin","title":"fn spec.metrics.withOverridesMixin","text":"<pre><code>withOverridesMixin(overrides)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricswithproviders","title":"fn spec.metrics.withProviders","text":"<pre><code>withProviders(providers)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricswithprovidersmixin","title":"fn spec.metrics.withProvidersMixin","text":"<pre><code>withProvidersMixin(providers)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricswithreportinginterval","title":"fn spec.metrics.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specmetricsoverrides","title":"obj spec.metrics.overrides","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsoverrideswithdisabled","title":"fn spec.metrics.overrides.withDisabled","text":"<pre><code>withDisabled(disabled)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsoverrideswithtagoverrides","title":"fn spec.metrics.overrides.withTagOverrides","text":"<pre><code>withTagOverrides(tagOverrides)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsoverrideswithtagoverridesmixin","title":"fn spec.metrics.overrides.withTagOverridesMixin","text":"<pre><code>withTagOverridesMixin(tagOverrides)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specmetricsoverridesmatch","title":"obj spec.metrics.overrides.match","text":"<p>\"Match allows provides the scope of the override.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsoverridesmatchwithcustommetric","title":"fn spec.metrics.overrides.match.withCustomMetric","text":"<pre><code>withCustomMetric(customMetric)\n</code></pre> <p>\"Allows free-form specification of a metric.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsoverridesmatchwithmetric","title":"fn spec.metrics.overrides.match.withMetric","text":"<pre><code>withMetric(metric)\n</code></pre> <p>\"One of the well-known Istio Standard Metrics.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsoverridesmatchwithmode","title":"fn spec.metrics.overrides.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specmetricsproviders","title":"obj spec.metrics.providers","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specmetricsproviderswithname","title":"fn spec.metrics.providers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Required.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-spectracing","title":"obj spec.tracing","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithcustomtags","title":"fn spec.tracing.withCustomTags","text":"<pre><code>withCustomTags(customTags)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithcustomtagsmixin","title":"fn spec.tracing.withCustomTagsMixin","text":"<pre><code>withCustomTagsMixin(customTags)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithdisablespanreporting","title":"fn spec.tracing.withDisableSpanReporting","text":"<pre><code>withDisableSpanReporting(disableSpanReporting)\n</code></pre> <p>\"Controls span reporting.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithproviders","title":"fn spec.tracing.withProviders","text":"<pre><code>withProviders(providers)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithprovidersmixin","title":"fn spec.tracing.withProvidersMixin","text":"<pre><code>withProvidersMixin(providers)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithrandomsamplingpercentage","title":"fn spec.tracing.withRandomSamplingPercentage","text":"<pre><code>withRandomSamplingPercentage(randomSamplingPercentage)\n</code></pre>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingwithuserequestidfortracesampling","title":"fn spec.tracing.withUseRequestIdForTraceSampling","text":"<pre><code>withUseRequestIdForTraceSampling(useRequestIdForTraceSampling)\n</code></pre>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-spectracingmatch","title":"obj spec.tracing.match","text":"<p>\"Allows tailoring of behavior to specific conditions.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingmatchwithmode","title":"fn spec.tracing.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#obj-spectracingproviders","title":"obj spec.tracing.providers","text":"<p>\"Optional.\"</p>"},{"location":"1.17/telemetry/v1alpha1/telemetry/#fn-spectracingproviderswithname","title":"fn spec.tracing.providers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Required.\"</p>"},{"location":"1.18/","title":"istio","text":"<pre><code>local istio = import \"github.com/jsonnet-libs/istio-libsonnet/1.18/main.libsonnet\"\n</code></pre>"},{"location":"1.18/#index","title":"Index","text":"<ul> <li><code>obj networking</code></li> <li><code>obj networking.v1alpha3</code><ul> <li><code>obj networking.v1alpha3.virtualService</code></li> <li><code>obj networking.v1alpha3.virtualService.spec</code><ul> <li><code>obj networking.v1alpha3.virtualService.spec.http</code></li> <li><code>obj networking.v1alpha3.virtualService.spec.http.match</code><ul> <li><code>obj networking.v1alpha3.virtualService.spec.http.match.headers</code></li> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> <li><code>obj networking.v1alpha3.virtualService.spec.http.match.queryParams</code></li> <li><code>fn withExact(key, value)</code></li> <li><code>fn withExactMixin(key, value)</code></li> <li><code>fn withRegex(key, value)</code></li> <li><code>fn withRegexMixin(key, value)</code></li> <li><code>obj networking.v1alpha3.virtualService.spec.http.match.withoutHeaders</code></li> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj networking.v1beta1</code><ul> <li><code>obj networking.v1beta1.virtualService</code></li> <li><code>obj networking.v1beta1.virtualService.spec</code><ul> <li><code>obj networking.v1beta1.virtualService.spec.http</code></li> <li><code>obj networking.v1beta1.virtualService.spec.http.match</code><ul> <li><code>obj networking.v1beta1.virtualService.spec.http.match.headers</code></li> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> <li><code>obj networking.v1beta1.virtualService.spec.http.match.queryParams</code></li> <li><code>fn withExact(key, value)</code></li> <li><code>fn withExactMixin(key, value)</code></li> <li><code>fn withRegex(key, value)</code></li> <li><code>fn withRegexMixin(key, value)</code></li> <li><code>obj networking.v1beta1.virtualService.spec.http.match.withoutHeaders</code></li> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"1.18/#fields","title":"Fields","text":""},{"location":"1.18/#obj-networking","title":"obj networking","text":""},{"location":"1.18/#obj-networkingv1alpha3","title":"obj networking.v1alpha3","text":""},{"location":"1.18/#obj-networkingv1alpha3virtualservice","title":"obj networking.v1alpha3.virtualService","text":""},{"location":"1.18/#obj-networkingv1alpha3virtualservicespec","title":"obj networking.v1alpha3.virtualService.spec","text":""},{"location":"1.18/#obj-networkingv1alpha3virtualservicespechttp","title":"obj networking.v1alpha3.virtualService.spec.http","text":""},{"location":"1.18/#obj-networkingv1alpha3virtualservicespechttpmatch","title":"obj networking.v1alpha3.virtualService.spec.http.match","text":""},{"location":"1.18/#obj-networkingv1alpha3virtualservicespechttpmatchheaders","title":"obj networking.v1alpha3.virtualService.spec.http.match.headers","text":""},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchheaderswithexact","title":"fn networking.v1alpha3.virtualService.spec.http.match.headers.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchheaderswithexactmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.headers.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchheaderswithprefix","title":"fn networking.v1alpha3.virtualService.spec.http.match.headers.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchheaderswithprefixmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.headers.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchheaderswithregex","title":"fn networking.v1alpha3.virtualService.spec.http.match.headers.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchheaderswithregexmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.headers.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#obj-networkingv1alpha3virtualservicespechttpmatchqueryparams","title":"obj networking.v1alpha3.virtualService.spec.http.match.queryParams","text":""},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchqueryparamswithexact","title":"fn networking.v1alpha3.virtualService.spec.http.match.queryParams.withExact","text":"<pre><code>withExact(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchqueryparamswithexactmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.queryParams.withExactMixin","text":"<pre><code>withExactMixin(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchqueryparamswithregex","title":"fn networking.v1alpha3.virtualService.spec.http.match.queryParams.withRegex","text":"<pre><code>withRegex(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchqueryparamswithregexmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.queryParams.withRegexMixin","text":"<pre><code>withRegexMixin(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#obj-networkingv1alpha3virtualservicespechttpmatchwithoutheaders","title":"obj networking.v1alpha3.virtualService.spec.http.match.withoutHeaders","text":""},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchwithoutheaderswithexact","title":"fn networking.v1alpha3.virtualService.spec.http.match.withoutHeaders.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchwithoutheaderswithexactmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.withoutHeaders.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchwithoutheaderswithprefix","title":"fn networking.v1alpha3.virtualService.spec.http.match.withoutHeaders.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchwithoutheaderswithprefixmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.withoutHeaders.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchwithoutheaderswithregex","title":"fn networking.v1alpha3.virtualService.spec.http.match.withoutHeaders.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#fn-networkingv1alpha3virtualservicespechttpmatchwithoutheaderswithregexmixin","title":"fn networking.v1alpha3.virtualService.spec.http.match.withoutHeaders.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#obj-networkingv1beta1","title":"obj networking.v1beta1","text":""},{"location":"1.18/#obj-networkingv1beta1virtualservice","title":"obj networking.v1beta1.virtualService","text":""},{"location":"1.18/#obj-networkingv1beta1virtualservicespec","title":"obj networking.v1beta1.virtualService.spec","text":""},{"location":"1.18/#obj-networkingv1beta1virtualservicespechttp","title":"obj networking.v1beta1.virtualService.spec.http","text":""},{"location":"1.18/#obj-networkingv1beta1virtualservicespechttpmatch","title":"obj networking.v1beta1.virtualService.spec.http.match","text":""},{"location":"1.18/#obj-networkingv1beta1virtualservicespechttpmatchheaders","title":"obj networking.v1beta1.virtualService.spec.http.match.headers","text":""},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchheaderswithexact","title":"fn networking.v1beta1.virtualService.spec.http.match.headers.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchheaderswithexactmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.headers.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchheaderswithprefix","title":"fn networking.v1beta1.virtualService.spec.http.match.headers.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchheaderswithprefixmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.headers.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchheaderswithregex","title":"fn networking.v1beta1.virtualService.spec.http.match.headers.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchheaderswithregexmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.headers.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#obj-networkingv1beta1virtualservicespechttpmatchqueryparams","title":"obj networking.v1beta1.virtualService.spec.http.match.queryParams","text":""},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchqueryparamswithexact","title":"fn networking.v1beta1.virtualService.spec.http.match.queryParams.withExact","text":"<pre><code>withExact(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchqueryparamswithexactmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.queryParams.withExactMixin","text":"<pre><code>withExactMixin(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchqueryparamswithregex","title":"fn networking.v1beta1.virtualService.spec.http.match.queryParams.withRegex","text":"<pre><code>withRegex(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchqueryparamswithregexmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.queryParams.withRegexMixin","text":"<pre><code>withRegexMixin(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#obj-networkingv1beta1virtualservicespechttpmatchwithoutheaders","title":"obj networking.v1beta1.virtualService.spec.http.match.withoutHeaders","text":""},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchwithoutheaderswithexact","title":"fn networking.v1beta1.virtualService.spec.http.match.withoutHeaders.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchwithoutheaderswithexactmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.withoutHeaders.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchwithoutheaderswithprefix","title":"fn networking.v1beta1.virtualService.spec.http.match.withoutHeaders.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchwithoutheaderswithprefixmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.withoutHeaders.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchwithoutheaderswithregex","title":"fn networking.v1beta1.virtualService.spec.http.match.withoutHeaders.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.18/#fn-networkingv1beta1virtualservicespechttpmatchwithoutheaderswithregexmixin","title":"fn networking.v1beta1.virtualService.spec.http.match.withoutHeaders.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/","title":"istio","text":"<pre><code>local istio = import \"github.com/jsonnet-libs/istio-libsonnet/1.19/main.libsonnet\"\n</code></pre> <ul> <li>extensions</li> <li>networking</li> <li>security</li> <li>telemetry</li> </ul>"},{"location":"1.19/extensions/","title":"extensions","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.19/extensions/v1alpha1/","title":"extensions.v1alpha1","text":"<ul> <li>wasmPlugin</li> </ul>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/","title":"extensions.v1alpha1.wasmPlugin","text":""},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withFailStrategy(failStrategy)</code></li> <li><code>fn withImagePullPolicy(imagePullPolicy)</code></li> <li><code>fn withImagePullSecret(imagePullSecret)</code></li> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withPhase(phase)</code></li> <li><code>fn withPluginConfig(pluginConfig)</code></li> <li><code>fn withPluginConfigMixin(pluginConfig)</code></li> <li><code>fn withPluginName(pluginName)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>fn withSha256(sha256)</code></li> <li><code>fn withUrl(url)</code></li> <li><code>fn withVerificationKey(verificationKey)</code></li> <li><code>obj spec.match</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>obj spec.match.ports</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> <li><code>obj spec.vmConfig</code><ul> <li><code>fn withEnv(env)</code></li> <li><code>fn withEnvMixin(env)</code></li> <li><code>obj spec.vmConfig.env</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueFrom(valueFrom)</code></li> </ul> </li> </ul>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fields","title":"Fields","text":""},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WasmPlugin</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-spec","title":"obj spec","text":"<p>\"Extend the functionality provided by the Istio proxy through WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithfailstrategy","title":"fn spec.withFailStrategy","text":"<pre><code>withFailStrategy(failStrategy)\n</code></pre> <p>\"Specifies the failure behavior for the plugin due to fatal errors.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithimagepullpolicy","title":"fn spec.withImagePullPolicy","text":"<pre><code>withImagePullPolicy(imagePullPolicy)\n</code></pre>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithimagepullsecret","title":"fn spec.withImagePullSecret","text":"<pre><code>withImagePullSecret(imagePullSecret)\n</code></pre> <p>\"Credentials to use for OCI image pulling.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithmatch","title":"fn spec.withMatch","text":"<pre><code>withMatch(match)\n</code></pre> <p>\"Specifies the criteria to determine which traffic is passed to WasmPlugin.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithmatchmixin","title":"fn spec.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>\"Specifies the criteria to determine which traffic is passed to WasmPlugin.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithphase","title":"fn spec.withPhase","text":"<pre><code>withPhase(phase)\n</code></pre> <p>\"Determines where in the filter chain this <code>WasmPlugin</code> is to be injected.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithpluginconfig","title":"fn spec.withPluginConfig","text":"<pre><code>withPluginConfig(pluginConfig)\n</code></pre> <p>\"The configuration that will be passed on to the plugin.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithpluginconfigmixin","title":"fn spec.withPluginConfigMixin","text":"<pre><code>withPluginConfigMixin(pluginConfig)\n</code></pre> <p>\"The configuration that will be passed on to the plugin.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithpluginname","title":"fn spec.withPluginName","text":"<pre><code>withPluginName(pluginName)\n</code></pre>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithpriority","title":"fn spec.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre> <p>\"Determines ordering of <code>WasmPlugins</code> in the same <code>phase</code>.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithsha256","title":"fn spec.withSha256","text":"<pre><code>withSha256(sha256)\n</code></pre> <p>\"SHA256 checksum that will be used to verify Wasm module or OCI container.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithurl","title":"fn spec.withUrl","text":"<pre><code>withUrl(url)\n</code></pre> <p>\"URL of a Wasm module or OCI container.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specwithverificationkey","title":"fn spec.withVerificationKey","text":"<pre><code>withVerificationKey(verificationKey)\n</code></pre>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-specmatch","title":"obj spec.match","text":"<p>\"Specifies the criteria to determine which traffic is passed to WasmPlugin.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specmatchwithmode","title":"fn spec.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"Criteria for selecting traffic by their direction.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specmatchwithports","title":"fn spec.match.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Criteria for selecting traffic by their destination port.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specmatchwithportsmixin","title":"fn spec.match.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Criteria for selecting traffic by their destination port.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-specmatchports","title":"obj spec.match.ports","text":"<p>\"Criteria for selecting traffic by their destination port.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specmatchportswithnumber","title":"fn spec.match.ports.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-specselector","title":"obj spec.selector","text":""},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-specvmconfig","title":"obj spec.vmConfig","text":"<p>\"Configuration for a Wasm VM.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigwithenv","title":"fn spec.vmConfig.withEnv","text":"<pre><code>withEnv(env)\n</code></pre> <p>\"Specifies environment variables to be injected to this VM.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigwithenvmixin","title":"fn spec.vmConfig.withEnvMixin","text":"<pre><code>withEnvMixin(env)\n</code></pre> <p>\"Specifies environment variables to be injected to this VM.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#obj-specvmconfigenv","title":"obj spec.vmConfig.env","text":"<p>\"Specifies environment variables to be injected to this VM.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigenvwithname","title":"fn spec.vmConfig.env.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigenvwithvalue","title":"fn spec.vmConfig.env.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value for the environment variable.\"</p>"},{"location":"1.19/extensions/v1alpha1/wasmPlugin/#fn-specvmconfigenvwithvaluefrom","title":"fn spec.vmConfig.env.withValueFrom","text":"<pre><code>withValueFrom(valueFrom)\n</code></pre>"},{"location":"1.19/networking/","title":"networking","text":"<ul> <li>v1alpha3</li> <li>v1beta1</li> </ul>"},{"location":"1.19/networking/v1alpha3/","title":"networking.v1alpha3","text":"<ul> <li>destinationRule</li> <li>envoyFilter</li> <li>gateway</li> <li>serviceEntry</li> <li>sidecar</li> <li>virtualService</li> <li>workloadEntry</li> <li>workloadGroup</li> </ul>"},{"location":"1.19/networking/v1alpha3/destinationRule/","title":"networking.v1alpha3.destinationRule","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubsets(subsets)</code></li> <li><code>fn withSubsetsMixin(subsets)</code></li> <li><code>obj spec.subsets</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.subsets.trafficPolicy</code></li> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool</code><ul> <li><code>obj spec.subsets.trafficPolicy.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings</code><ul> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.port</code></li> <li><code>fn withNumber(number)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tunnel</code><ul> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy</code><ul> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.trafficPolicy.connectionPool</code></li> <li><code>obj spec.trafficPolicy.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool</code><ul> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.trafficPolicy.tunnel</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DestinationRule</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specwithhost","title":"fn spec.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specwithsubsets","title":"fn spec.withSubsets","text":"<pre><code>withSubsets(subsets)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specwithsubsetsmixin","title":"fn spec.withSubsetsMixin","text":"<pre><code>withSubsetsMixin(subsets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsets","title":"obj spec.subsets","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetswithlabels","title":"fn spec.subsets.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetswithlabelsmixin","title":"fn spec.subsets.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetswithname","title":"fn spec.subsets.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the subset.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicy","title":"obj spec.subsets.trafficPolicy","text":"<p>\"Traffic policies that apply to this subset.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettings","title":"fn spec.subsets.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettingsmixin","title":"fn spec.subsets.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpool","title":"obj spec.subsets.trafficPolicy.connectionPool","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancer","title":"obj spec.subsets.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyoutlierdetection","title":"obj spec.subsets.trafficPolicy.outlierDetection","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettings","title":"obj spec.subsets.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsport","title":"obj spec.subsets.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.subsets.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingstls","title":"obj spec.subsets.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithmode","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsni","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicytls","title":"obj spec.subsets.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithcacertificates","title":"fn spec.subsets.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithcredentialname","title":"fn spec.subsets.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithmode","title":"fn spec.subsets.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithprivatekey","title":"fn spec.subsets.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithsni","title":"fn spec.subsets.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specsubsetstrafficpolicytunnel","title":"obj spec.subsets.trafficPolicy.tunnel","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytunnelwithprotocol","title":"fn spec.subsets.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargethost","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargetport","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicy","title":"obj spec.trafficPolicy","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicywithportlevelsettings","title":"fn spec.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicywithportlevelsettingsmixin","title":"fn spec.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpool","title":"obj spec.trafficPolicy.connectionPool","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpoolhttp","title":"obj spec.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpooltcp","title":"obj spec.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancer","title":"obj spec.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerwithsimple","title":"fn spec.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyoutlierdetection","title":"obj spec.trafficPolicy.outlierDetection","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettings","title":"obj spec.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingsport","title":"obj spec.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicyportlevelsettingstls","title":"obj spec.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithmode","title":"fn spec.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsni","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicytls","title":"obj spec.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithcacertificates","title":"fn spec.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithclientcertificate","title":"fn spec.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithcredentialname","title":"fn spec.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithinsecureskipverify","title":"fn spec.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithmode","title":"fn spec.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithprivatekey","title":"fn spec.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithsni","title":"fn spec.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnames","title":"fn spec.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-spectrafficpolicytunnel","title":"obj spec.trafficPolicy.tunnel","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytunnelwithprotocol","title":"fn spec.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytunnelwithtargethost","title":"fn spec.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-spectrafficpolicytunnelwithtargetport","title":"fn spec.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1alpha3/destinationRule/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specworkloadselectorwithmatchlabels","title":"fn spec.workloadSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/destinationRule/#fn-specworkloadselectorwithmatchlabelsmixin","title":"fn spec.workloadSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/","title":"networking.v1alpha3.envoyFilter","text":""},{"location":"1.19/networking/v1alpha3/envoyFilter/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConfigPatches(configPatches)</code></li> <li><code>fn withConfigPatchesMixin(configPatches)</code></li> <li><code>fn withPriority(priority)</code></li> <li><code>obj spec.configPatches</code><ul> <li><code>fn withApplyTo(applyTo)</code></li> <li><code>obj spec.configPatches.match</code></li> <li><code>fn withContext(context)</code></li> <li><code>obj spec.configPatches.match.cluster</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPortNumber(portNumber)</code></li> <li><code>fn withService(service)</code></li> <li><code>fn withSubset(subset)</code></li> </ul> </li> <li><code>obj spec.configPatches.match.listener</code><ul> <li><code>fn withListenerFilter(listenerFilter)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPortName(portName)</code></li> <li><code>fn withPortNumber(portNumber)</code></li> <li><code>obj spec.configPatches.match.listener.filterChain</code></li> <li><code>fn withApplicationProtocols(applicationProtocols)</code></li> <li><code>fn withDestinationPort(destinationPort)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withTransportProtocol(transportProtocol)</code></li> <li><code>obj spec.configPatches.match.listener.filterChain.filter</code><ul> <li><code>fn withName(name)</code></li> <li><code>obj spec.configPatches.match.listener.filterChain.filter.subFilter</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.configPatches.match.proxy</code><ul> <li><code>fn withMetadata(metadata)</code></li> <li><code>fn withMetadataMixin(metadata)</code></li> <li><code>fn withProxyVersion(proxyVersion)</code></li> </ul> </li> <li><code>obj spec.configPatches.match.routeConfiguration</code><ul> <li><code>fn withGateway(gateway)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPortName(portName)</code></li> <li><code>fn withPortNumber(portNumber)</code></li> <li><code>obj spec.configPatches.match.routeConfiguration.vhost</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.configPatches.match.routeConfiguration.vhost.route</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.configPatches.patch</code></li> <li><code>fn withFilterClass(filterClass)</code></li> <li><code>fn withOperation(operation)</code></li> <li><code>fn withValue(value)</code></li> <li><code>fn withValueMixin(value)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of EnvoyFilter</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-spec","title":"obj spec","text":"<p>\"Customizing Envoy configuration generated by Istio. See more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specwithconfigpatches","title":"fn spec.withConfigPatches","text":"<pre><code>withConfigPatches(configPatches)\n</code></pre> <p>\"One or more patches with match conditions.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specwithconfigpatchesmixin","title":"fn spec.withConfigPatchesMixin","text":"<pre><code>withConfigPatchesMixin(configPatches)\n</code></pre> <p>\"One or more patches with match conditions.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specwithpriority","title":"fn spec.withPriority","text":"<pre><code>withPriority(priority)\n</code></pre> <p>\"Priority defines the order in which patch sets are applied within a context.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatches","title":"obj spec.configPatches","text":"<p>\"One or more patches with match conditions.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatcheswithapplyto","title":"fn spec.configPatches.withApplyTo","text":"<pre><code>withApplyTo(applyTo)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatch","title":"obj spec.configPatches.match","text":"<p>\"Match on listener/route configuration/cluster.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchwithcontext","title":"fn spec.configPatches.match.withContext","text":"<pre><code>withContext(context)\n</code></pre> <p>\"The specific config generation context to match on.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchcluster","title":"obj spec.configPatches.match.cluster","text":"<p>\"Match on envoy cluster attributes.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithname","title":"fn spec.configPatches.match.cluster.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The exact name of the cluster to match.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithportnumber","title":"fn spec.configPatches.match.cluster.withPortNumber","text":"<pre><code>withPortNumber(portNumber)\n</code></pre> <p>\"The service port for which this cluster was generated.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithservice","title":"fn spec.configPatches.match.cluster.withService","text":"<pre><code>withService(service)\n</code></pre> <p>\"The fully qualified service name for this cluster.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchclusterwithsubset","title":"fn spec.configPatches.match.cluster.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The subset associated with the service.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistener","title":"obj spec.configPatches.match.listener","text":"<p>\"Match on envoy listener attributes.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithlistenerfilter","title":"fn spec.configPatches.match.listener.withListenerFilter","text":"<pre><code>withListenerFilter(listenerFilter)\n</code></pre> <p>\"Match a specific listener filter.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithname","title":"fn spec.configPatches.match.listener.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Match a specific listener by its name.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithportname","title":"fn spec.configPatches.match.listener.withPortName","text":"<pre><code>withPortName(portName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerwithportnumber","title":"fn spec.configPatches.match.listener.withPortNumber","text":"<pre><code>withPortNumber(portNumber)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistenerfilterchain","title":"obj spec.configPatches.match.listener.filterChain","text":"<p>\"Match a specific filter chain in a listener.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithapplicationprotocols","title":"fn spec.configPatches.match.listener.filterChain.withApplicationProtocols","text":"<pre><code>withApplicationProtocols(applicationProtocols)\n</code></pre> <p>\"Applies only to sidecars.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithdestinationport","title":"fn spec.configPatches.match.listener.filterChain.withDestinationPort","text":"<pre><code>withDestinationPort(destinationPort)\n</code></pre> <p>\"The destination_port value used by a filter chain's match condition.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithname","title":"fn spec.configPatches.match.listener.filterChain.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to the filter chain.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithsni","title":"fn spec.configPatches.match.listener.filterChain.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"The SNI value used by a filter chain's match condition.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainwithtransportprotocol","title":"fn spec.configPatches.match.listener.filterChain.withTransportProtocol","text":"<pre><code>withTransportProtocol(transportProtocol)\n</code></pre> <p>\"Applies only to <code>SIDECAR_INBOUND</code> context.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistenerfilterchainfilter","title":"obj spec.configPatches.match.listener.filterChain.filter","text":"<p>\"The name of a specific filter to apply the patch to.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainfilterwithname","title":"fn spec.configPatches.match.listener.filterChain.filter.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The filter name to match on.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchlistenerfilterchainfiltersubfilter","title":"obj spec.configPatches.match.listener.filterChain.filter.subFilter","text":""},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchlistenerfilterchainfiltersubfilterwithname","title":"fn spec.configPatches.match.listener.filterChain.filter.subFilter.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The filter name to match on.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchproxy","title":"obj spec.configPatches.match.proxy","text":"<p>\"Match on properties associated with a proxy.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchproxywithmetadata","title":"fn spec.configPatches.match.proxy.withMetadata","text":"<pre><code>withMetadata(metadata)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchproxywithmetadatamixin","title":"fn spec.configPatches.match.proxy.withMetadataMixin","text":"<pre><code>withMetadataMixin(metadata)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchproxywithproxyversion","title":"fn spec.configPatches.match.proxy.withProxyVersion","text":"<pre><code>withProxyVersion(proxyVersion)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchrouteconfiguration","title":"obj spec.configPatches.match.routeConfiguration","text":"<p>\"Match on envoy HTTP route configuration attributes.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithgateway","title":"fn spec.configPatches.match.routeConfiguration.withGateway","text":"<pre><code>withGateway(gateway)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithname","title":"fn spec.configPatches.match.routeConfiguration.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Route configuration name to match on.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithportname","title":"fn spec.configPatches.match.routeConfiguration.withPortName","text":"<pre><code>withPortName(portName)\n</code></pre> <p>\"Applicable only for GATEWAY context.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationwithportnumber","title":"fn spec.configPatches.match.routeConfiguration.withPortNumber","text":"<pre><code>withPortNumber(portNumber)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchrouteconfigurationvhost","title":"obj spec.configPatches.match.routeConfiguration.vhost","text":""},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationvhostwithname","title":"fn spec.configPatches.match.routeConfiguration.vhost.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchesmatchrouteconfigurationvhostroute","title":"obj spec.configPatches.match.routeConfiguration.vhost.route","text":"<p>\"Match a specific route within the virtual host.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationvhostroutewithaction","title":"fn spec.configPatches.match.routeConfiguration.vhost.route.withAction","text":"<pre><code>withAction(action)\n</code></pre> <p>\"Match a route with specific action type.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchesmatchrouteconfigurationvhostroutewithname","title":"fn spec.configPatches.match.routeConfiguration.vhost.route.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specconfigpatchespatch","title":"obj spec.configPatches.patch","text":"<p>\"The patch to apply along with the operation.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithfilterclass","title":"fn spec.configPatches.patch.withFilterClass","text":"<pre><code>withFilterClass(filterClass)\n</code></pre> <p>\"Determines the filter insertion order.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithoperation","title":"fn spec.configPatches.patch.withOperation","text":"<pre><code>withOperation(operation)\n</code></pre> <p>\"Determines how the patch should be applied.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithvalue","title":"fn spec.configPatches.patch.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"The JSON config of the object being patched.\"</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specconfigpatchespatchwithvaluemixin","title":"fn spec.configPatches.patch.withValueMixin","text":"<pre><code>withValueMixin(value)\n</code></pre> <p>\"The JSON config of the object being patched.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/envoyFilter/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/","title":"networking.v1alpha3.gateway","text":""},{"location":"1.19/networking/v1alpha3/gateway/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> <li><code>fn withServers(servers)</code></li> <li><code>fn withServersMixin(servers)</code></li> <li><code>obj spec.servers</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.servers.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.servers.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/gateway/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/gateway/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Gateway</p>"},{"location":"1.19/networking/v1alpha3/gateway/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specwithselectormixin","title":"fn spec.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specwithservers","title":"fn spec.withServers","text":"<pre><code>withServers(servers)\n</code></pre> <p>\"A list of server specifications.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specwithserversmixin","title":"fn spec.withServersMixin","text":"<pre><code>withServersMixin(servers)\n</code></pre> <p>\"A list of server specifications.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#obj-specservers","title":"obj spec.servers","text":"<p>\"A list of server specifications.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverswithbind","title":"fn spec.servers.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverswithdefaultendpoint","title":"fn spec.servers.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverswithhosts","title":"fn spec.servers.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverswithhostsmixin","title":"fn spec.servers.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverswithname","title":"fn spec.servers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"An optional name of the server, when set must be unique across all servers.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#obj-specserversport","title":"obj spec.servers.port","text":""},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserversportwithname","title":"fn spec.servers.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserversportwithnumber","title":"fn spec.servers.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserversportwithprotocol","title":"fn spec.servers.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserversportwithtargetport","title":"fn spec.servers.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#obj-specserverstls","title":"obj spec.servers.tls","text":"<p>\"Set of TLS related options that govern the server's behavior.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithcacertificates","title":"fn spec.servers.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code> or <code>OPTIONAL_MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithciphersuites","title":"fn spec.servers.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithciphersuitesmixin","title":"fn spec.servers.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithcredentialname","title":"fn spec.servers.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithhttpsredirect","title":"fn spec.servers.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithmaxprotocolversion","title":"fn spec.servers.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithminprotocolversion","title":"fn spec.servers.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithmode","title":"fn spec.servers.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithprivatekey","title":"fn spec.servers.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithservercertificate","title":"fn spec.servers.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithsubjectaltnames","title":"fn spec.servers.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithsubjectaltnamesmixin","title":"fn spec.servers.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatehash","title":"fn spec.servers.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatehashmixin","title":"fn spec.servers.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatespki","title":"fn spec.servers.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/gateway/#fn-specserverstlswithverifycertificatespkimixin","title":"fn spec.servers.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/","title":"networking.v1alpha3.serviceEntry","text":""},{"location":"1.19/networking/v1alpha3/serviceEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddresses(addresses)</code></li> <li><code>fn withAddressesMixin(addresses)</code></li> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withEndpointsMixin(endpoints)</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withLocation(location)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResolution(resolution)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.endpoints</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ServiceEntry</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithaddresses","title":"fn spec.withAddresses","text":"<pre><code>withAddresses(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithaddressesmixin","title":"fn spec.withAddressesMixin","text":"<pre><code>withAddressesMixin(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithendpoints","title":"fn spec.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithendpointsmixin","title":"fn spec.withEndpointsMixin","text":"<pre><code>withEndpointsMixin(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithlocation","title":"fn spec.withLocation","text":"<pre><code>withLocation(location)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithresolution","title":"fn spec.withResolution","text":"<pre><code>withResolution(resolution)\n</code></pre> <p>\"Service resolution mode for the hosts.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithsubjectaltnames","title":"fn spec.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specwithsubjectaltnamesmixin","title":"fn spec.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#obj-specendpoints","title":"obj spec.endpoints","text":"<p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithaddress","title":"fn spec.endpoints.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithlabels","title":"fn spec.endpoints.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithlabelsmixin","title":"fn spec.endpoints.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithlocality","title":"fn spec.endpoints.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithnetwork","title":"fn spec.endpoints.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithports","title":"fn spec.endpoints.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithportsmixin","title":"fn spec.endpoints.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithserviceaccount","title":"fn spec.endpoints.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specendpointswithweight","title":"fn spec.endpoints.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#obj-specports","title":"obj spec.ports","text":"<p>\"The ports associated with the external service.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specportswithnumber","title":"fn spec.ports.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specportswithtargetport","title":"fn spec.ports.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":"<p>\"Applicable only for MESH_INTERNAL services.\"</p>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/serviceEntry/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/","title":"networking.v1alpha3.sidecar","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>obj spec.egress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>obj spec.ingress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.ingress.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> <li><code>obj spec.outboundTrafficPolicy</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/sidecar/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sidecar</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specegress","title":"obj spec.egress","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegresswithbind","title":"fn spec.egress.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegresswithcapturemode","title":"fn spec.egress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegresswithhosts","title":"fn spec.egress.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegresswithhostsmixin","title":"fn spec.egress.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specegressport","title":"obj spec.egress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegressportwithname","title":"fn spec.egress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegressportwithnumber","title":"fn spec.egress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegressportwithprotocol","title":"fn spec.egress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specegressportwithtargetport","title":"fn spec.egress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specingress","title":"obj spec.ingress","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresswithbind","title":"fn spec.ingress.withBind","text":"<pre><code>withBind(bind)\n</code></pre> <p>\"The IP(IPv4 or IPv6) to which the listener should be bound.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresswithcapturemode","title":"fn spec.ingress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresswithdefaultendpoint","title":"fn spec.ingress.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specingressport","title":"obj spec.ingress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingressportwithname","title":"fn spec.ingress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingressportwithnumber","title":"fn spec.ingress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingressportwithprotocol","title":"fn spec.ingress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingressportwithtargetport","title":"fn spec.ingress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specingresstls","title":"obj spec.ingress.tls","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithcacertificates","title":"fn spec.ingress.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code> or <code>OPTIONAL_MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithciphersuites","title":"fn spec.ingress.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithciphersuitesmixin","title":"fn spec.ingress.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithcredentialname","title":"fn spec.ingress.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithhttpsredirect","title":"fn spec.ingress.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithmaxprotocolversion","title":"fn spec.ingress.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithminprotocolversion","title":"fn spec.ingress.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithmode","title":"fn spec.ingress.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithprivatekey","title":"fn spec.ingress.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithservercertificate","title":"fn spec.ingress.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithsubjectaltnames","title":"fn spec.ingress.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithsubjectaltnamesmixin","title":"fn spec.ingress.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatehash","title":"fn spec.ingress.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatehashmixin","title":"fn spec.ingress.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatespki","title":"fn spec.ingress.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specingresstlswithverifycertificatespkimixin","title":"fn spec.ingress.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specoutboundtrafficpolicy","title":"obj spec.outboundTrafficPolicy","text":"<p>\"Configuration for the outbound traffic policy.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicywithmode","title":"fn spec.outboundTrafficPolicy.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specoutboundtrafficpolicyegressproxy","title":"obj spec.outboundTrafficPolicy.egressProxy","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicyegressproxywithhost","title":"fn spec.outboundTrafficPolicy.egressProxy.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicyegressproxywithsubset","title":"fn spec.outboundTrafficPolicy.egressProxy.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specoutboundtrafficpolicyegressproxyport","title":"obj spec.outboundTrafficPolicy.egressProxy.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specoutboundtrafficpolicyegressproxyportwithnumber","title":"fn spec.outboundTrafficPolicy.egressProxy.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/sidecar/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/","title":"networking.v1alpha3.virtualService","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withHttp(http)</code></li> <li><code>fn withHttpMixin(http)</code></li> <li><code>fn withTcp(tcp)</code></li> <li><code>fn withTcpMixin(tcp)</code></li> <li><code>fn withTls(tls)</code></li> <li><code>fn withTlsMixin(tls)</code></li> <li><code>obj spec.http</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withMirrorPercent(mirrorPercent)</code></li> <li><code>fn withMirror_percent(mirror_percent)</code></li> <li><code>fn withMirrors(mirrors)</code></li> <li><code>fn withMirrorsMixin(mirrors)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>obj spec.http.corsPolicy</code></li> <li><code>fn withAllowCredentials(allowCredentials)</code></li> <li><code>fn withAllowHeaders(allowHeaders)</code></li> <li><code>fn withAllowHeadersMixin(allowHeaders)</code></li> <li><code>fn withAllowMethods(allowMethods)</code></li> <li><code>fn withAllowMethodsMixin(allowMethods)</code></li> <li><code>fn withAllowOrigin(allowOrigin)</code></li> <li><code>fn withAllowOriginMixin(allowOrigin)</code></li> <li><code>fn withAllowOrigins(allowOrigins)</code></li> <li><code>fn withAllowOriginsMixin(allowOrigins)</code></li> <li><code>fn withExposeHeaders(exposeHeaders)</code></li> <li><code>fn withExposeHeadersMixin(exposeHeaders)</code></li> <li><code>fn withMaxAge(maxAge)</code></li> <li><code>obj spec.http.corsPolicy.allowOrigins</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.delegate</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.http.directResponse</code></li> <li><code>obj spec.http.directResponse.body</code><ul> <li><code>fn withBytes(bytes)</code></li> <li><code>fn withString(string)</code></li> </ul> </li> <li><code>obj spec.http.fault</code></li> <li><code>obj spec.http.fault.abort</code><ul> <li><code>fn withGrpcStatus(grpcStatus)</code></li> <li><code>fn withHttp2Error(http2Error)</code></li> <li><code>fn withHttpStatus(httpStatus)</code></li> <li><code>obj spec.http.fault.abort.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.fault.delay</code><ul> <li><code>fn withExponentialDelay(exponentialDelay)</code></li> <li><code>fn withFixedDelay(fixedDelay)</code></li> <li><code>fn withPercent(percent)</code></li> <li><code>obj spec.http.fault.delay.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.headers</code></li> <li><code>obj spec.http.headers.request</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.headers.response</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.match</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHeaders(headers)</code></li> <li><code>fn withHeadersMixin(headers)</code></li> <li><code>fn withIgnoreUriCase(ignoreUriCase)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withQueryParams(queryParams)</code></li> <li><code>fn withQueryParamsMixin(queryParams)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withStatPrefix(statPrefix)</code></li> <li><code>fn withWithoutHeaders(withoutHeaders)</code></li> <li><code>fn withWithoutHeadersMixin(withoutHeaders)</code></li> <li><code>obj spec.http.match.authority</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.headers</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.match.method</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.queryParams</code><ul> <li><code>fn withExact(key, value)</code></li> <li><code>fn withExactMixin(key, value)</code></li> <li><code>fn withRegex(key, value)</code></li> <li><code>fn withRegexMixin(key, value)</code></li> </ul> </li> <li><code>obj spec.http.match.scheme</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.uri</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.withoutHeaders</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.mirror</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.mirror.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.mirrorPercentage</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.http.mirrors</code></li> <li><code>obj spec.http.mirrors.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.mirrors.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.mirrors.percentage</code><ul> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.redirect</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withDerivePort(derivePort)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withRedirectCode(redirectCode)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.retries</code></li> <li><code>fn withAttempts(attempts)</code></li> <li><code>fn withPerTryTimeout(perTryTimeout)</code></li> <li><code>fn withRetryOn(retryOn)</code></li> <li><code>fn withRetryRemoteLocalities(retryRemoteLocalities)</code></li> <li><code>obj spec.http.rewrite</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.rewrite.uriRegexRewrite</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withRewrite(rewrite)</code></li> </ul> </li> <li><code>obj spec.http.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.http.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.route.headers</code><ul> <li><code>obj spec.http.route.headers.request</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> <li><code>obj spec.http.route.headers.response</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tcp</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tcp.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withSourceSubnet(sourceSubnet)</code></li> <li><code>obj spec.tcp.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tcp.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tcp.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tls</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tls.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSniHosts(sniHosts)</code></li> <li><code>fn withSniHostsMixin(sniHosts)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>obj spec.tls.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tls.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tls.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/virtualService/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of VirtualService</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithgateways","title":"fn spec.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithgatewaysmixin","title":"fn spec.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithhttp","title":"fn spec.withHttp","text":"<pre><code>withHttp(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithhttpmixin","title":"fn spec.withHttpMixin","text":"<pre><code>withHttpMixin(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithtcp","title":"fn spec.withTcp","text":"<pre><code>withTcp(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithtcpmixin","title":"fn spec.withTcpMixin","text":"<pre><code>withTcpMixin(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithtls","title":"fn spec.withTls","text":"<pre><code>withTls(tls)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-specwithtlsmixin","title":"fn spec.withTlsMixin","text":"<pre><code>withTlsMixin(tls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttp","title":"obj spec.http","text":"<p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithmatch","title":"fn spec.http.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithmatchmixin","title":"fn spec.http.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithmirrorpercent","title":"fn spec.http.withMirrorPercent","text":"<pre><code>withMirrorPercent(mirrorPercent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithmirror_percent","title":"fn spec.http.withMirror_percent","text":"<pre><code>withMirror_percent(mirror_percent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithmirrors","title":"fn spec.http.withMirrors","text":"<pre><code>withMirrors(mirrors)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithmirrorsmixin","title":"fn spec.http.withMirrorsMixin","text":"<pre><code>withMirrorsMixin(mirrors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithname","title":"fn spec.http.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to the route for debugging purposes.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithroute","title":"fn spec.http.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithroutemixin","title":"fn spec.http.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpwithtimeout","title":"fn spec.http.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout for HTTP requests, default is disabled.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpcorspolicy","title":"obj spec.http.corsPolicy","text":"<p>\"Cross-Origin Resource Sharing policy (CORS).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowcredentials","title":"fn spec.http.corsPolicy.withAllowCredentials","text":"<pre><code>withAllowCredentials(allowCredentials)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowheaders","title":"fn spec.http.corsPolicy.withAllowHeaders","text":"<pre><code>withAllowHeaders(allowHeaders)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowheadersmixin","title":"fn spec.http.corsPolicy.withAllowHeadersMixin","text":"<pre><code>withAllowHeadersMixin(allowHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowmethods","title":"fn spec.http.corsPolicy.withAllowMethods","text":"<pre><code>withAllowMethods(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithallowmethodsmixin","title":"fn spec.http.corsPolicy.withAllowMethodsMixin","text":"<pre><code>withAllowMethodsMixin(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworigin","title":"fn spec.http.corsPolicy.withAllowOrigin","text":"<pre><code>withAllowOrigin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworiginmixin","title":"fn spec.http.corsPolicy.withAllowOriginMixin","text":"<pre><code>withAllowOriginMixin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworigins","title":"fn spec.http.corsPolicy.withAllowOrigins","text":"<pre><code>withAllowOrigins(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithalloworiginsmixin","title":"fn spec.http.corsPolicy.withAllowOriginsMixin","text":"<pre><code>withAllowOriginsMixin(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithexposeheaders","title":"fn spec.http.corsPolicy.withExposeHeaders","text":"<pre><code>withExposeHeaders(exposeHeaders)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithexposeheadersmixin","title":"fn spec.http.corsPolicy.withExposeHeadersMixin","text":"<pre><code>withExposeHeadersMixin(exposeHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicywithmaxage","title":"fn spec.http.corsPolicy.withMaxAge","text":"<pre><code>withMaxAge(maxAge)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpcorspolicyalloworigins","title":"obj spec.http.corsPolicy.allowOrigins","text":"<p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicyalloworiginswithexact","title":"fn spec.http.corsPolicy.allowOrigins.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicyalloworiginswithprefix","title":"fn spec.http.corsPolicy.allowOrigins.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpcorspolicyalloworiginswithregex","title":"fn spec.http.corsPolicy.allowOrigins.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpdelegate","title":"obj spec.http.delegate","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpdelegatewithname","title":"fn spec.http.delegate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the delegate VirtualService.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpdelegatewithnamespace","title":"fn spec.http.delegate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace where the delegate VirtualService resides.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpdirectresponse","title":"obj spec.http.directResponse","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpdirectresponsebody","title":"obj spec.http.directResponse.body","text":"<p>\"Specifies the content of the response body.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpdirectresponsebodywithbytes","title":"fn spec.http.directResponse.body.withBytes","text":"<pre><code>withBytes(bytes)\n</code></pre> <p>\"response body as base64 encoded bytes.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpdirectresponsebodywithstring","title":"fn spec.http.directResponse.body.withString","text":"<pre><code>withString(string)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpfault","title":"obj spec.http.fault","text":"<p>\"Fault injection policy to apply on HTTP traffic at the client side.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpfaultabort","title":"obj spec.http.fault.abort","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultabortwithgrpcstatus","title":"fn spec.http.fault.abort.withGrpcStatus","text":"<pre><code>withGrpcStatus(grpcStatus)\n</code></pre> <p>\"GRPC status code to use to abort the request.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultabortwithhttp2error","title":"fn spec.http.fault.abort.withHttp2Error","text":"<pre><code>withHttp2Error(http2Error)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultabortwithhttpstatus","title":"fn spec.http.fault.abort.withHttpStatus","text":"<pre><code>withHttpStatus(httpStatus)\n</code></pre> <p>\"HTTP status code to use to abort the Http request.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpfaultabortpercentage","title":"obj spec.http.fault.abort.percentage","text":"<p>\"Percentage of requests to be aborted with the error code provided.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultabortpercentagewithvalue","title":"fn spec.http.fault.abort.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpfaultdelay","title":"obj spec.http.fault.delay","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaywithexponentialdelay","title":"fn spec.http.fault.delay.withExponentialDelay","text":"<pre><code>withExponentialDelay(exponentialDelay)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaywithfixeddelay","title":"fn spec.http.fault.delay.withFixedDelay","text":"<pre><code>withFixedDelay(fixedDelay)\n</code></pre> <p>\"Add a fixed delay before forwarding the request.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaywithpercent","title":"fn spec.http.fault.delay.withPercent","text":"<pre><code>withPercent(percent)\n</code></pre> <p>\"Percentage of requests on which the delay will be injected (0-100).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpfaultdelaypercentage","title":"obj spec.http.fault.delay.percentage","text":"<p>\"Percentage of requests on which the delay will be injected.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpfaultdelaypercentagewithvalue","title":"fn spec.http.fault.delay.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpheaders","title":"obj spec.http.headers","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpheadersrequest","title":"obj spec.http.headers.request","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithadd","title":"fn spec.http.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithaddmixin","title":"fn spec.http.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithremove","title":"fn spec.http.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithremovemixin","title":"fn spec.http.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithset","title":"fn spec.http.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersrequestwithsetmixin","title":"fn spec.http.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpheadersresponse","title":"obj spec.http.headers.response","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithadd","title":"fn spec.http.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithaddmixin","title":"fn spec.http.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithremove","title":"fn spec.http.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithremovemixin","title":"fn spec.http.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithset","title":"fn spec.http.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpheadersresponsewithsetmixin","title":"fn spec.http.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatch","title":"obj spec.http.match","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithgateways","title":"fn spec.http.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithgatewaysmixin","title":"fn spec.http.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithheaders","title":"fn spec.http.match.withHeaders","text":"<pre><code>withHeaders(headers)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithheadersmixin","title":"fn spec.http.match.withHeadersMixin","text":"<pre><code>withHeadersMixin(headers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithignoreuricase","title":"fn spec.http.match.withIgnoreUriCase","text":"<pre><code>withIgnoreUriCase(ignoreUriCase)\n</code></pre> <p>\"Flag to specify whether the URI matching should be case-insensitive.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithname","title":"fn spec.http.match.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to a match.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithport","title":"fn spec.http.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the ports on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithqueryparams","title":"fn spec.http.match.withQueryParams","text":"<pre><code>withQueryParams(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithqueryparamsmixin","title":"fn spec.http.match.withQueryParamsMixin","text":"<pre><code>withQueryParamsMixin(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithsourcelabels","title":"fn spec.http.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithsourcelabelsmixin","title":"fn spec.http.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithsourcenamespace","title":"fn spec.http.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithstatprefix","title":"fn spec.http.match.withStatPrefix","text":"<pre><code>withStatPrefix(statPrefix)\n</code></pre> <p>\"The human readable prefix to use when emitting statistics for this route.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithwithoutheaders","title":"fn spec.http.match.withWithoutHeaders","text":"<pre><code>withWithoutHeaders(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithwithoutheadersmixin","title":"fn spec.http.match.withWithoutHeadersMixin","text":"<pre><code>withWithoutHeadersMixin(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchauthority","title":"obj spec.http.match.authority","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchauthoritywithexact","title":"fn spec.http.match.authority.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchauthoritywithprefix","title":"fn spec.http.match.authority.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchauthoritywithregex","title":"fn spec.http.match.authority.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchheaders","title":"obj spec.http.match.headers","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithexact","title":"fn spec.http.match.headers.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithexactmixin","title":"fn spec.http.match.headers.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithprefix","title":"fn spec.http.match.headers.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithprefixmixin","title":"fn spec.http.match.headers.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithregex","title":"fn spec.http.match.headers.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchheaderswithregexmixin","title":"fn spec.http.match.headers.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchmethod","title":"obj spec.http.match.method","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchmethodwithexact","title":"fn spec.http.match.method.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchmethodwithprefix","title":"fn spec.http.match.method.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchmethodwithregex","title":"fn spec.http.match.method.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchqueryparams","title":"obj spec.http.match.queryParams","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithexact","title":"fn spec.http.match.queryParams.withExact","text":"<pre><code>withExact(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithexactmixin","title":"fn spec.http.match.queryParams.withExactMixin","text":"<pre><code>withExactMixin(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithregex","title":"fn spec.http.match.queryParams.withRegex","text":"<pre><code>withRegex(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchqueryparamswithregexmixin","title":"fn spec.http.match.queryParams.withRegexMixin","text":"<pre><code>withRegexMixin(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchscheme","title":"obj spec.http.match.scheme","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchschemewithexact","title":"fn spec.http.match.scheme.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchschemewithprefix","title":"fn spec.http.match.scheme.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchschemewithregex","title":"fn spec.http.match.scheme.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchuri","title":"obj spec.http.match.uri","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchuriwithexact","title":"fn spec.http.match.uri.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchuriwithprefix","title":"fn spec.http.match.uri.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchuriwithregex","title":"fn spec.http.match.uri.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmatchwithoutheaders","title":"obj spec.http.match.withoutHeaders","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithexact","title":"fn spec.http.match.withoutHeaders.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithexactmixin","title":"fn spec.http.match.withoutHeaders.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithprefix","title":"fn spec.http.match.withoutHeaders.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithprefixmixin","title":"fn spec.http.match.withoutHeaders.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithregex","title":"fn spec.http.match.withoutHeaders.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmatchwithoutheaderswithregexmixin","title":"fn spec.http.match.withoutHeaders.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirror","title":"obj spec.http.mirror","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorwithhost","title":"fn spec.http.mirror.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorwithsubset","title":"fn spec.http.mirror.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirrorport","title":"obj spec.http.mirror.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorportwithnumber","title":"fn spec.http.mirror.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirrorpercentage","title":"obj spec.http.mirrorPercentage","text":"<p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorpercentagewithvalue","title":"fn spec.http.mirrorPercentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirrors","title":"obj spec.http.mirrors","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirrorsdestination","title":"obj spec.http.mirrors.destination","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorsdestinationwithhost","title":"fn spec.http.mirrors.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorsdestinationwithsubset","title":"fn spec.http.mirrors.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirrorsdestinationport","title":"obj spec.http.mirrors.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorsdestinationportwithnumber","title":"fn spec.http.mirrors.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpmirrorspercentage","title":"obj spec.http.mirrors.percentage","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpmirrorspercentagewithvalue","title":"fn spec.http.mirrors.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpredirect","title":"obj spec.http.redirect","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpredirectwithauthority","title":"fn spec.http.redirect.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpredirectwithderiveport","title":"fn spec.http.redirect.withDerivePort","text":"<pre><code>withDerivePort(derivePort)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpredirectwithport","title":"fn spec.http.redirect.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"On a redirect, overwrite the port portion of the URL with this value.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpredirectwithredirectcode","title":"fn spec.http.redirect.withRedirectCode","text":"<pre><code>withRedirectCode(redirectCode)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpredirectwithscheme","title":"fn spec.http.redirect.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre> <p>\"On a redirect, overwrite the scheme portion of the URL with this value.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpredirectwithuri","title":"fn spec.http.redirect.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttpretries","title":"obj spec.http.retries","text":"<p>\"Retry policy for HTTP requests.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpretrieswithattempts","title":"fn spec.http.retries.withAttempts","text":"<pre><code>withAttempts(attempts)\n</code></pre> <p>\"Number of retries to be allowed for a given request.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpretrieswithpertrytimeout","title":"fn spec.http.retries.withPerTryTimeout","text":"<pre><code>withPerTryTimeout(perTryTimeout)\n</code></pre> <p>\"Timeout per attempt for a given request, including the initial call and any retries.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpretrieswithretryon","title":"fn spec.http.retries.withRetryOn","text":"<pre><code>withRetryOn(retryOn)\n</code></pre> <p>\"Specifies the conditions under which retry takes place.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttpretrieswithretryremotelocalities","title":"fn spec.http.retries.withRetryRemoteLocalities","text":"<pre><code>withRetryRemoteLocalities(retryRemoteLocalities)\n</code></pre> <p>\"Flag to specify whether the retries should retry to other localities.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttprewrite","title":"obj spec.http.rewrite","text":"<p>\"Rewrite HTTP URIs and Authority headers.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprewritewithauthority","title":"fn spec.http.rewrite.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre> <p>\"rewrite the Authority/Host header with this value.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprewritewithuri","title":"fn spec.http.rewrite.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttprewriteuriregexrewrite","title":"obj spec.http.rewrite.uriRegexRewrite","text":"<p>\"rewrite the path portion of the URI with the specified regex.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprewriteuriregexrewritewithmatch","title":"fn spec.http.rewrite.uriRegexRewrite.withMatch","text":"<pre><code>withMatch(match)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprewriteuriregexrewritewithrewrite","title":"fn spec.http.rewrite.uriRegexRewrite.withRewrite","text":"<pre><code>withRewrite(rewrite)\n</code></pre> <p>\"The string that should replace into matching portions of original URI.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttproute","title":"obj spec.http.route","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttproutewithweight","title":"fn spec.http.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttproutedestination","title":"obj spec.http.route.destination","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttproutedestinationwithhost","title":"fn spec.http.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttproutedestinationwithsubset","title":"fn spec.http.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttproutedestinationport","title":"obj spec.http.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttproutedestinationportwithnumber","title":"fn spec.http.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttprouteheaders","title":"obj spec.http.route.headers","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttprouteheadersrequest","title":"obj spec.http.route.headers.request","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithadd","title":"fn spec.http.route.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithaddmixin","title":"fn spec.http.route.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithremove","title":"fn spec.http.route.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithremovemixin","title":"fn spec.http.route.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithset","title":"fn spec.http.route.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersrequestwithsetmixin","title":"fn spec.http.route.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spechttprouteheadersresponse","title":"obj spec.http.route.headers.response","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithadd","title":"fn spec.http.route.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithaddmixin","title":"fn spec.http.route.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithremove","title":"fn spec.http.route.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithremovemixin","title":"fn spec.http.route.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithset","title":"fn spec.http.route.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spechttprouteheadersresponsewithsetmixin","title":"fn spec.http.route.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectcp","title":"obj spec.tcp","text":"<p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpwithmatch","title":"fn spec.tcp.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpwithmatchmixin","title":"fn spec.tcp.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpwithroute","title":"fn spec.tcp.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpwithroutemixin","title":"fn spec.tcp.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectcpmatch","title":"obj spec.tcp.match","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithdestinationsubnets","title":"fn spec.tcp.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithdestinationsubnetsmixin","title":"fn spec.tcp.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithgateways","title":"fn spec.tcp.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithgatewaysmixin","title":"fn spec.tcp.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithport","title":"fn spec.tcp.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcelabels","title":"fn spec.tcp.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcelabelsmixin","title":"fn spec.tcp.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcenamespace","title":"fn spec.tcp.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcpmatchwithsourcesubnet","title":"fn spec.tcp.match.withSourceSubnet","text":"<pre><code>withSourceSubnet(sourceSubnet)\n</code></pre> <p>\"IPv4 or IPv6 ip address of source with optional subnet.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectcproute","title":"obj spec.tcp.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcproutewithweight","title":"fn spec.tcp.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectcproutedestination","title":"obj spec.tcp.route.destination","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcproutedestinationwithhost","title":"fn spec.tcp.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcproutedestinationwithsubset","title":"fn spec.tcp.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectcproutedestinationport","title":"obj spec.tcp.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectcproutedestinationportwithnumber","title":"fn spec.tcp.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectls","title":"obj spec.tls","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlswithmatch","title":"fn spec.tls.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlswithmatchmixin","title":"fn spec.tls.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlswithroute","title":"fn spec.tls.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlswithroutemixin","title":"fn spec.tls.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectlsmatch","title":"obj spec.tls.match","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithdestinationsubnets","title":"fn spec.tls.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithdestinationsubnetsmixin","title":"fn spec.tls.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithgateways","title":"fn spec.tls.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithgatewaysmixin","title":"fn spec.tls.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithport","title":"fn spec.tls.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsnihosts","title":"fn spec.tls.match.withSniHosts","text":"<pre><code>withSniHosts(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsnihostsmixin","title":"fn spec.tls.match.withSniHostsMixin","text":"<pre><code>withSniHostsMixin(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsourcelabels","title":"fn spec.tls.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsourcelabelsmixin","title":"fn spec.tls.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsmatchwithsourcenamespace","title":"fn spec.tls.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectlsroute","title":"obj spec.tls.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsroutewithweight","title":"fn spec.tls.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectlsroutedestination","title":"obj spec.tls.route.destination","text":""},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsroutedestinationwithhost","title":"fn spec.tls.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsroutedestinationwithsubset","title":"fn spec.tls.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#obj-spectlsroutedestinationport","title":"obj spec.tls.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1alpha3/virtualService/#fn-spectlsroutedestinationportwithnumber","title":"fn spec.tls.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadEntry/","title":"networking.v1alpha3.workloadEntry","text":""},{"location":"1.19/networking/v1alpha3/workloadEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadEntry</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithaddress","title":"fn spec.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithlabels","title":"fn spec.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithlabelsmixin","title":"fn spec.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithlocality","title":"fn spec.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithnetwork","title":"fn spec.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithserviceaccount","title":"fn spec.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadEntry/#fn-specwithweight","title":"fn spec.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/","title":"networking.v1alpha3.workloadGroup","text":""},{"location":"1.19/networking/v1alpha3/workloadGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>obj spec.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.probe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.probe.exec</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>obj spec.probe.httpGet</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.probe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.probe.tcpSocket</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadGroup</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-spec","title":"obj spec","text":"<p>\"Describes a collection of workload instances. See more details at: https://istio.io/docs/reference/config/networking/workload-group.html\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-specmetadata","title":"obj spec.metadata","text":"<p>\"Metadata that will be used for all corresponding <code>WorkloadEntries</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specmetadatawithannotations","title":"fn spec.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specmetadatawithannotationsmixin","title":"fn spec.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specmetadatawithlabels","title":"fn spec.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specmetadatawithlabelsmixin","title":"fn spec.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-specprobe","title":"obj spec.probe","text":"<p>\"<code>ReadinessProbe</code> describes the configuration the user must provide for healthchecking on their workload.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobewithfailurethreshold","title":"fn spec.probe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre> <p>\"Minimum consecutive failures for the probe to be considered failed after having succeeded.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobewithinitialdelayseconds","title":"fn spec.probe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre> <p>\"Number of seconds after the container has started before readiness probes are initiated.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobewithperiodseconds","title":"fn spec.probe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre> <p>\"How often (in seconds) to perform the probe.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobewithsuccessthreshold","title":"fn spec.probe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre> <p>\"Minimum consecutive successes for the probe to be considered successful after having failed.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobewithtimeoutseconds","title":"fn spec.probe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre> <p>\"Number of seconds after which the probe times out.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-specprobeexec","title":"obj spec.probe.exec","text":"<p>\"Health is determined by how the command that is executed exited.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobeexecwithcommand","title":"fn spec.probe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre> <p>\"Command to run.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobeexecwithcommandmixin","title":"fn spec.probe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>\"Command to run.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-specprobehttpget","title":"obj spec.probe.httpGet","text":""},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithhost","title":"fn spec.probe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"Host name to connect to, defaults to the pod IP.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithhttpheaders","title":"fn spec.probe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithhttpheadersmixin","title":"fn spec.probe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithpath","title":"fn spec.probe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to access on the HTTP server.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithport","title":"fn spec.probe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Port on which the endpoint lives.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgetwithscheme","title":"fn spec.probe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-specprobehttpgethttpheaders","title":"obj spec.probe.httpGet.httpHeaders","text":"<p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgethttpheaderswithname","title":"fn spec.probe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobehttpgethttpheaderswithvalue","title":"fn spec.probe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-specprobetcpsocket","title":"obj spec.probe.tcpSocket","text":"<p>\"Health is determined by if the proxy is able to connect.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobetcpsocketwithhost","title":"fn spec.probe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-specprobetcpsocketwithport","title":"fn spec.probe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template to be used for the generation of <code>WorkloadEntry</code> resources that belong to this <code>WorkloadGroup</code>.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithaddress","title":"fn spec.template.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithlabels","title":"fn spec.template.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithlabelsmixin","title":"fn spec.template.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithlocality","title":"fn spec.template.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithnetwork","title":"fn spec.template.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithports","title":"fn spec.template.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithportsmixin","title":"fn spec.template.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithserviceaccount","title":"fn spec.template.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.19/networking/v1alpha3/workloadGroup/#fn-spectemplatewithweight","title":"fn spec.template.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/","title":"networking.v1beta1","text":"<ul> <li>destinationRule</li> <li>gateway</li> <li>proxyConfig</li> <li>serviceEntry</li> <li>sidecar</li> <li>virtualService</li> <li>workloadEntry</li> <li>workloadGroup</li> </ul>"},{"location":"1.19/networking/v1beta1/destinationRule/","title":"networking.v1beta1.destinationRule","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubsets(subsets)</code></li> <li><code>fn withSubsetsMixin(subsets)</code></li> <li><code>obj spec.subsets</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.subsets.trafficPolicy</code></li> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool</code><ul> <li><code>obj spec.subsets.trafficPolicy.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings</code><ul> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.port</code></li> <li><code>fn withNumber(number)</code></li> <li><code>obj spec.subsets.trafficPolicy.portLevelSettings.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.subsets.trafficPolicy.tunnel</code><ul> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy</code><ul> <li><code>fn withPortLevelSettings(portLevelSettings)</code></li> <li><code>fn withPortLevelSettingsMixin(portLevelSettings)</code></li> <li><code>obj spec.trafficPolicy.connectionPool</code></li> <li><code>obj spec.trafficPolicy.connectionPool.http</code><ul> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.connectionPool.tcp</code><ul> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer</code></li> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash</code><ul> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.maglev</code></li> <li><code>fn withTableSize(tableSize)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting</code><ul> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover</code></li> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.outlierDetection</code></li> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool</code><ul> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.http</code></li> <li><code>fn withH2UpgradePolicy(h2UpgradePolicy)</code></li> <li><code>fn withHttp1MaxPendingRequests(http1MaxPendingRequests)</code></li> <li><code>fn withHttp2MaxRequests(http2MaxRequests)</code></li> <li><code>fn withIdleTimeout(idleTimeout)</code></li> <li><code>fn withMaxRequestsPerConnection(maxRequestsPerConnection)</code></li> <li><code>fn withMaxRetries(maxRetries)</code></li> <li><code>fn withUseClientProtocol(useClientProtocol)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp</code></li> <li><code>fn withConnectTimeout(connectTimeout)</code></li> <li><code>fn withMaxConnectionDuration(maxConnectionDuration)</code></li> <li><code>fn withMaxConnections(maxConnections)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive</code><ul> <li><code>fn withInterval(interval)</code></li> <li><code>fn withProbes(probes)</code></li> <li><code>fn withTime(time)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer</code><ul> <li><code>fn withSimple(simple)</code></li> <li><code>fn withWarmupDurationSecs(warmupDurationSecs)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash</code></li> <li><code>fn withHttpHeaderName(httpHeaderName)</code></li> <li><code>fn withHttpQueryParameterName(httpQueryParameterName)</code></li> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> <li><code>fn withUseSourceIp(useSourceIp)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withTtl(ttl)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev</code><ul> <li><code>fn withTableSize(tableSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash</code><ul> <li><code>fn withMinimumRingSize(minimumRingSize)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting</code></li> <li><code>fn withDistribute(distribute)</code></li> <li><code>fn withDistributeMixin(distribute)</code></li> <li><code>fn withEnabled(enabled)</code></li> <li><code>fn withFailover(failover)</code></li> <li><code>fn withFailoverMixin(failover)</code></li> <li><code>fn withFailoverPriority(failoverPriority)</code></li> <li><code>fn withFailoverPriorityMixin(failoverPriority)</code></li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withTo(to)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.outlierDetection</code><ul> <li><code>fn withBaseEjectionTime(baseEjectionTime)</code></li> <li><code>fn withConsecutive5xxErrors(consecutive5xxErrors)</code></li> <li><code>fn withConsecutiveErrors(consecutiveErrors)</code></li> <li><code>fn withConsecutiveGatewayErrors(consecutiveGatewayErrors)</code></li> <li><code>fn withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)</code></li> <li><code>fn withInterval(interval)</code></li> <li><code>fn withMaxEjectionPercent(maxEjectionPercent)</code></li> <li><code>fn withMinHealthPercent(minHealthPercent)</code></li> <li><code>fn withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.portLevelSettings.tls</code><ul> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> </ul> </li> <li><code>obj spec.trafficPolicy.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withClientCertificate(clientCertificate)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withInsecureSkipVerify(insecureSkipVerify)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withSni(sni)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.trafficPolicy.tunnel</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetHost(targetHost)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/destinationRule/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of DestinationRule</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting load balancing, outlier detection, etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this destination rule is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specwithhost","title":"fn spec.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specwithsubsets","title":"fn spec.withSubsets","text":"<pre><code>withSubsets(subsets)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specwithsubsetsmixin","title":"fn spec.withSubsetsMixin","text":"<pre><code>withSubsetsMixin(subsets)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsets","title":"obj spec.subsets","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetswithlabels","title":"fn spec.subsets.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetswithlabelsmixin","title":"fn spec.subsets.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetswithname","title":"fn spec.subsets.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the subset.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicy","title":"obj spec.subsets.trafficPolicy","text":"<p>\"Traffic policies that apply to this subset.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettings","title":"fn spec.subsets.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicywithportlevelsettingsmixin","title":"fn spec.subsets.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpool","title":"obj spec.subsets.trafficPolicy.connectionPool","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancer","title":"obj spec.subsets.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyoutlierdetection","title":"obj spec.subsets.trafficPolicy.outlierDetection","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettings","title":"obj spec.subsets.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.subsets.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.subsets.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.subsets.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingsport","title":"obj spec.subsets.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.subsets.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicyportlevelsettingstls","title":"obj spec.subsets.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithmode","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsni","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicytls","title":"obj spec.subsets.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithcacertificates","title":"fn spec.subsets.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithclientcertificate","title":"fn spec.subsets.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithcredentialname","title":"fn spec.subsets.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithinsecureskipverify","title":"fn spec.subsets.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithmode","title":"fn spec.subsets.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithprivatekey","title":"fn spec.subsets.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithsni","title":"fn spec.subsets.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnames","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.subsets.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specsubsetstrafficpolicytunnel","title":"obj spec.subsets.trafficPolicy.tunnel","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytunnelwithprotocol","title":"fn spec.subsets.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargethost","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specsubsetstrafficpolicytunnelwithtargetport","title":"fn spec.subsets.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicy","title":"obj spec.trafficPolicy","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicywithportlevelsettings","title":"fn spec.trafficPolicy.withPortLevelSettings","text":"<pre><code>withPortLevelSettings(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicywithportlevelsettingsmixin","title":"fn spec.trafficPolicy.withPortLevelSettingsMixin","text":"<pre><code>withPortLevelSettingsMixin(portLevelSettings)\n</code></pre> <p>\"Traffic policies specific to individual ports.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpool","title":"obj spec.trafficPolicy.connectionPool","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpoolhttp","title":"obj spec.trafficPolicy.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpooltcp","title":"obj spec.trafficPolicy.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancer","title":"obj spec.trafficPolicy.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerwithsimple","title":"fn spec.trafficPolicy.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyoutlierdetection","title":"obj spec.trafficPolicy.outlierDetection","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettings","title":"obj spec.trafficPolicy.portLevelSettings","text":"<p>\"Traffic policies specific to individual ports.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpool","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpoolhttp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.http","text":"<p>\"HTTP connection pool settings.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithh2upgradepolicy","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withH2UpgradePolicy","text":"<pre><code>withH2UpgradePolicy(h2UpgradePolicy)\n</code></pre> <p>\"Specify if http1.1 connection should be upgraded to http2 for the associated destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp1maxpendingrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp1MaxPendingRequests","text":"<pre><code>withHttp1MaxPendingRequests(http1MaxPendingRequests)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithhttp2maxrequests","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withHttp2MaxRequests","text":"<pre><code>withHttp2MaxRequests(http2MaxRequests)\n</code></pre> <p>\"Maximum number of active requests to a destination.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithidletimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withIdleTimeout","text":"<pre><code>withIdleTimeout(idleTimeout)\n</code></pre> <p>\"The idle timeout for upstream connection pool connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxrequestsperconnection","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRequestsPerConnection","text":"<pre><code>withMaxRequestsPerConnection(maxRequestsPerConnection)\n</code></pre> <p>\"Maximum number of requests per connection to a backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithmaxretries","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withMaxRetries","text":"<pre><code>withMaxRetries(maxRetries)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpoolhttpwithuseclientprotocol","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.http.withUseClientProtocol","text":"<pre><code>withUseClientProtocol(useClientProtocol)\n</code></pre> <p>\"If set to true, client protocol will be preserved while initiating connection to backend.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcp","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp","text":"<p>\"Settings common to both HTTP and TCP upstream connections.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithconnecttimeout","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withConnectTimeout","text":"<pre><code>withConnectTimeout(connectTimeout)\n</code></pre> <p>\"TCP connection timeout.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnectionduration","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnectionDuration","text":"<pre><code>withMaxConnectionDuration(maxConnectionDuration)\n</code></pre> <p>\"The maximum duration of a connection.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcpwithmaxconnections","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.withMaxConnections","text":"<pre><code>withMaxConnections(maxConnections)\n</code></pre> <p>\"Maximum number of HTTP1 /TCP connections to a destination host.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalive","title":"obj spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive","text":"<p>\"If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithinterval","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"The time duration between keep-alive probes.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithprobes","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withProbes","text":"<pre><code>withProbes(probes)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsconnectionpooltcptcpkeepalivewithtime","title":"fn spec.trafficPolicy.portLevelSettings.connectionPool.tcp.tcpKeepalive.withTime","text":"<pre><code>withTime(time)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancer","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer","text":"<p>\"Settings controlling the load balancer algorithms.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithsimple","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withSimple","text":"<pre><code>withSimple(simple)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerwithwarmupdurationsecs","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.withWarmupDurationSecs","text":"<pre><code>withWarmupDurationSecs(warmupDurationSecs)\n</code></pre> <p>\"Represents the warmup duration of Service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpheadername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpHeaderName","text":"<pre><code>withHttpHeaderName(httpHeaderName)\n</code></pre> <p>\"Hash based on a specific HTTP header.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithhttpqueryparametername","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withHttpQueryParameterName","text":"<pre><code>withHttpQueryParameterName(httpQueryParameterName)\n</code></pre> <p>\"Hash based on a specific HTTP query parameter.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre> <p>\"Deprecated.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashwithusesourceip","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.withUseSourceIp","text":"<pre><code>withUseSourceIp(useSourceIp)\n</code></pre> <p>\"Hash based on the source IP address.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookie","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie","text":"<p>\"Hash based on HTTP cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithname","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithpath","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to set for the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashhttpcookiewithttl","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.httpCookie.withTtl","text":"<pre><code>withTtl(ttl)\n</code></pre> <p>\"Lifetime of the cookie.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglev","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev","text":"<p>\"The Maglev load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashmaglevwithtablesize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.maglev.withTableSize","text":"<pre><code>withTableSize(tableSize)\n</code></pre> <p>\"The table size for Maglev hashing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhash","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash","text":"<p>\"The ring/modulo hash load balancer implements consistent hashing to backend hosts.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerconsistenthashringhashwithminimumringsize","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.consistentHash.ringHash.withMinimumRingSize","text":"<pre><code>withMinimumRingSize(minimumRingSize)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsetting","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistribute","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistribute","text":"<pre><code>withDistribute(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithdistributemixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withDistributeMixin","text":"<pre><code>withDistributeMixin(distribute)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithenabled","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withEnabled","text":"<pre><code>withEnabled(enabled)\n</code></pre> <p>\"enable locality load balancing, this is DestinationRule-level and will override mesh wide settings in entirety.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailover","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailover","text":"<pre><code>withFailover(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailovermixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverMixin","text":"<pre><code>withFailoverMixin(failover)\n</code></pre> <p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverpriority","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriority","text":"<pre><code>withFailoverPriority(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingwithfailoverprioritymixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.withFailoverPriorityMixin","text":"<pre><code>withFailoverPriorityMixin(failoverPriority)\n</code></pre> <p>\"failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistribute","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating locality, '/' separated, e.g.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingdistributewithtomixin","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.distribute.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Map of upstream localities to traffic distribution weights.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailover","title":"obj spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover","text":"<p>\"Optional: only one of distribute, failover or failoverPriority can be set.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithfrom","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Originating region.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsloadbalancerlocalitylbsettingfailoverwithto","title":"fn spec.trafficPolicy.portLevelSettings.loadBalancer.localityLbSetting.failover.withTo","text":"<pre><code>withTo(to)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsoutlierdetection","title":"obj spec.trafficPolicy.portLevelSettings.outlierDetection","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithbaseejectiontime","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withBaseEjectionTime","text":"<pre><code>withBaseEjectionTime(baseEjectionTime)\n</code></pre> <p>\"Minimum ejection duration.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutive5xxerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutive5xxErrors","text":"<pre><code>withConsecutive5xxErrors(consecutive5xxErrors)\n</code></pre> <p>\"Number of 5xx errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutiveerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveErrors","text":"<pre><code>withConsecutiveErrors(consecutiveErrors)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivegatewayerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveGatewayErrors","text":"<pre><code>withConsecutiveGatewayErrors(consecutiveGatewayErrors)\n</code></pre> <p>\"Number of gateway errors before a host is ejected from the connection pool.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithconsecutivelocaloriginfailures","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withConsecutiveLocalOriginFailures","text":"<pre><code>withConsecutiveLocalOriginFailures(consecutiveLocalOriginFailures)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithinterval","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withInterval","text":"<pre><code>withInterval(interval)\n</code></pre> <p>\"Time interval between ejection sweep analysis.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithmaxejectionpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMaxEjectionPercent","text":"<pre><code>withMaxEjectionPercent(maxEjectionPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithminhealthpercent","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withMinHealthPercent","text":"<pre><code>withMinHealthPercent(minHealthPercent)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsoutlierdetectionwithsplitexternallocaloriginerrors","title":"fn spec.trafficPolicy.portLevelSettings.outlierDetection.withSplitExternalLocalOriginErrors","text":"<pre><code>withSplitExternalLocalOriginErrors(splitExternalLocalOriginErrors)\n</code></pre> <p>\"Determines whether to distinguish local origin failures from external errors.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingsport","title":"obj spec.trafficPolicy.portLevelSettings.port","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingsportwithnumber","title":"fn spec.trafficPolicy.portLevelSettings.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicyportlevelsettingstls","title":"obj spec.trafficPolicy.portLevelSettings.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcacertificates","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithclientcertificate","title":"fn spec.trafficPolicy.portLevelSettings.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithcredentialname","title":"fn spec.trafficPolicy.portLevelSettings.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithinsecureskipverify","title":"fn spec.trafficPolicy.portLevelSettings.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithmode","title":"fn spec.trafficPolicy.portLevelSettings.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithprivatekey","title":"fn spec.trafficPolicy.portLevelSettings.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsni","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnames","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicyportlevelsettingstlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.portLevelSettings.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicytls","title":"obj spec.trafficPolicy.tls","text":"<p>\"TLS related settings for connections to the upstream service.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithcacertificates","title":"fn spec.trafficPolicy.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithclientcertificate","title":"fn spec.trafficPolicy.tls.withClientCertificate","text":"<pre><code>withClientCertificate(clientCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithcredentialname","title":"fn spec.trafficPolicy.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithinsecureskipverify","title":"fn spec.trafficPolicy.tls.withInsecureSkipVerify","text":"<pre><code>withInsecureSkipVerify(insecureSkipVerify)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithmode","title":"fn spec.trafficPolicy.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithprivatekey","title":"fn spec.trafficPolicy.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithsni","title":"fn spec.trafficPolicy.tls.withSni","text":"<pre><code>withSni(sni)\n</code></pre> <p>\"SNI string to present to the server during TLS handshake.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnames","title":"fn spec.trafficPolicy.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytlswithsubjectaltnamesmixin","title":"fn spec.trafficPolicy.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-spectrafficpolicytunnel","title":"obj spec.trafficPolicy.tunnel","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytunnelwithprotocol","title":"fn spec.trafficPolicy.tunnel.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Specifies which protocol to use for tunneling the downstream connection.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytunnelwithtargethost","title":"fn spec.trafficPolicy.tunnel.withTargetHost","text":"<pre><code>withTargetHost(targetHost)\n</code></pre> <p>\"Specifies a host to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-spectrafficpolicytunnelwithtargetport","title":"fn spec.trafficPolicy.tunnel.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre> <p>\"Specifies a port to which the downstream connection is tunneled.\"</p>"},{"location":"1.19/networking/v1beta1/destinationRule/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specworkloadselectorwithmatchlabels","title":"fn spec.workloadSelector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/destinationRule/#fn-specworkloadselectorwithmatchlabelsmixin","title":"fn spec.workloadSelector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/","title":"networking.v1beta1.gateway","text":""},{"location":"1.19/networking/v1beta1/gateway/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withSelectorMixin(selector)</code></li> <li><code>fn withServers(servers)</code></li> <li><code>fn withServersMixin(servers)</code></li> <li><code>obj spec.servers</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withName(name)</code></li> <li><code>obj spec.servers.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.servers.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/gateway/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/gateway/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Gateway</p>"},{"location":"1.19/networking/v1beta1/gateway/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting edge load balancer. See more details at: https://istio.io/docs/reference/config/networking/gateway.html\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specwithselectormixin","title":"fn spec.withSelectorMixin","text":"<pre><code>withSelectorMixin(selector)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specwithservers","title":"fn spec.withServers","text":"<pre><code>withServers(servers)\n</code></pre> <p>\"A list of server specifications.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specwithserversmixin","title":"fn spec.withServersMixin","text":"<pre><code>withServersMixin(servers)\n</code></pre> <p>\"A list of server specifications.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#obj-specservers","title":"obj spec.servers","text":"<p>\"A list of server specifications.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverswithbind","title":"fn spec.servers.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverswithdefaultendpoint","title":"fn spec.servers.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverswithhosts","title":"fn spec.servers.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverswithhostsmixin","title":"fn spec.servers.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"One or more hosts exposed by this gateway.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverswithname","title":"fn spec.servers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"An optional name of the server, when set must be unique across all servers.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#obj-specserversport","title":"obj spec.servers.port","text":""},{"location":"1.19/networking/v1beta1/gateway/#fn-specserversportwithname","title":"fn spec.servers.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserversportwithnumber","title":"fn spec.servers.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserversportwithprotocol","title":"fn spec.servers.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserversportwithtargetport","title":"fn spec.servers.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#obj-specserverstls","title":"obj spec.servers.tls","text":"<p>\"Set of TLS related options that govern the server's behavior.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithcacertificates","title":"fn spec.servers.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code> or <code>OPTIONAL_MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithciphersuites","title":"fn spec.servers.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithciphersuitesmixin","title":"fn spec.servers.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithcredentialname","title":"fn spec.servers.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithhttpsredirect","title":"fn spec.servers.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithmaxprotocolversion","title":"fn spec.servers.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithminprotocolversion","title":"fn spec.servers.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithmode","title":"fn spec.servers.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithprivatekey","title":"fn spec.servers.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithservercertificate","title":"fn spec.servers.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithsubjectaltnames","title":"fn spec.servers.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithsubjectaltnamesmixin","title":"fn spec.servers.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatehash","title":"fn spec.servers.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatehashmixin","title":"fn spec.servers.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatespki","title":"fn spec.servers.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.19/networking/v1beta1/gateway/#fn-specserverstlswithverifycertificatespkimixin","title":"fn spec.servers.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/","title":"networking.v1beta1.proxyConfig","text":""},{"location":"1.19/networking/v1beta1/proxyConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withConcurrency(concurrency)</code></li> <li><code>fn withEnvironmentVariables(environmentVariables)</code></li> <li><code>fn withEnvironmentVariablesMixin(environmentVariables)</code></li> <li><code>obj spec.image</code><ul> <li><code>fn withImageType(imageType)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ProxyConfig</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#obj-spec","title":"obj spec","text":"<p>\"Provides configuration for individual workloads. See more details at: https://istio.io/docs/reference/config/networking/proxy-config.html\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-specwithconcurrency","title":"fn spec.withConcurrency","text":"<pre><code>withConcurrency(concurrency)\n</code></pre> <p>\"The number of worker threads to run.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-specwithenvironmentvariables","title":"fn spec.withEnvironmentVariables","text":"<pre><code>withEnvironmentVariables(environmentVariables)\n</code></pre> <p>\"Additional environment variables for the proxy.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-specwithenvironmentvariablesmixin","title":"fn spec.withEnvironmentVariablesMixin","text":"<pre><code>withEnvironmentVariablesMixin(environmentVariables)\n</code></pre> <p>\"Additional environment variables for the proxy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#obj-specimage","title":"obj spec.image","text":"<p>\"Specifies the details of the proxy image.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-specimagewithimagetype","title":"fn spec.image.withImageType","text":"<pre><code>withImageType(imageType)\n</code></pre> <p>\"The image type of the image.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/proxyConfig/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/","title":"networking.v1beta1.serviceEntry","text":""},{"location":"1.19/networking/v1beta1/serviceEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddresses(addresses)</code></li> <li><code>fn withAddressesMixin(addresses)</code></li> <li><code>fn withEndpoints(endpoints)</code></li> <li><code>fn withEndpointsMixin(endpoints)</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withLocation(location)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withResolution(resolution)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>obj spec.endpoints</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ServiceEntry</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting service registry. See more details at: https://istio.io/docs/reference/config/networking/service-entry.html\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithaddresses","title":"fn spec.withAddresses","text":"<pre><code>withAddresses(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithaddressesmixin","title":"fn spec.withAddressesMixin","text":"<pre><code>withAddressesMixin(addresses)\n</code></pre> <p>\"The virtual IP addresses associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithendpoints","title":"fn spec.withEndpoints","text":"<pre><code>withEndpoints(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithendpointsmixin","title":"fn spec.withEndpointsMixin","text":"<pre><code>withEndpointsMixin(endpoints)\n</code></pre> <p>\"One or more endpoints associated with the service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The hosts associated with the ServiceEntry.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithlocation","title":"fn spec.withLocation","text":"<pre><code>withLocation(location)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"The ports associated with the external service.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithresolution","title":"fn spec.withResolution","text":"<pre><code>withResolution(resolution)\n</code></pre> <p>\"Service resolution mode for the hosts.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithsubjectaltnames","title":"fn spec.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specwithsubjectaltnamesmixin","title":"fn spec.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#obj-specendpoints","title":"obj spec.endpoints","text":"<p>\"One or more endpoints associated with the service.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithaddress","title":"fn spec.endpoints.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithlabels","title":"fn spec.endpoints.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithlabelsmixin","title":"fn spec.endpoints.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithlocality","title":"fn spec.endpoints.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithnetwork","title":"fn spec.endpoints.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithports","title":"fn spec.endpoints.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithportsmixin","title":"fn spec.endpoints.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithserviceaccount","title":"fn spec.endpoints.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specendpointswithweight","title":"fn spec.endpoints.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#obj-specports","title":"obj spec.ports","text":"<p>\"The ports associated with the external service.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specportswithnumber","title":"fn spec.ports.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specportswithtargetport","title":"fn spec.ports.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":"<p>\"Applicable only for MESH_INTERNAL services.\"</p>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/serviceEntry/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/","title":"networking.v1beta1.sidecar","text":""},{"location":"1.19/networking/v1beta1/sidecar/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>obj spec.egress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withBind(bind)</code></li> <li><code>fn withCaptureMode(captureMode)</code></li> <li><code>fn withDefaultEndpoint(defaultEndpoint)</code></li> <li><code>obj spec.ingress.port</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNumber(number)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>fn withTargetPort(targetPort)</code></li> <li><code>obj spec.ingress.tls</code></li> <li><code>fn withCaCertificates(caCertificates)</code></li> <li><code>fn withCipherSuites(cipherSuites)</code></li> <li><code>fn withCipherSuitesMixin(cipherSuites)</code></li> <li><code>fn withCredentialName(credentialName)</code></li> <li><code>fn withHttpsRedirect(httpsRedirect)</code></li> <li><code>fn withMaxProtocolVersion(maxProtocolVersion)</code></li> <li><code>fn withMinProtocolVersion(minProtocolVersion)</code></li> <li><code>fn withMode(mode)</code></li> <li><code>fn withPrivateKey(privateKey)</code></li> <li><code>fn withServerCertificate(serverCertificate)</code></li> <li><code>fn withSubjectAltNames(subjectAltNames)</code></li> <li><code>fn withSubjectAltNamesMixin(subjectAltNames)</code></li> <li><code>fn withVerifyCertificateHash(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateHashMixin(verifyCertificateHash)</code></li> <li><code>fn withVerifyCertificateSpki(verifyCertificateSpki)</code></li> <li><code>fn withVerifyCertificateSpkiMixin(verifyCertificateSpki)</code></li> </ul> </li> <li><code>obj spec.outboundTrafficPolicy</code><ul> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.outboundTrafficPolicy.egressProxy.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.workloadSelector</code><ul> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/sidecar/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/sidecar/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Sidecar</p>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting network reachability of a sidecar. See more details at: https://istio.io/docs/reference/config/networking/sidecar.html\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specegress","title":"obj spec.egress","text":""},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegresswithbind","title":"fn spec.egress.withBind","text":"<pre><code>withBind(bind)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegresswithcapturemode","title":"fn spec.egress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegresswithhosts","title":"fn spec.egress.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegresswithhostsmixin","title":"fn spec.egress.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specegressport","title":"obj spec.egress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegressportwithname","title":"fn spec.egress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegressportwithnumber","title":"fn spec.egress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegressportwithprotocol","title":"fn spec.egress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specegressportwithtargetport","title":"fn spec.egress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specingress","title":"obj spec.ingress","text":""},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresswithbind","title":"fn spec.ingress.withBind","text":"<pre><code>withBind(bind)\n</code></pre> <p>\"The IP(IPv4 or IPv6) to which the listener should be bound.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresswithcapturemode","title":"fn spec.ingress.withCaptureMode","text":"<pre><code>withCaptureMode(captureMode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresswithdefaultendpoint","title":"fn spec.ingress.withDefaultEndpoint","text":"<pre><code>withDefaultEndpoint(defaultEndpoint)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specingressport","title":"obj spec.ingress.port","text":"<p>\"The port associated with the listener.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingressportwithname","title":"fn spec.ingress.port.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Label assigned to the port.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingressportwithnumber","title":"fn spec.ingress.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre> <p>\"A valid non-negative integer port number.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingressportwithprotocol","title":"fn spec.ingress.port.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"The protocol exposed on the port.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingressportwithtargetport","title":"fn spec.ingress.port.withTargetPort","text":"<pre><code>withTargetPort(targetPort)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specingresstls","title":"obj spec.ingress.tls","text":""},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithcacertificates","title":"fn spec.ingress.tls.withCaCertificates","text":"<pre><code>withCaCertificates(caCertificates)\n</code></pre> <p>\"REQUIRED if mode is <code>MUTUAL</code> or <code>OPTIONAL_MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithciphersuites","title":"fn spec.ingress.tls.withCipherSuites","text":"<pre><code>withCipherSuites(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithciphersuitesmixin","title":"fn spec.ingress.tls.withCipherSuitesMixin","text":"<pre><code>withCipherSuitesMixin(cipherSuites)\n</code></pre> <p>\"Optional: If specified, only support the specified cipher list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithcredentialname","title":"fn spec.ingress.tls.withCredentialName","text":"<pre><code>withCredentialName(credentialName)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithhttpsredirect","title":"fn spec.ingress.tls.withHttpsRedirect","text":"<pre><code>withHttpsRedirect(httpsRedirect)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithmaxprotocolversion","title":"fn spec.ingress.tls.withMaxProtocolVersion","text":"<pre><code>withMaxProtocolVersion(maxProtocolVersion)\n</code></pre> <p>\"Optional: Maximum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithminprotocolversion","title":"fn spec.ingress.tls.withMinProtocolVersion","text":"<pre><code>withMinProtocolVersion(minProtocolVersion)\n</code></pre> <p>\"Optional: Minimum TLS protocol version.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithmode","title":"fn spec.ingress.tls.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithprivatekey","title":"fn spec.ingress.tls.withPrivateKey","text":"<pre><code>withPrivateKey(privateKey)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithservercertificate","title":"fn spec.ingress.tls.withServerCertificate","text":"<pre><code>withServerCertificate(serverCertificate)\n</code></pre> <p>\"REQUIRED if mode is <code>SIMPLE</code> or <code>MUTUAL</code>.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithsubjectaltnames","title":"fn spec.ingress.tls.withSubjectAltNames","text":"<pre><code>withSubjectAltNames(subjectAltNames)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithsubjectaltnamesmixin","title":"fn spec.ingress.tls.withSubjectAltNamesMixin","text":"<pre><code>withSubjectAltNamesMixin(subjectAltNames)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatehash","title":"fn spec.ingress.tls.withVerifyCertificateHash","text":"<pre><code>withVerifyCertificateHash(verifyCertificateHash)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatehashmixin","title":"fn spec.ingress.tls.withVerifyCertificateHashMixin","text":"<pre><code>withVerifyCertificateHashMixin(verifyCertificateHash)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatespki","title":"fn spec.ingress.tls.withVerifyCertificateSpki","text":"<pre><code>withVerifyCertificateSpki(verifyCertificateSpki)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specingresstlswithverifycertificatespkimixin","title":"fn spec.ingress.tls.withVerifyCertificateSpkiMixin","text":"<pre><code>withVerifyCertificateSpkiMixin(verifyCertificateSpki)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specoutboundtrafficpolicy","title":"obj spec.outboundTrafficPolicy","text":"<p>\"Configuration for the outbound traffic policy.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicywithmode","title":"fn spec.outboundTrafficPolicy.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specoutboundtrafficpolicyegressproxy","title":"obj spec.outboundTrafficPolicy.egressProxy","text":""},{"location":"1.19/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicyegressproxywithhost","title":"fn spec.outboundTrafficPolicy.egressProxy.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicyegressproxywithsubset","title":"fn spec.outboundTrafficPolicy.egressProxy.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specoutboundtrafficpolicyegressproxyport","title":"obj spec.outboundTrafficPolicy.egressProxy.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specoutboundtrafficpolicyegressproxyportwithnumber","title":"fn spec.outboundTrafficPolicy.egressProxy.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#obj-specworkloadselector","title":"obj spec.workloadSelector","text":""},{"location":"1.19/networking/v1beta1/sidecar/#fn-specworkloadselectorwithlabels","title":"fn spec.workloadSelector.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/sidecar/#fn-specworkloadselectorwithlabelsmixin","title":"fn spec.workloadSelector.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/","title":"networking.v1beta1.virtualService","text":""},{"location":"1.19/networking/v1beta1/virtualService/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withExportTo(exportTo)</code></li> <li><code>fn withExportToMixin(exportTo)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withHttp(http)</code></li> <li><code>fn withHttpMixin(http)</code></li> <li><code>fn withTcp(tcp)</code></li> <li><code>fn withTcpMixin(tcp)</code></li> <li><code>fn withTls(tls)</code></li> <li><code>fn withTlsMixin(tls)</code></li> <li><code>obj spec.http</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withMirrorPercent(mirrorPercent)</code></li> <li><code>fn withMirror_percent(mirror_percent)</code></li> <li><code>fn withMirrors(mirrors)</code></li> <li><code>fn withMirrorsMixin(mirrors)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>fn withTimeout(timeout)</code></li> <li><code>obj spec.http.corsPolicy</code></li> <li><code>fn withAllowCredentials(allowCredentials)</code></li> <li><code>fn withAllowHeaders(allowHeaders)</code></li> <li><code>fn withAllowHeadersMixin(allowHeaders)</code></li> <li><code>fn withAllowMethods(allowMethods)</code></li> <li><code>fn withAllowMethodsMixin(allowMethods)</code></li> <li><code>fn withAllowOrigin(allowOrigin)</code></li> <li><code>fn withAllowOriginMixin(allowOrigin)</code></li> <li><code>fn withAllowOrigins(allowOrigins)</code></li> <li><code>fn withAllowOriginsMixin(allowOrigins)</code></li> <li><code>fn withExposeHeaders(exposeHeaders)</code></li> <li><code>fn withExposeHeadersMixin(exposeHeaders)</code></li> <li><code>fn withMaxAge(maxAge)</code></li> <li><code>obj spec.http.corsPolicy.allowOrigins</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.delegate</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>obj spec.http.directResponse</code></li> <li><code>obj spec.http.directResponse.body</code><ul> <li><code>fn withBytes(bytes)</code></li> <li><code>fn withString(string)</code></li> </ul> </li> <li><code>obj spec.http.fault</code></li> <li><code>obj spec.http.fault.abort</code><ul> <li><code>fn withGrpcStatus(grpcStatus)</code></li> <li><code>fn withHttp2Error(http2Error)</code></li> <li><code>fn withHttpStatus(httpStatus)</code></li> <li><code>obj spec.http.fault.abort.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.fault.delay</code><ul> <li><code>fn withExponentialDelay(exponentialDelay)</code></li> <li><code>fn withFixedDelay(fixedDelay)</code></li> <li><code>fn withPercent(percent)</code></li> <li><code>obj spec.http.fault.delay.percentage</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.headers</code></li> <li><code>obj spec.http.headers.request</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.headers.response</code><ul> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> <li><code>obj spec.http.match</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withHeaders(headers)</code></li> <li><code>fn withHeadersMixin(headers)</code></li> <li><code>fn withIgnoreUriCase(ignoreUriCase)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withQueryParams(queryParams)</code></li> <li><code>fn withQueryParamsMixin(queryParams)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withStatPrefix(statPrefix)</code></li> <li><code>fn withWithoutHeaders(withoutHeaders)</code></li> <li><code>fn withWithoutHeadersMixin(withoutHeaders)</code></li> <li><code>obj spec.http.match.authority</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.headers</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.match.method</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.queryParams</code><ul> <li><code>fn withExact(key, value)</code></li> <li><code>fn withExactMixin(key, value)</code></li> <li><code>fn withRegex(key, value)</code></li> <li><code>fn withRegexMixin(key, value)</code></li> </ul> </li> <li><code>obj spec.http.match.scheme</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.uri</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>fn withRegex(regex)</code></li> </ul> </li> <li><code>obj spec.http.match.withoutHeaders</code><ul> <li><code>fn withExact(header, value)</code></li> <li><code>fn withExactMixin(header, value)</code></li> <li><code>fn withPrefix(header, value)</code></li> <li><code>fn withPrefixMixin(header, value)</code></li> <li><code>fn withRegex(header, value)</code></li> <li><code>fn withRegexMixin(header, value)</code></li> </ul> </li> <li><code>obj spec.http.mirror</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.mirror.port</code><ul> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.mirrorPercentage</code></li> <li><code>fn withValue(value)</code></li> <li><code>obj spec.http.mirrors</code></li> <li><code>obj spec.http.mirrors.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.mirrors.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.mirrors.percentage</code><ul> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.http.redirect</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withDerivePort(derivePort)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withRedirectCode(redirectCode)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.retries</code></li> <li><code>fn withAttempts(attempts)</code></li> <li><code>fn withPerTryTimeout(perTryTimeout)</code></li> <li><code>fn withRetryOn(retryOn)</code></li> <li><code>fn withRetryRemoteLocalities(retryRemoteLocalities)</code></li> <li><code>obj spec.http.rewrite</code></li> <li><code>fn withAuthority(authority)</code></li> <li><code>fn withUri(uri)</code></li> <li><code>obj spec.http.rewrite.uriRegexRewrite</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withRewrite(rewrite)</code></li> </ul> </li> <li><code>obj spec.http.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.http.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.http.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> <li><code>obj spec.http.route.headers</code><ul> <li><code>obj spec.http.route.headers.request</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> <li><code>obj spec.http.route.headers.response</code></li> <li><code>fn withAdd(add)</code></li> <li><code>fn withAddMixin(add)</code></li> <li><code>fn withRemove(remove)</code></li> <li><code>fn withRemoveMixin(remove)</code></li> <li><code>fn withSet(set)</code></li> <li><code>fn withSetMixin(set)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tcp</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tcp.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>fn withSourceSubnet(sourceSubnet)</code></li> <li><code>obj spec.tcp.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tcp.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tcp.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.tls</code><ul> <li><code>fn withMatch(match)</code></li> <li><code>fn withMatchMixin(match)</code></li> <li><code>fn withRoute(route)</code></li> <li><code>fn withRouteMixin(route)</code></li> <li><code>obj spec.tls.match</code></li> <li><code>fn withDestinationSubnets(destinationSubnets)</code></li> <li><code>fn withDestinationSubnetsMixin(destinationSubnets)</code></li> <li><code>fn withGateways(gateways)</code></li> <li><code>fn withGatewaysMixin(gateways)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withSniHosts(sniHosts)</code></li> <li><code>fn withSniHostsMixin(sniHosts)</code></li> <li><code>fn withSourceLabels(sourceLabels)</code></li> <li><code>fn withSourceLabelsMixin(sourceLabels)</code></li> <li><code>fn withSourceNamespace(sourceNamespace)</code></li> <li><code>obj spec.tls.route</code></li> <li><code>fn withWeight(weight)</code></li> <li><code>obj spec.tls.route.destination</code><ul> <li><code>fn withHost(host)</code></li> <li><code>fn withSubset(subset)</code></li> <li><code>obj spec.tls.route.destination.port</code></li> <li><code>fn withNumber(number)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/virtualService/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of VirtualService</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting label/content routing, sni routing, etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithexportto","title":"fn spec.withExportTo","text":"<pre><code>withExportTo(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithexporttomixin","title":"fn spec.withExportToMixin","text":"<pre><code>withExportToMixin(exportTo)\n</code></pre> <p>\"A list of namespaces to which this virtual service is exported.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithgateways","title":"fn spec.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithgatewaysmixin","title":"fn spec.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"The names of gateways and sidecars that should apply these routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithhosts","title":"fn spec.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithhostsmixin","title":"fn spec.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"The destination hosts to which traffic is being sent.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithhttp","title":"fn spec.withHttp","text":"<pre><code>withHttp(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithhttpmixin","title":"fn spec.withHttpMixin","text":"<pre><code>withHttpMixin(http)\n</code></pre> <p>\"An ordered list of route rules for HTTP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithtcp","title":"fn spec.withTcp","text":"<pre><code>withTcp(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithtcpmixin","title":"fn spec.withTcpMixin","text":"<pre><code>withTcpMixin(tcp)\n</code></pre> <p>\"An ordered list of route rules for opaque TCP traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithtls","title":"fn spec.withTls","text":"<pre><code>withTls(tls)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-specwithtlsmixin","title":"fn spec.withTlsMixin","text":"<pre><code>withTlsMixin(tls)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttp","title":"obj spec.http","text":"<p>\"An ordered list of route rules for HTTP traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithmatch","title":"fn spec.http.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithmatchmixin","title":"fn spec.http.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithmirrorpercent","title":"fn spec.http.withMirrorPercent","text":"<pre><code>withMirrorPercent(mirrorPercent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithmirror_percent","title":"fn spec.http.withMirror_percent","text":"<pre><code>withMirror_percent(mirror_percent)\n</code></pre> <p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithmirrors","title":"fn spec.http.withMirrors","text":"<pre><code>withMirrors(mirrors)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithmirrorsmixin","title":"fn spec.http.withMirrorsMixin","text":"<pre><code>withMirrorsMixin(mirrors)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithname","title":"fn spec.http.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to the route for debugging purposes.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithroute","title":"fn spec.http.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithroutemixin","title":"fn spec.http.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpwithtimeout","title":"fn spec.http.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre> <p>\"Timeout for HTTP requests, default is disabled.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpcorspolicy","title":"obj spec.http.corsPolicy","text":"<p>\"Cross-Origin Resource Sharing policy (CORS).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowcredentials","title":"fn spec.http.corsPolicy.withAllowCredentials","text":"<pre><code>withAllowCredentials(allowCredentials)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowheaders","title":"fn spec.http.corsPolicy.withAllowHeaders","text":"<pre><code>withAllowHeaders(allowHeaders)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowheadersmixin","title":"fn spec.http.corsPolicy.withAllowHeadersMixin","text":"<pre><code>withAllowHeadersMixin(allowHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowmethods","title":"fn spec.http.corsPolicy.withAllowMethods","text":"<pre><code>withAllowMethods(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithallowmethodsmixin","title":"fn spec.http.corsPolicy.withAllowMethodsMixin","text":"<pre><code>withAllowMethodsMixin(allowMethods)\n</code></pre> <p>\"List of HTTP methods allowed to access the resource.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworigin","title":"fn spec.http.corsPolicy.withAllowOrigin","text":"<pre><code>withAllowOrigin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworiginmixin","title":"fn spec.http.corsPolicy.withAllowOriginMixin","text":"<pre><code>withAllowOriginMixin(allowOrigin)\n</code></pre> <p>\"The list of origins that are allowed to perform CORS requests.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworigins","title":"fn spec.http.corsPolicy.withAllowOrigins","text":"<pre><code>withAllowOrigins(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithalloworiginsmixin","title":"fn spec.http.corsPolicy.withAllowOriginsMixin","text":"<pre><code>withAllowOriginsMixin(allowOrigins)\n</code></pre> <p>\"String patterns that match allowed origins.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithexposeheaders","title":"fn spec.http.corsPolicy.withExposeHeaders","text":"<pre><code>withExposeHeaders(exposeHeaders)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithexposeheadersmixin","title":"fn spec.http.corsPolicy.withExposeHeadersMixin","text":"<pre><code>withExposeHeadersMixin(exposeHeaders)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicywithmaxage","title":"fn spec.http.corsPolicy.withMaxAge","text":"<pre><code>withMaxAge(maxAge)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpcorspolicyalloworigins","title":"obj spec.http.corsPolicy.allowOrigins","text":"<p>\"String patterns that match allowed origins.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicyalloworiginswithexact","title":"fn spec.http.corsPolicy.allowOrigins.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicyalloworiginswithprefix","title":"fn spec.http.corsPolicy.allowOrigins.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpcorspolicyalloworiginswithregex","title":"fn spec.http.corsPolicy.allowOrigins.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpdelegate","title":"obj spec.http.delegate","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpdelegatewithname","title":"fn spec.http.delegate.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of the delegate VirtualService.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpdelegatewithnamespace","title":"fn spec.http.delegate.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace where the delegate VirtualService resides.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpdirectresponse","title":"obj spec.http.directResponse","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpdirectresponsebody","title":"obj spec.http.directResponse.body","text":"<p>\"Specifies the content of the response body.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpdirectresponsebodywithbytes","title":"fn spec.http.directResponse.body.withBytes","text":"<pre><code>withBytes(bytes)\n</code></pre> <p>\"response body as base64 encoded bytes.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpdirectresponsebodywithstring","title":"fn spec.http.directResponse.body.withString","text":"<pre><code>withString(string)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpfault","title":"obj spec.http.fault","text":"<p>\"Fault injection policy to apply on HTTP traffic at the client side.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpfaultabort","title":"obj spec.http.fault.abort","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultabortwithgrpcstatus","title":"fn spec.http.fault.abort.withGrpcStatus","text":"<pre><code>withGrpcStatus(grpcStatus)\n</code></pre> <p>\"GRPC status code to use to abort the request.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultabortwithhttp2error","title":"fn spec.http.fault.abort.withHttp2Error","text":"<pre><code>withHttp2Error(http2Error)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultabortwithhttpstatus","title":"fn spec.http.fault.abort.withHttpStatus","text":"<pre><code>withHttpStatus(httpStatus)\n</code></pre> <p>\"HTTP status code to use to abort the Http request.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpfaultabortpercentage","title":"obj spec.http.fault.abort.percentage","text":"<p>\"Percentage of requests to be aborted with the error code provided.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultabortpercentagewithvalue","title":"fn spec.http.fault.abort.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpfaultdelay","title":"obj spec.http.fault.delay","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultdelaywithexponentialdelay","title":"fn spec.http.fault.delay.withExponentialDelay","text":"<pre><code>withExponentialDelay(exponentialDelay)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultdelaywithfixeddelay","title":"fn spec.http.fault.delay.withFixedDelay","text":"<pre><code>withFixedDelay(fixedDelay)\n</code></pre> <p>\"Add a fixed delay before forwarding the request.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultdelaywithpercent","title":"fn spec.http.fault.delay.withPercent","text":"<pre><code>withPercent(percent)\n</code></pre> <p>\"Percentage of requests on which the delay will be injected (0-100).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpfaultdelaypercentage","title":"obj spec.http.fault.delay.percentage","text":"<p>\"Percentage of requests on which the delay will be injected.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpfaultdelaypercentagewithvalue","title":"fn spec.http.fault.delay.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpheaders","title":"obj spec.http.headers","text":""},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpheadersrequest","title":"obj spec.http.headers.request","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithadd","title":"fn spec.http.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithaddmixin","title":"fn spec.http.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithremove","title":"fn spec.http.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithremovemixin","title":"fn spec.http.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithset","title":"fn spec.http.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersrequestwithsetmixin","title":"fn spec.http.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpheadersresponse","title":"obj spec.http.headers.response","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithadd","title":"fn spec.http.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithaddmixin","title":"fn spec.http.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithremove","title":"fn spec.http.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithremovemixin","title":"fn spec.http.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithset","title":"fn spec.http.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpheadersresponsewithsetmixin","title":"fn spec.http.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatch","title":"obj spec.http.match","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithgateways","title":"fn spec.http.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithgatewaysmixin","title":"fn spec.http.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithheaders","title":"fn spec.http.match.withHeaders","text":"<pre><code>withHeaders(headers)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithheadersmixin","title":"fn spec.http.match.withHeadersMixin","text":"<pre><code>withHeadersMixin(headers)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithignoreuricase","title":"fn spec.http.match.withIgnoreUriCase","text":"<pre><code>withIgnoreUriCase(ignoreUriCase)\n</code></pre> <p>\"Flag to specify whether the URI matching should be case-insensitive.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithname","title":"fn spec.http.match.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The name assigned to a match.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithport","title":"fn spec.http.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the ports on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithqueryparams","title":"fn spec.http.match.withQueryParams","text":"<pre><code>withQueryParams(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithqueryparamsmixin","title":"fn spec.http.match.withQueryParamsMixin","text":"<pre><code>withQueryParamsMixin(queryParams)\n</code></pre> <p>\"Query parameters for matching.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithsourcelabels","title":"fn spec.http.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithsourcelabelsmixin","title":"fn spec.http.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithsourcenamespace","title":"fn spec.http.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithstatprefix","title":"fn spec.http.match.withStatPrefix","text":"<pre><code>withStatPrefix(statPrefix)\n</code></pre> <p>\"The human readable prefix to use when emitting statistics for this route.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithwithoutheaders","title":"fn spec.http.match.withWithoutHeaders","text":"<pre><code>withWithoutHeaders(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithwithoutheadersmixin","title":"fn spec.http.match.withWithoutHeadersMixin","text":"<pre><code>withWithoutHeadersMixin(withoutHeaders)\n</code></pre> <p>\"withoutHeader has the same syntax with the header, but has opposite meaning.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchauthority","title":"obj spec.http.match.authority","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchauthoritywithexact","title":"fn spec.http.match.authority.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchauthoritywithprefix","title":"fn spec.http.match.authority.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchauthoritywithregex","title":"fn spec.http.match.authority.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchheaders","title":"obj spec.http.match.headers","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithexact","title":"fn spec.http.match.headers.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithexactmixin","title":"fn spec.http.match.headers.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithprefix","title":"fn spec.http.match.headers.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithprefixmixin","title":"fn spec.http.match.headers.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithregex","title":"fn spec.http.match.headers.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchheaderswithregexmixin","title":"fn spec.http.match.headers.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchmethod","title":"obj spec.http.match.method","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchmethodwithexact","title":"fn spec.http.match.method.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchmethodwithprefix","title":"fn spec.http.match.method.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchmethodwithregex","title":"fn spec.http.match.method.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchqueryparams","title":"obj spec.http.match.queryParams","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithexact","title":"fn spec.http.match.queryParams.withExact","text":"<pre><code>withExact(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithexactmixin","title":"fn spec.http.match.queryParams.withExactMixin","text":"<pre><code>withExactMixin(key, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithregex","title":"fn spec.http.match.queryParams.withRegex","text":"<pre><code>withRegex(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchqueryparamswithregexmixin","title":"fn spec.http.match.queryParams.withRegexMixin","text":"<pre><code>withRegexMixin(key, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchscheme","title":"obj spec.http.match.scheme","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchschemewithexact","title":"fn spec.http.match.scheme.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchschemewithprefix","title":"fn spec.http.match.scheme.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchschemewithregex","title":"fn spec.http.match.scheme.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchuri","title":"obj spec.http.match.uri","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchuriwithexact","title":"fn spec.http.match.uri.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchuriwithprefix","title":"fn spec.http.match.uri.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchuriwithregex","title":"fn spec.http.match.uri.withRegex","text":"<pre><code>withRegex(regex)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmatchwithoutheaders","title":"obj spec.http.match.withoutHeaders","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithexact","title":"fn spec.http.match.withoutHeaders.withExact","text":"<pre><code>withExact(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithexactmixin","title":"fn spec.http.match.withoutHeaders.withExactMixin","text":"<pre><code>withExactMixin(header, value)\n</code></pre> <p><code>withExact</code> matches the header in an exact string</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithprefix","title":"fn spec.http.match.withoutHeaders.withPrefix","text":"<pre><code>withPrefix(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithprefixmixin","title":"fn spec.http.match.withoutHeaders.withPrefixMixin","text":"<pre><code>withPrefixMixin(header, value)\n</code></pre> <p><code>withPrefix</code> matches the header in an prefix-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithregex","title":"fn spec.http.match.withoutHeaders.withRegex","text":"<pre><code>withRegex(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmatchwithoutheaderswithregexmixin","title":"fn spec.http.match.withoutHeaders.withRegexMixin","text":"<pre><code>withRegexMixin(header, value)\n</code></pre> <p><code>withRegex</code> matches the header in an RE2 style regex-based</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirror","title":"obj spec.http.mirror","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorwithhost","title":"fn spec.http.mirror.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorwithsubset","title":"fn spec.http.mirror.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirrorport","title":"obj spec.http.mirror.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorportwithnumber","title":"fn spec.http.mirror.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirrorpercentage","title":"obj spec.http.mirrorPercentage","text":"<p>\"Percentage of the traffic to be mirrored by the <code>mirror</code> field.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorpercentagewithvalue","title":"fn spec.http.mirrorPercentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirrors","title":"obj spec.http.mirrors","text":""},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirrorsdestination","title":"obj spec.http.mirrors.destination","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorsdestinationwithhost","title":"fn spec.http.mirrors.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorsdestinationwithsubset","title":"fn spec.http.mirrors.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirrorsdestinationport","title":"obj spec.http.mirrors.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorsdestinationportwithnumber","title":"fn spec.http.mirrors.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpmirrorspercentage","title":"obj spec.http.mirrors.percentage","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpmirrorspercentagewithvalue","title":"fn spec.http.mirrors.percentage.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpredirect","title":"obj spec.http.redirect","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpredirectwithauthority","title":"fn spec.http.redirect.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpredirectwithderiveport","title":"fn spec.http.redirect.withDerivePort","text":"<pre><code>withDerivePort(derivePort)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpredirectwithport","title":"fn spec.http.redirect.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"On a redirect, overwrite the port portion of the URL with this value.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpredirectwithredirectcode","title":"fn spec.http.redirect.withRedirectCode","text":"<pre><code>withRedirectCode(redirectCode)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpredirectwithscheme","title":"fn spec.http.redirect.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre> <p>\"On a redirect, overwrite the scheme portion of the URL with this value.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpredirectwithuri","title":"fn spec.http.redirect.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttpretries","title":"obj spec.http.retries","text":"<p>\"Retry policy for HTTP requests.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpretrieswithattempts","title":"fn spec.http.retries.withAttempts","text":"<pre><code>withAttempts(attempts)\n</code></pre> <p>\"Number of retries to be allowed for a given request.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpretrieswithpertrytimeout","title":"fn spec.http.retries.withPerTryTimeout","text":"<pre><code>withPerTryTimeout(perTryTimeout)\n</code></pre> <p>\"Timeout per attempt for a given request, including the initial call and any retries.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpretrieswithretryon","title":"fn spec.http.retries.withRetryOn","text":"<pre><code>withRetryOn(retryOn)\n</code></pre> <p>\"Specifies the conditions under which retry takes place.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttpretrieswithretryremotelocalities","title":"fn spec.http.retries.withRetryRemoteLocalities","text":"<pre><code>withRetryRemoteLocalities(retryRemoteLocalities)\n</code></pre> <p>\"Flag to specify whether the retries should retry to other localities.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttprewrite","title":"obj spec.http.rewrite","text":"<p>\"Rewrite HTTP URIs and Authority headers.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprewritewithauthority","title":"fn spec.http.rewrite.withAuthority","text":"<pre><code>withAuthority(authority)\n</code></pre> <p>\"rewrite the Authority/Host header with this value.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprewritewithuri","title":"fn spec.http.rewrite.withUri","text":"<pre><code>withUri(uri)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttprewriteuriregexrewrite","title":"obj spec.http.rewrite.uriRegexRewrite","text":"<p>\"rewrite the path portion of the URI with the specified regex.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprewriteuriregexrewritewithmatch","title":"fn spec.http.rewrite.uriRegexRewrite.withMatch","text":"<pre><code>withMatch(match)\n</code></pre> <p>\"RE2 style regex-based match (https://github.com/google/re2/wiki/Syntax).\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprewriteuriregexrewritewithrewrite","title":"fn spec.http.rewrite.uriRegexRewrite.withRewrite","text":"<pre><code>withRewrite(rewrite)\n</code></pre> <p>\"The string that should replace into matching portions of original URI.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttproute","title":"obj spec.http.route","text":"<p>\"A HTTP rule can either return a direct_response, redirect or forward (default) traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttproutewithweight","title":"fn spec.http.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttproutedestination","title":"obj spec.http.route.destination","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttproutedestinationwithhost","title":"fn spec.http.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttproutedestinationwithsubset","title":"fn spec.http.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttproutedestinationport","title":"obj spec.http.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttproutedestinationportwithnumber","title":"fn spec.http.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttprouteheaders","title":"obj spec.http.route.headers","text":""},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttprouteheadersrequest","title":"obj spec.http.route.headers.request","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithadd","title":"fn spec.http.route.headers.request.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithaddmixin","title":"fn spec.http.route.headers.request.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithremove","title":"fn spec.http.route.headers.request.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithremovemixin","title":"fn spec.http.route.headers.request.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithset","title":"fn spec.http.route.headers.request.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersrequestwithsetmixin","title":"fn spec.http.route.headers.request.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spechttprouteheadersresponse","title":"obj spec.http.route.headers.response","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithadd","title":"fn spec.http.route.headers.response.withAdd","text":"<pre><code>withAdd(add)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithaddmixin","title":"fn spec.http.route.headers.response.withAddMixin","text":"<pre><code>withAddMixin(add)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithremove","title":"fn spec.http.route.headers.response.withRemove","text":"<pre><code>withRemove(remove)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithremovemixin","title":"fn spec.http.route.headers.response.withRemoveMixin","text":"<pre><code>withRemoveMixin(remove)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithset","title":"fn spec.http.route.headers.response.withSet","text":"<pre><code>withSet(set)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spechttprouteheadersresponsewithsetmixin","title":"fn spec.http.route.headers.response.withSetMixin","text":"<pre><code>withSetMixin(set)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectcp","title":"obj spec.tcp","text":"<p>\"An ordered list of route rules for opaque TCP traffic.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpwithmatch","title":"fn spec.tcp.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpwithmatchmixin","title":"fn spec.tcp.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpwithroute","title":"fn spec.tcp.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpwithroutemixin","title":"fn spec.tcp.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectcpmatch","title":"obj spec.tcp.match","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithdestinationsubnets","title":"fn spec.tcp.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithdestinationsubnetsmixin","title":"fn spec.tcp.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithgateways","title":"fn spec.tcp.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithgatewaysmixin","title":"fn spec.tcp.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithport","title":"fn spec.tcp.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcelabels","title":"fn spec.tcp.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcelabelsmixin","title":"fn spec.tcp.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcenamespace","title":"fn spec.tcp.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcpmatchwithsourcesubnet","title":"fn spec.tcp.match.withSourceSubnet","text":"<pre><code>withSourceSubnet(sourceSubnet)\n</code></pre> <p>\"IPv4 or IPv6 ip address of source with optional subnet.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectcproute","title":"obj spec.tcp.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcproutewithweight","title":"fn spec.tcp.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectcproutedestination","title":"obj spec.tcp.route.destination","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcproutedestinationwithhost","title":"fn spec.tcp.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcproutedestinationwithsubset","title":"fn spec.tcp.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectcproutedestinationport","title":"obj spec.tcp.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectcproutedestinationportwithnumber","title":"fn spec.tcp.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectls","title":"obj spec.tls","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlswithmatch","title":"fn spec.tls.withMatch","text":"<pre><code>withMatch(match)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlswithmatchmixin","title":"fn spec.tls.withMatchMixin","text":"<pre><code>withMatchMixin(match)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlswithroute","title":"fn spec.tls.withRoute","text":"<pre><code>withRoute(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlswithroutemixin","title":"fn spec.tls.withRouteMixin","text":"<pre><code>withRouteMixin(route)\n</code></pre> <p>\"The destination to which the connection should be forwarded to.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectlsmatch","title":"obj spec.tls.match","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithdestinationsubnets","title":"fn spec.tls.match.withDestinationSubnets","text":"<pre><code>withDestinationSubnets(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithdestinationsubnetsmixin","title":"fn spec.tls.match.withDestinationSubnetsMixin","text":"<pre><code>withDestinationSubnetsMixin(destinationSubnets)\n</code></pre> <p>\"IPv4 or IPv6 ip addresses of destination with optional subnet.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithgateways","title":"fn spec.tls.match.withGateways","text":"<pre><code>withGateways(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithgatewaysmixin","title":"fn spec.tls.match.withGatewaysMixin","text":"<pre><code>withGatewaysMixin(gateways)\n</code></pre> <p>\"Names of gateways where the rule should be applied.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithport","title":"fn spec.tls.match.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithsnihosts","title":"fn spec.tls.match.withSniHosts","text":"<pre><code>withSniHosts(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithsnihostsmixin","title":"fn spec.tls.match.withSniHostsMixin","text":"<pre><code>withSniHostsMixin(sniHosts)\n</code></pre> <p>\"SNI (server name indicator) to match on.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithsourcelabels","title":"fn spec.tls.match.withSourceLabels","text":"<pre><code>withSourceLabels(sourceLabels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithsourcelabelsmixin","title":"fn spec.tls.match.withSourceLabelsMixin","text":"<pre><code>withSourceLabelsMixin(sourceLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsmatchwithsourcenamespace","title":"fn spec.tls.match.withSourceNamespace","text":"<pre><code>withSourceNamespace(sourceNamespace)\n</code></pre> <p>\"Source namespace constraining the applicability of a rule to workloads in that namespace.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectlsroute","title":"obj spec.tls.route","text":"<p>\"The destination to which the connection should be forwarded to.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsroutewithweight","title":"fn spec.tls.route.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"Weight specifies the relative proportion of traffic to be forwarded to the destination.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectlsroutedestination","title":"obj spec.tls.route.destination","text":""},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsroutedestinationwithhost","title":"fn spec.tls.route.destination.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"The name of a service from the service registry.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsroutedestinationwithsubset","title":"fn spec.tls.route.destination.withSubset","text":"<pre><code>withSubset(subset)\n</code></pre> <p>\"The name of a subset within the service.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#obj-spectlsroutedestinationport","title":"obj spec.tls.route.destination.port","text":"<p>\"Specifies the port on the host that is being addressed.\"</p>"},{"location":"1.19/networking/v1beta1/virtualService/#fn-spectlsroutedestinationportwithnumber","title":"fn spec.tls.route.destination.port.withNumber","text":"<pre><code>withNumber(number)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadEntry/","title":"networking.v1beta1.workloadEntry","text":""},{"location":"1.19/networking/v1beta1/workloadEntry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadEntry</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#obj-spec","title":"obj spec","text":"<p>\"Configuration affecting VMs onboarded into the mesh. See more details at: https://istio.io/docs/reference/config/networking/workload-entry.html\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithaddress","title":"fn spec.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithlabels","title":"fn spec.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithlabelsmixin","title":"fn spec.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithlocality","title":"fn spec.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithnetwork","title":"fn spec.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithserviceaccount","title":"fn spec.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadEntry/#fn-specwithweight","title":"fn spec.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/","title":"networking.v1beta1.workloadGroup","text":""},{"location":"1.19/networking/v1beta1/workloadGroup/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>obj spec.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> </ul> </li> <li><code>obj spec.probe</code><ul> <li><code>fn withFailureThreshold(failureThreshold)</code></li> <li><code>fn withInitialDelaySeconds(initialDelaySeconds)</code></li> <li><code>fn withPeriodSeconds(periodSeconds)</code></li> <li><code>fn withSuccessThreshold(successThreshold)</code></li> <li><code>fn withTimeoutSeconds(timeoutSeconds)</code></li> <li><code>obj spec.probe.exec</code></li> <li><code>fn withCommand(command)</code></li> <li><code>fn withCommandMixin(command)</code></li> <li><code>obj spec.probe.httpGet</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withHttpHeaders(httpHeaders)</code></li> <li><code>fn withHttpHeadersMixin(httpHeaders)</code></li> <li><code>fn withPath(path)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withScheme(scheme)</code></li> <li><code>obj spec.probe.httpGet.httpHeaders</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.probe.tcpSocket</code></li> <li><code>fn withHost(host)</code></li> <li><code>fn withPort(port)</code></li> </ul> </li> <li><code>obj spec.template</code><ul> <li><code>fn withAddress(address)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withLocality(locality)</code></li> <li><code>fn withNetwork(network)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withServiceAccount(serviceAccount)</code></li> <li><code>fn withWeight(weight)</code></li> </ul> </li> </ul>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fields","title":"Fields","text":""},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of WorkloadGroup</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-spec","title":"obj spec","text":""},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-specmetadata","title":"obj spec.metadata","text":"<p>\"Metadata that will be used for all corresponding <code>WorkloadEntries</code>.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specmetadatawithannotations","title":"fn spec.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specmetadatawithannotationsmixin","title":"fn spec.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specmetadatawithlabels","title":"fn spec.metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specmetadatawithlabelsmixin","title":"fn spec.metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-specprobe","title":"obj spec.probe","text":"<p>\"<code>ReadinessProbe</code> describes the configuration the user must provide for healthchecking on their workload.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobewithfailurethreshold","title":"fn spec.probe.withFailureThreshold","text":"<pre><code>withFailureThreshold(failureThreshold)\n</code></pre> <p>\"Minimum consecutive failures for the probe to be considered failed after having succeeded.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobewithinitialdelayseconds","title":"fn spec.probe.withInitialDelaySeconds","text":"<pre><code>withInitialDelaySeconds(initialDelaySeconds)\n</code></pre> <p>\"Number of seconds after the container has started before readiness probes are initiated.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobewithperiodseconds","title":"fn spec.probe.withPeriodSeconds","text":"<pre><code>withPeriodSeconds(periodSeconds)\n</code></pre> <p>\"How often (in seconds) to perform the probe.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobewithsuccessthreshold","title":"fn spec.probe.withSuccessThreshold","text":"<pre><code>withSuccessThreshold(successThreshold)\n</code></pre> <p>\"Minimum consecutive successes for the probe to be considered successful after having failed.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobewithtimeoutseconds","title":"fn spec.probe.withTimeoutSeconds","text":"<pre><code>withTimeoutSeconds(timeoutSeconds)\n</code></pre> <p>\"Number of seconds after which the probe times out.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-specprobeexec","title":"obj spec.probe.exec","text":"<p>\"Health is determined by how the command that is executed exited.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobeexecwithcommand","title":"fn spec.probe.exec.withCommand","text":"<pre><code>withCommand(command)\n</code></pre> <p>\"Command to run.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobeexecwithcommandmixin","title":"fn spec.probe.exec.withCommandMixin","text":"<pre><code>withCommandMixin(command)\n</code></pre> <p>\"Command to run.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-specprobehttpget","title":"obj spec.probe.httpGet","text":""},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithhost","title":"fn spec.probe.httpGet.withHost","text":"<pre><code>withHost(host)\n</code></pre> <p>\"Host name to connect to, defaults to the pod IP.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithhttpheaders","title":"fn spec.probe.httpGet.withHttpHeaders","text":"<pre><code>withHttpHeaders(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithhttpheadersmixin","title":"fn spec.probe.httpGet.withHttpHeadersMixin","text":"<pre><code>withHttpHeadersMixin(httpHeaders)\n</code></pre> <p>\"Headers the proxy will pass on to make the request.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithpath","title":"fn spec.probe.httpGet.withPath","text":"<pre><code>withPath(path)\n</code></pre> <p>\"Path to access on the HTTP server.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithport","title":"fn spec.probe.httpGet.withPort","text":"<pre><code>withPort(port)\n</code></pre> <p>\"Port on which the endpoint lives.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgetwithscheme","title":"fn spec.probe.httpGet.withScheme","text":"<pre><code>withScheme(scheme)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-specprobehttpgethttpheaders","title":"obj spec.probe.httpGet.httpHeaders","text":"<p>\"Headers the proxy will pass on to make the request.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgethttpheaderswithname","title":"fn spec.probe.httpGet.httpHeaders.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobehttpgethttpheaderswithvalue","title":"fn spec.probe.httpGet.httpHeaders.withValue","text":"<pre><code>withValue(value)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-specprobetcpsocket","title":"obj spec.probe.tcpSocket","text":"<p>\"Health is determined by if the proxy is able to connect.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobetcpsocketwithhost","title":"fn spec.probe.tcpSocket.withHost","text":"<pre><code>withHost(host)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-specprobetcpsocketwithport","title":"fn spec.probe.tcpSocket.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#obj-spectemplate","title":"obj spec.template","text":"<p>\"Template to be used for the generation of <code>WorkloadEntry</code> resources that belong to this <code>WorkloadGroup</code>.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithaddress","title":"fn spec.template.withAddress","text":"<pre><code>withAddress(address)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithlabels","title":"fn spec.template.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithlabelsmixin","title":"fn spec.template.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"One or more labels associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithlocality","title":"fn spec.template.withLocality","text":"<pre><code>withLocality(locality)\n</code></pre> <p>\"The locality associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithnetwork","title":"fn spec.template.withNetwork","text":"<pre><code>withNetwork(network)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithports","title":"fn spec.template.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithportsmixin","title":"fn spec.template.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Set of ports associated with the endpoint.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithserviceaccount","title":"fn spec.template.withServiceAccount","text":"<pre><code>withServiceAccount(serviceAccount)\n</code></pre>"},{"location":"1.19/networking/v1beta1/workloadGroup/#fn-spectemplatewithweight","title":"fn spec.template.withWeight","text":"<pre><code>withWeight(weight)\n</code></pre> <p>\"The load balancing weight associated with the endpoint.\"</p>"},{"location":"1.19/security/","title":"security","text":"<ul> <li>v1</li> <li>v1beta1</li> </ul>"},{"location":"1.19/security/v1/","title":"security.v1","text":"<ul> <li>authorizationPolicy</li> <li>requestAuthentication</li> </ul>"},{"location":"1.19/security/v1/authorizationPolicy/","title":"security.v1.authorizationPolicy","text":""},{"location":"1.19/security/v1/authorizationPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAction(action)</code></li> <li><code>fn withRules(rules)</code></li> <li><code>fn withRulesMixin(rules)</code></li> <li><code>obj spec.provider</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.rules</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withFromMixin(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>fn withWhen(when)</code></li> <li><code>fn withWhenMixin(when)</code></li> <li><code>obj spec.rules.from</code></li> <li><code>obj spec.rules.from.source</code><ul> <li><code>fn withIpBlocks(ipBlocks)</code></li> <li><code>fn withIpBlocksMixin(ipBlocks)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withNotIpBlocks(notIpBlocks)</code></li> <li><code>fn withNotIpBlocksMixin(notIpBlocks)</code></li> <li><code>fn withNotNamespaces(notNamespaces)</code></li> <li><code>fn withNotNamespacesMixin(notNamespaces)</code></li> <li><code>fn withNotPrincipals(notPrincipals)</code></li> <li><code>fn withNotPrincipalsMixin(notPrincipals)</code></li> <li><code>fn withNotRemoteIpBlocks(notRemoteIpBlocks)</code></li> <li><code>fn withNotRemoteIpBlocksMixin(notRemoteIpBlocks)</code></li> <li><code>fn withNotRequestPrincipals(notRequestPrincipals)</code></li> <li><code>fn withNotRequestPrincipalsMixin(notRequestPrincipals)</code></li> <li><code>fn withPrincipals(principals)</code></li> <li><code>fn withPrincipalsMixin(principals)</code></li> <li><code>fn withRemoteIpBlocks(remoteIpBlocks)</code></li> <li><code>fn withRemoteIpBlocksMixin(remoteIpBlocks)</code></li> <li><code>fn withRequestPrincipals(requestPrincipals)</code></li> <li><code>fn withRequestPrincipalsMixin(requestPrincipals)</code></li> </ul> </li> <li><code>obj spec.rules.to</code></li> <li><code>obj spec.rules.to.operation</code><ul> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withNotHosts(notHosts)</code></li> <li><code>fn withNotHostsMixin(notHosts)</code></li> <li><code>fn withNotMethods(notMethods)</code></li> <li><code>fn withNotMethodsMixin(notMethods)</code></li> <li><code>fn withNotPaths(notPaths)</code></li> <li><code>fn withNotPathsMixin(notPaths)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> </ul> </li> <li><code>obj spec.rules.when</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withNotValues(notValues)</code></li> <li><code>fn withNotValuesMixin(notValues)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/security/v1/authorizationPolicy/#fields","title":"Fields","text":""},{"location":"1.19/security/v1/authorizationPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of AuthorizationPolicy</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-spec","title":"obj spec","text":"<p>\"Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specwithaction","title":"fn spec.withAction","text":"<pre><code>withAction(action)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specwithrules","title":"fn spec.withRules","text":"<pre><code>withRules(rules)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specwithrulesmixin","title":"fn spec.withRulesMixin","text":"<pre><code>withRulesMixin(rules)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specprovider","title":"obj spec.provider","text":"<p>\"Specifies detailed configuration of the CUSTOM action.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specproviderwithname","title":"fn spec.provider.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Specifies the name of the extension provider.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specrules","title":"obj spec.rules","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswithfrom","title":"fn spec.rules.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswithfrommixin","title":"fn spec.rules.withFromMixin","text":"<pre><code>withFromMixin(from)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswithto","title":"fn spec.rules.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswithtomixin","title":"fn spec.rules.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswithwhen","title":"fn spec.rules.withWhen","text":"<pre><code>withWhen(when)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswithwhenmixin","title":"fn spec.rules.withWhenMixin","text":"<pre><code>withWhenMixin(when)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specrulesfrom","title":"obj spec.rules.from","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specrulesfromsource","title":"obj spec.rules.from.source","text":"<p>\"Source specifies the source of a request.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithipblocks","title":"fn spec.rules.from.source.withIpBlocks","text":"<pre><code>withIpBlocks(ipBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithipblocksmixin","title":"fn spec.rules.from.source.withIpBlocksMixin","text":"<pre><code>withIpBlocksMixin(ipBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnamespaces","title":"fn spec.rules.from.source.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnamespacesmixin","title":"fn spec.rules.from.source.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocks","title":"fn spec.rules.from.source.withNotIpBlocks","text":"<pre><code>withNotIpBlocks(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocksmixin","title":"fn spec.rules.from.source.withNotIpBlocksMixin","text":"<pre><code>withNotIpBlocksMixin(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespaces","title":"fn spec.rules.from.source.withNotNamespaces","text":"<pre><code>withNotNamespaces(notNamespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespacesmixin","title":"fn spec.rules.from.source.withNotNamespacesMixin","text":"<pre><code>withNotNamespacesMixin(notNamespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipals","title":"fn spec.rules.from.source.withNotPrincipals","text":"<pre><code>withNotPrincipals(notPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipalsmixin","title":"fn spec.rules.from.source.withNotPrincipalsMixin","text":"<pre><code>withNotPrincipalsMixin(notPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocks","title":"fn spec.rules.from.source.withNotRemoteIpBlocks","text":"<pre><code>withNotRemoteIpBlocks(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocksmixin","title":"fn spec.rules.from.source.withNotRemoteIpBlocksMixin","text":"<pre><code>withNotRemoteIpBlocksMixin(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipals","title":"fn spec.rules.from.source.withNotRequestPrincipals","text":"<pre><code>withNotRequestPrincipals(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipalsmixin","title":"fn spec.rules.from.source.withNotRequestPrincipalsMixin","text":"<pre><code>withNotRequestPrincipalsMixin(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithprincipals","title":"fn spec.rules.from.source.withPrincipals","text":"<pre><code>withPrincipals(principals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithprincipalsmixin","title":"fn spec.rules.from.source.withPrincipalsMixin","text":"<pre><code>withPrincipalsMixin(principals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocks","title":"fn spec.rules.from.source.withRemoteIpBlocks","text":"<pre><code>withRemoteIpBlocks(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocksmixin","title":"fn spec.rules.from.source.withRemoteIpBlocksMixin","text":"<pre><code>withRemoteIpBlocksMixin(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipals","title":"fn spec.rules.from.source.withRequestPrincipals","text":"<pre><code>withRequestPrincipals(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipalsmixin","title":"fn spec.rules.from.source.withRequestPrincipalsMixin","text":"<pre><code>withRequestPrincipalsMixin(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specrulesto","title":"obj spec.rules.to","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specrulestooperation","title":"obj spec.rules.to.operation","text":"<p>\"Operation specifies the operation of a request.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithhosts","title":"fn spec.rules.to.operation.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithhostsmixin","title":"fn spec.rules.to.operation.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithmethods","title":"fn spec.rules.to.operation.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithmethodsmixin","title":"fn spec.rules.to.operation.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnothosts","title":"fn spec.rules.to.operation.withNotHosts","text":"<pre><code>withNotHosts(notHosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnothostsmixin","title":"fn spec.rules.to.operation.withNotHostsMixin","text":"<pre><code>withNotHostsMixin(notHosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotmethods","title":"fn spec.rules.to.operation.withNotMethods","text":"<pre><code>withNotMethods(notMethods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotmethodsmixin","title":"fn spec.rules.to.operation.withNotMethodsMixin","text":"<pre><code>withNotMethodsMixin(notMethods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotpaths","title":"fn spec.rules.to.operation.withNotPaths","text":"<pre><code>withNotPaths(notPaths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotpathsmixin","title":"fn spec.rules.to.operation.withNotPathsMixin","text":"<pre><code>withNotPathsMixin(notPaths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotports","title":"fn spec.rules.to.operation.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithnotportsmixin","title":"fn spec.rules.to.operation.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithpaths","title":"fn spec.rules.to.operation.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithpathsmixin","title":"fn spec.rules.to.operation.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithports","title":"fn spec.rules.to.operation.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specrulestooperationwithportsmixin","title":"fn spec.rules.to.operation.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specruleswhen","title":"obj spec.rules.when","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswhenwithkey","title":"fn spec.rules.when.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The name of an Istio attribute.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswhenwithnotvalues","title":"fn spec.rules.when.withNotValues","text":"<pre><code>withNotValues(notValues)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswhenwithnotvaluesmixin","title":"fn spec.rules.when.withNotValuesMixin","text":"<pre><code>withNotValuesMixin(notValues)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswhenwithvalues","title":"fn spec.rules.when.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specruleswhenwithvaluesmixin","title":"fn spec.rules.when.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/authorizationPolicy/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/security/v1/authorizationPolicy/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/","title":"security.v1.requestAuthentication","text":""},{"location":"1.19/security/v1/requestAuthentication/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withJwtRules(jwtRules)</code></li> <li><code>fn withJwtRulesMixin(jwtRules)</code></li> <li><code>obj spec.jwtRules</code><ul> <li><code>fn withAudiences(audiences)</code></li> <li><code>fn withAudiencesMixin(audiences)</code></li> <li><code>fn withForwardOriginalToken(forwardOriginalToken)</code></li> <li><code>fn withFromHeaders(fromHeaders)</code></li> <li><code>fn withFromHeadersMixin(fromHeaders)</code></li> <li><code>fn withFromParams(fromParams)</code></li> <li><code>fn withFromParamsMixin(fromParams)</code></li> <li><code>fn withIssuer(issuer)</code></li> <li><code>fn withJwks(jwks)</code></li> <li><code>fn withJwksUri(jwksUri)</code></li> <li><code>fn withJwks_uri(jwks_uri)</code></li> <li><code>fn withOutputClaimToHeaders(outputClaimToHeaders)</code></li> <li><code>fn withOutputClaimToHeadersMixin(outputClaimToHeaders)</code></li> <li><code>fn withOutputPayloadToHeader(outputPayloadToHeader)</code></li> <li><code>obj spec.jwtRules.fromHeaders</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.jwtRules.outputClaimToHeaders</code></li> <li><code>fn withClaim(claim)</code></li> <li><code>fn withHeader(header)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/security/v1/requestAuthentication/#fields","title":"Fields","text":""},{"location":"1.19/security/v1/requestAuthentication/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of RequestAuthentication</p>"},{"location":"1.19/security/v1/requestAuthentication/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#obj-spec","title":"obj spec","text":"<p>\"RequestAuthentication defines what request authentication methods are supported by a workload.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specwithjwtrules","title":"fn spec.withJwtRules","text":"<pre><code>withJwtRules(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specwithjwtrulesmixin","title":"fn spec.withJwtRulesMixin","text":"<pre><code>withJwtRulesMixin(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#obj-specjwtrules","title":"obj spec.jwtRules","text":"<p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithaudiences","title":"fn spec.jwtRules.withAudiences","text":"<pre><code>withAudiences(audiences)\n</code></pre>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithaudiencesmixin","title":"fn spec.jwtRules.withAudiencesMixin","text":"<pre><code>withAudiencesMixin(audiences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithforwardoriginaltoken","title":"fn spec.jwtRules.withForwardOriginalToken","text":"<pre><code>withForwardOriginalToken(forwardOriginalToken)\n</code></pre> <p>\"If set to true, the original token will be kept for the upstream request.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithfromheaders","title":"fn spec.jwtRules.withFromHeaders","text":"<pre><code>withFromHeaders(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithfromheadersmixin","title":"fn spec.jwtRules.withFromHeadersMixin","text":"<pre><code>withFromHeadersMixin(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithfromparams","title":"fn spec.jwtRules.withFromParams","text":"<pre><code>withFromParams(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithfromparamsmixin","title":"fn spec.jwtRules.withFromParamsMixin","text":"<pre><code>withFromParamsMixin(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithissuer","title":"fn spec.jwtRules.withIssuer","text":"<pre><code>withIssuer(issuer)\n</code></pre> <p>\"Identifies the issuer that issued the JWT.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithjwks","title":"fn spec.jwtRules.withJwks","text":"<pre><code>withJwks(jwks)\n</code></pre> <p>\"JSON Web Key Set of public keys to validate signature of the JWT.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithjwksuri","title":"fn spec.jwtRules.withJwksUri","text":"<pre><code>withJwksUri(jwksUri)\n</code></pre>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithjwks_uri","title":"fn spec.jwtRules.withJwks_uri","text":"<pre><code>withJwks_uri(jwks_uri)\n</code></pre>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheaders","title":"fn spec.jwtRules.withOutputClaimToHeaders","text":"<pre><code>withOutputClaimToHeaders(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheadersmixin","title":"fn spec.jwtRules.withOutputClaimToHeadersMixin","text":"<pre><code>withOutputClaimToHeadersMixin(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtruleswithoutputpayloadtoheader","title":"fn spec.jwtRules.withOutputPayloadToHeader","text":"<pre><code>withOutputPayloadToHeader(outputPayloadToHeader)\n</code></pre>"},{"location":"1.19/security/v1/requestAuthentication/#obj-specjwtrulesfromheaders","title":"obj spec.jwtRules.fromHeaders","text":"<p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtrulesfromheaderswithname","title":"fn spec.jwtRules.fromHeaders.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The HTTP header name.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtrulesfromheaderswithprefix","title":"fn spec.jwtRules.fromHeaders.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre> <p>\"The prefix that should be stripped before decoding the token.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#obj-specjwtrulesoutputclaimtoheaders","title":"obj spec.jwtRules.outputClaimToHeaders","text":"<p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithclaim","title":"fn spec.jwtRules.outputClaimToHeaders.withClaim","text":"<pre><code>withClaim(claim)\n</code></pre> <p>\"The name of the claim to be copied from.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithheader","title":"fn spec.jwtRules.outputClaimToHeaders.withHeader","text":"<pre><code>withHeader(header)\n</code></pre> <p>\"The name of the header to be created.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/security/v1/requestAuthentication/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/","title":"security.v1beta1","text":"<ul> <li>authorizationPolicy</li> <li>peerAuthentication</li> <li>requestAuthentication</li> </ul>"},{"location":"1.19/security/v1beta1/authorizationPolicy/","title":"security.v1beta1.authorizationPolicy","text":""},{"location":"1.19/security/v1beta1/authorizationPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAction(action)</code></li> <li><code>fn withRules(rules)</code></li> <li><code>fn withRulesMixin(rules)</code></li> <li><code>obj spec.provider</code><ul> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.rules</code><ul> <li><code>fn withFrom(from)</code></li> <li><code>fn withFromMixin(from)</code></li> <li><code>fn withTo(to)</code></li> <li><code>fn withToMixin(to)</code></li> <li><code>fn withWhen(when)</code></li> <li><code>fn withWhenMixin(when)</code></li> <li><code>obj spec.rules.from</code></li> <li><code>obj spec.rules.from.source</code><ul> <li><code>fn withIpBlocks(ipBlocks)</code></li> <li><code>fn withIpBlocksMixin(ipBlocks)</code></li> <li><code>fn withNamespaces(namespaces)</code></li> <li><code>fn withNamespacesMixin(namespaces)</code></li> <li><code>fn withNotIpBlocks(notIpBlocks)</code></li> <li><code>fn withNotIpBlocksMixin(notIpBlocks)</code></li> <li><code>fn withNotNamespaces(notNamespaces)</code></li> <li><code>fn withNotNamespacesMixin(notNamespaces)</code></li> <li><code>fn withNotPrincipals(notPrincipals)</code></li> <li><code>fn withNotPrincipalsMixin(notPrincipals)</code></li> <li><code>fn withNotRemoteIpBlocks(notRemoteIpBlocks)</code></li> <li><code>fn withNotRemoteIpBlocksMixin(notRemoteIpBlocks)</code></li> <li><code>fn withNotRequestPrincipals(notRequestPrincipals)</code></li> <li><code>fn withNotRequestPrincipalsMixin(notRequestPrincipals)</code></li> <li><code>fn withPrincipals(principals)</code></li> <li><code>fn withPrincipalsMixin(principals)</code></li> <li><code>fn withRemoteIpBlocks(remoteIpBlocks)</code></li> <li><code>fn withRemoteIpBlocksMixin(remoteIpBlocks)</code></li> <li><code>fn withRequestPrincipals(requestPrincipals)</code></li> <li><code>fn withRequestPrincipalsMixin(requestPrincipals)</code></li> </ul> </li> <li><code>obj spec.rules.to</code></li> <li><code>obj spec.rules.to.operation</code><ul> <li><code>fn withHosts(hosts)</code></li> <li><code>fn withHostsMixin(hosts)</code></li> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withNotHosts(notHosts)</code></li> <li><code>fn withNotHostsMixin(notHosts)</code></li> <li><code>fn withNotMethods(notMethods)</code></li> <li><code>fn withNotMethodsMixin(notMethods)</code></li> <li><code>fn withNotPaths(notPaths)</code></li> <li><code>fn withNotPathsMixin(notPaths)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> </ul> </li> <li><code>obj spec.rules.when</code></li> <li><code>fn withKey(key)</code></li> <li><code>fn withNotValues(notValues)</code></li> <li><code>fn withNotValuesMixin(notValues)</code></li> <li><code>fn withValues(values)</code></li> <li><code>fn withValuesMixin(values)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fields","title":"Fields","text":""},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of AuthorizationPolicy</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-spec","title":"obj spec","text":"<p>\"Configuration for access control on workloads. See more details at: https://istio.io/docs/reference/config/security/authorization-policy.html\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specwithaction","title":"fn spec.withAction","text":"<pre><code>withAction(action)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specwithrules","title":"fn spec.withRules","text":"<pre><code>withRules(rules)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specwithrulesmixin","title":"fn spec.withRulesMixin","text":"<pre><code>withRulesMixin(rules)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specprovider","title":"obj spec.provider","text":"<p>\"Specifies detailed configuration of the CUSTOM action.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specproviderwithname","title":"fn spec.provider.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Specifies the name of the extension provider.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specrules","title":"obj spec.rules","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswithfrom","title":"fn spec.rules.withFrom","text":"<pre><code>withFrom(from)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswithfrommixin","title":"fn spec.rules.withFromMixin","text":"<pre><code>withFromMixin(from)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswithto","title":"fn spec.rules.withTo","text":"<pre><code>withTo(to)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswithtomixin","title":"fn spec.rules.withToMixin","text":"<pre><code>withToMixin(to)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswithwhen","title":"fn spec.rules.withWhen","text":"<pre><code>withWhen(when)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswithwhenmixin","title":"fn spec.rules.withWhenMixin","text":"<pre><code>withWhenMixin(when)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specrulesfrom","title":"obj spec.rules.from","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specrulesfromsource","title":"obj spec.rules.from.source","text":"<p>\"Source specifies the source of a request.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithipblocks","title":"fn spec.rules.from.source.withIpBlocks","text":"<pre><code>withIpBlocks(ipBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithipblocksmixin","title":"fn spec.rules.from.source.withIpBlocksMixin","text":"<pre><code>withIpBlocksMixin(ipBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnamespaces","title":"fn spec.rules.from.source.withNamespaces","text":"<pre><code>withNamespaces(namespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnamespacesmixin","title":"fn spec.rules.from.source.withNamespacesMixin","text":"<pre><code>withNamespacesMixin(namespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocks","title":"fn spec.rules.from.source.withNotIpBlocks","text":"<pre><code>withNotIpBlocks(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotipblocksmixin","title":"fn spec.rules.from.source.withNotIpBlocksMixin","text":"<pre><code>withNotIpBlocksMixin(notIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespaces","title":"fn spec.rules.from.source.withNotNamespaces","text":"<pre><code>withNotNamespaces(notNamespaces)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotnamespacesmixin","title":"fn spec.rules.from.source.withNotNamespacesMixin","text":"<pre><code>withNotNamespacesMixin(notNamespaces)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipals","title":"fn spec.rules.from.source.withNotPrincipals","text":"<pre><code>withNotPrincipals(notPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotprincipalsmixin","title":"fn spec.rules.from.source.withNotPrincipalsMixin","text":"<pre><code>withNotPrincipalsMixin(notPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocks","title":"fn spec.rules.from.source.withNotRemoteIpBlocks","text":"<pre><code>withNotRemoteIpBlocks(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotremoteipblocksmixin","title":"fn spec.rules.from.source.withNotRemoteIpBlocksMixin","text":"<pre><code>withNotRemoteIpBlocksMixin(notRemoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipals","title":"fn spec.rules.from.source.withNotRequestPrincipals","text":"<pre><code>withNotRequestPrincipals(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithnotrequestprincipalsmixin","title":"fn spec.rules.from.source.withNotRequestPrincipalsMixin","text":"<pre><code>withNotRequestPrincipalsMixin(notRequestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithprincipals","title":"fn spec.rules.from.source.withPrincipals","text":"<pre><code>withPrincipals(principals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithprincipalsmixin","title":"fn spec.rules.from.source.withPrincipalsMixin","text":"<pre><code>withPrincipalsMixin(principals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocks","title":"fn spec.rules.from.source.withRemoteIpBlocks","text":"<pre><code>withRemoteIpBlocks(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithremoteipblocksmixin","title":"fn spec.rules.from.source.withRemoteIpBlocksMixin","text":"<pre><code>withRemoteIpBlocksMixin(remoteIpBlocks)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipals","title":"fn spec.rules.from.source.withRequestPrincipals","text":"<pre><code>withRequestPrincipals(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulesfromsourcewithrequestprincipalsmixin","title":"fn spec.rules.from.source.withRequestPrincipalsMixin","text":"<pre><code>withRequestPrincipalsMixin(requestPrincipals)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specrulesto","title":"obj spec.rules.to","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specrulestooperation","title":"obj spec.rules.to.operation","text":"<p>\"Operation specifies the operation of a request.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithhosts","title":"fn spec.rules.to.operation.withHosts","text":"<pre><code>withHosts(hosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithhostsmixin","title":"fn spec.rules.to.operation.withHostsMixin","text":"<pre><code>withHostsMixin(hosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithmethods","title":"fn spec.rules.to.operation.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithmethodsmixin","title":"fn spec.rules.to.operation.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnothosts","title":"fn spec.rules.to.operation.withNotHosts","text":"<pre><code>withNotHosts(notHosts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnothostsmixin","title":"fn spec.rules.to.operation.withNotHostsMixin","text":"<pre><code>withNotHostsMixin(notHosts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotmethods","title":"fn spec.rules.to.operation.withNotMethods","text":"<pre><code>withNotMethods(notMethods)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotmethodsmixin","title":"fn spec.rules.to.operation.withNotMethodsMixin","text":"<pre><code>withNotMethodsMixin(notMethods)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotpaths","title":"fn spec.rules.to.operation.withNotPaths","text":"<pre><code>withNotPaths(notPaths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotpathsmixin","title":"fn spec.rules.to.operation.withNotPathsMixin","text":"<pre><code>withNotPathsMixin(notPaths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotports","title":"fn spec.rules.to.operation.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithnotportsmixin","title":"fn spec.rules.to.operation.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithpaths","title":"fn spec.rules.to.operation.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithpathsmixin","title":"fn spec.rules.to.operation.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithports","title":"fn spec.rules.to.operation.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specrulestooperationwithportsmixin","title":"fn spec.rules.to.operation.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specruleswhen","title":"obj spec.rules.when","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithkey","title":"fn spec.rules.when.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The name of an Istio attribute.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithnotvalues","title":"fn spec.rules.when.withNotValues","text":"<pre><code>withNotValues(notValues)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithnotvaluesmixin","title":"fn spec.rules.when.withNotValuesMixin","text":"<pre><code>withNotValuesMixin(notValues)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithvalues","title":"fn spec.rules.when.withValues","text":"<pre><code>withValues(values)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specruleswhenwithvaluesmixin","title":"fn spec.rules.when.withValuesMixin","text":"<pre><code>withValuesMixin(values)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/security/v1beta1/authorizationPolicy/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/","title":"security.v1beta1.peerAuthentication","text":""},{"location":"1.19/security/v1beta1/peerAuthentication/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withPortLevelMtls(portLevelMtls)</code></li> <li><code>fn withPortLevelMtlsMixin(portLevelMtls)</code></li> <li><code>obj spec.mtls</code><ul> <li><code>fn withMode(mode)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fields","title":"Fields","text":""},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of PeerAuthentication</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#obj-spec","title":"obj spec","text":"<p>\"PeerAuthentication defines how traffic will be tunneled (or not) to the sidecar.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-specwithportlevelmtls","title":"fn spec.withPortLevelMtls","text":"<pre><code>withPortLevelMtls(portLevelMtls)\n</code></pre> <p>\"Port specific mutual TLS settings.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-specwithportlevelmtlsmixin","title":"fn spec.withPortLevelMtlsMixin","text":"<pre><code>withPortLevelMtlsMixin(portLevelMtls)\n</code></pre> <p>\"Port specific mutual TLS settings.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#obj-specmtls","title":"obj spec.mtls","text":"<p>\"Mutual TLS settings for workload.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-specmtlswithmode","title":"fn spec.mtls.withMode","text":"<pre><code>withMode(mode)\n</code></pre> <p>\"Defines the mTLS mode used for peer authentication.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#obj-specselector","title":"obj spec.selector","text":"<p>\"The selector determines the workloads to apply the ChannelAuthentication on.\"</p>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/security/v1beta1/peerAuthentication/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/","title":"security.v1beta1.requestAuthentication","text":""},{"location":"1.19/security/v1beta1/requestAuthentication/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withJwtRules(jwtRules)</code></li> <li><code>fn withJwtRulesMixin(jwtRules)</code></li> <li><code>obj spec.jwtRules</code><ul> <li><code>fn withAudiences(audiences)</code></li> <li><code>fn withAudiencesMixin(audiences)</code></li> <li><code>fn withForwardOriginalToken(forwardOriginalToken)</code></li> <li><code>fn withFromHeaders(fromHeaders)</code></li> <li><code>fn withFromHeadersMixin(fromHeaders)</code></li> <li><code>fn withFromParams(fromParams)</code></li> <li><code>fn withFromParamsMixin(fromParams)</code></li> <li><code>fn withIssuer(issuer)</code></li> <li><code>fn withJwks(jwks)</code></li> <li><code>fn withJwksUri(jwksUri)</code></li> <li><code>fn withJwks_uri(jwks_uri)</code></li> <li><code>fn withOutputClaimToHeaders(outputClaimToHeaders)</code></li> <li><code>fn withOutputClaimToHeadersMixin(outputClaimToHeaders)</code></li> <li><code>fn withOutputPayloadToHeader(outputPayloadToHeader)</code></li> <li><code>obj spec.jwtRules.fromHeaders</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withPrefix(prefix)</code></li> <li><code>obj spec.jwtRules.outputClaimToHeaders</code></li> <li><code>fn withClaim(claim)</code></li> <li><code>fn withHeader(header)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> </ul>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fields","title":"Fields","text":""},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of RequestAuthentication</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#obj-spec","title":"obj spec","text":"<p>\"RequestAuthentication defines what request authentication methods are supported by a workload.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specwithjwtrules","title":"fn spec.withJwtRules","text":"<pre><code>withJwtRules(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specwithjwtrulesmixin","title":"fn spec.withJwtRulesMixin","text":"<pre><code>withJwtRulesMixin(jwtRules)\n</code></pre> <p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#obj-specjwtrules","title":"obj spec.jwtRules","text":"<p>\"Define the list of JWTs that can be validated at the selected workloads' proxy.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithaudiences","title":"fn spec.jwtRules.withAudiences","text":"<pre><code>withAudiences(audiences)\n</code></pre>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithaudiencesmixin","title":"fn spec.jwtRules.withAudiencesMixin","text":"<pre><code>withAudiencesMixin(audiences)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithforwardoriginaltoken","title":"fn spec.jwtRules.withForwardOriginalToken","text":"<pre><code>withForwardOriginalToken(forwardOriginalToken)\n</code></pre> <p>\"If set to true, the original token will be kept for the upstream request.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromheaders","title":"fn spec.jwtRules.withFromHeaders","text":"<pre><code>withFromHeaders(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromheadersmixin","title":"fn spec.jwtRules.withFromHeadersMixin","text":"<pre><code>withFromHeadersMixin(fromHeaders)\n</code></pre> <p>\"List of header locations from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromparams","title":"fn spec.jwtRules.withFromParams","text":"<pre><code>withFromParams(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithfromparamsmixin","title":"fn spec.jwtRules.withFromParamsMixin","text":"<pre><code>withFromParamsMixin(fromParams)\n</code></pre> <p>\"List of query parameters from which JWT is expected.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithissuer","title":"fn spec.jwtRules.withIssuer","text":"<pre><code>withIssuer(issuer)\n</code></pre> <p>\"Identifies the issuer that issued the JWT.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithjwks","title":"fn spec.jwtRules.withJwks","text":"<pre><code>withJwks(jwks)\n</code></pre> <p>\"JSON Web Key Set of public keys to validate signature of the JWT.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithjwksuri","title":"fn spec.jwtRules.withJwksUri","text":"<pre><code>withJwksUri(jwksUri)\n</code></pre>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithjwks_uri","title":"fn spec.jwtRules.withJwks_uri","text":"<pre><code>withJwks_uri(jwks_uri)\n</code></pre>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheaders","title":"fn spec.jwtRules.withOutputClaimToHeaders","text":"<pre><code>withOutputClaimToHeaders(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithoutputclaimtoheadersmixin","title":"fn spec.jwtRules.withOutputClaimToHeadersMixin","text":"<pre><code>withOutputClaimToHeadersMixin(outputClaimToHeaders)\n</code></pre> <p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtruleswithoutputpayloadtoheader","title":"fn spec.jwtRules.withOutputPayloadToHeader","text":"<pre><code>withOutputPayloadToHeader(outputPayloadToHeader)\n</code></pre>"},{"location":"1.19/security/v1beta1/requestAuthentication/#obj-specjwtrulesfromheaders","title":"obj spec.jwtRules.fromHeaders","text":"<p>\"List of header locations from which JWT is expected.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtrulesfromheaderswithname","title":"fn spec.jwtRules.fromHeaders.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"The HTTP header name.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtrulesfromheaderswithprefix","title":"fn spec.jwtRules.fromHeaders.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre> <p>\"The prefix that should be stripped before decoding the token.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#obj-specjwtrulesoutputclaimtoheaders","title":"obj spec.jwtRules.outputClaimToHeaders","text":"<p>\"This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithclaim","title":"fn spec.jwtRules.outputClaimToHeaders.withClaim","text":"<pre><code>withClaim(claim)\n</code></pre> <p>\"The name of the claim to be copied from.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specjwtrulesoutputclaimtoheaderswithheader","title":"fn spec.jwtRules.outputClaimToHeaders.withHeader","text":"<pre><code>withHeader(header)\n</code></pre> <p>\"The name of the header to be created.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/security/v1beta1/requestAuthentication/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/","title":"telemetry","text":"<ul> <li>v1alpha1</li> </ul>"},{"location":"1.19/telemetry/v1alpha1/","title":"telemetry.v1alpha1","text":"<ul> <li>telemetry</li> </ul>"},{"location":"1.19/telemetry/v1alpha1/telemetry/","title":"telemetry.v1alpha1.telemetry","text":""},{"location":"1.19/telemetry/v1alpha1/telemetry/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code></li> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> <li><code>obj spec</code></li> <li><code>fn withAccessLogging(accessLogging)</code></li> <li><code>fn withAccessLoggingMixin(accessLogging)</code></li> <li><code>fn withMetrics(metrics)</code></li> <li><code>fn withMetricsMixin(metrics)</code></li> <li><code>fn withTracing(tracing)</code></li> <li><code>fn withTracingMixin(tracing)</code></li> <li><code>obj spec.accessLogging</code><ul> <li><code>fn withDisabled(disabled)</code></li> <li><code>fn withProviders(providers)</code></li> <li><code>fn withProvidersMixin(providers)</code></li> <li><code>obj spec.accessLogging.filter</code></li> <li><code>fn withExpression(expression)</code></li> <li><code>obj spec.accessLogging.match</code></li> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.accessLogging.providers</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.metrics</code><ul> <li><code>fn withOverrides(overrides)</code></li> <li><code>fn withOverridesMixin(overrides)</code></li> <li><code>fn withProviders(providers)</code></li> <li><code>fn withProvidersMixin(providers)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>obj spec.metrics.overrides</code></li> <li><code>fn withDisabled(disabled)</code></li> <li><code>fn withTagOverrides(tagOverrides)</code></li> <li><code>fn withTagOverridesMixin(tagOverrides)</code></li> <li><code>obj spec.metrics.overrides.match</code><ul> <li><code>fn withCustomMetric(customMetric)</code></li> <li><code>fn withMetric(metric)</code></li> <li><code>fn withMode(mode)</code></li> </ul> </li> <li><code>obj spec.metrics.providers</code></li> <li><code>fn withName(name)</code></li> </ul> </li> <li><code>obj spec.selector</code><ul> <li><code>fn withMatchLabels(matchLabels)</code></li> <li><code>fn withMatchLabelsMixin(matchLabels)</code></li> </ul> </li> <li><code>obj spec.tracing</code><ul> <li><code>fn withCustomTags(customTags)</code></li> <li><code>fn withCustomTagsMixin(customTags)</code></li> <li><code>fn withDisableSpanReporting(disableSpanReporting)</code></li> <li><code>fn withProviders(providers)</code></li> <li><code>fn withProvidersMixin(providers)</code></li> <li><code>fn withRandomSamplingPercentage(randomSamplingPercentage)</code></li> <li><code>fn withUseRequestIdForTraceSampling(useRequestIdForTraceSampling)</code></li> <li><code>obj spec.tracing.match</code></li> <li><code>fn withMode(mode)</code></li> <li><code>obj spec.tracing.providers</code></li> <li><code>fn withName(name)</code></li> </ul> </li> </ul>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fields","title":"Fields","text":""},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of Telemetry</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-spec","title":"obj spec","text":"<p>\"Telemetry configuration for workloads. See more details at: https://istio.io/docs/reference/config/telemetry.html\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specwithaccesslogging","title":"fn spec.withAccessLogging","text":"<pre><code>withAccessLogging(accessLogging)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specwithaccessloggingmixin","title":"fn spec.withAccessLoggingMixin","text":"<pre><code>withAccessLoggingMixin(accessLogging)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specwithmetrics","title":"fn spec.withMetrics","text":"<pre><code>withMetrics(metrics)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specwithmetricsmixin","title":"fn spec.withMetricsMixin","text":"<pre><code>withMetricsMixin(metrics)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specwithtracing","title":"fn spec.withTracing","text":"<pre><code>withTracing(tracing)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specwithtracingmixin","title":"fn spec.withTracingMixin","text":"<pre><code>withTracingMixin(tracing)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specaccesslogging","title":"obj spec.accessLogging","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specaccessloggingwithdisabled","title":"fn spec.accessLogging.withDisabled","text":"<pre><code>withDisabled(disabled)\n</code></pre> <p>\"Controls logging.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specaccessloggingwithproviders","title":"fn spec.accessLogging.withProviders","text":"<pre><code>withProviders(providers)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specaccessloggingwithprovidersmixin","title":"fn spec.accessLogging.withProvidersMixin","text":"<pre><code>withProvidersMixin(providers)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specaccessloggingfilter","title":"obj spec.accessLogging.filter","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specaccessloggingfilterwithexpression","title":"fn spec.accessLogging.filter.withExpression","text":"<pre><code>withExpression(expression)\n</code></pre> <p>\"CEL expression for selecting when requests/connections should be logged.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specaccessloggingmatch","title":"obj spec.accessLogging.match","text":"<p>\"Allows tailoring of logging behavior to specific conditions.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specaccessloggingmatchwithmode","title":"fn spec.accessLogging.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specaccessloggingproviders","title":"obj spec.accessLogging.providers","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specaccessloggingproviderswithname","title":"fn spec.accessLogging.providers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Required.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specmetrics","title":"obj spec.metrics","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricswithoverrides","title":"fn spec.metrics.withOverrides","text":"<pre><code>withOverrides(overrides)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricswithoverridesmixin","title":"fn spec.metrics.withOverridesMixin","text":"<pre><code>withOverridesMixin(overrides)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricswithproviders","title":"fn spec.metrics.withProviders","text":"<pre><code>withProviders(providers)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricswithprovidersmixin","title":"fn spec.metrics.withProvidersMixin","text":"<pre><code>withProvidersMixin(providers)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricswithreportinginterval","title":"fn spec.metrics.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specmetricsoverrides","title":"obj spec.metrics.overrides","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsoverrideswithdisabled","title":"fn spec.metrics.overrides.withDisabled","text":"<pre><code>withDisabled(disabled)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsoverrideswithtagoverrides","title":"fn spec.metrics.overrides.withTagOverrides","text":"<pre><code>withTagOverrides(tagOverrides)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsoverrideswithtagoverridesmixin","title":"fn spec.metrics.overrides.withTagOverridesMixin","text":"<pre><code>withTagOverridesMixin(tagOverrides)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specmetricsoverridesmatch","title":"obj spec.metrics.overrides.match","text":"<p>\"Match allows provides the scope of the override.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsoverridesmatchwithcustommetric","title":"fn spec.metrics.overrides.match.withCustomMetric","text":"<pre><code>withCustomMetric(customMetric)\n</code></pre> <p>\"Allows free-form specification of a metric.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsoverridesmatchwithmetric","title":"fn spec.metrics.overrides.match.withMetric","text":"<pre><code>withMetric(metric)\n</code></pre> <p>\"One of the well-known Istio Standard Metrics.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsoverridesmatchwithmode","title":"fn spec.metrics.overrides.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specmetricsproviders","title":"obj spec.metrics.providers","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specmetricsproviderswithname","title":"fn spec.metrics.providers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Required.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-specselector","title":"obj spec.selector","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specselectorwithmatchlabels","title":"fn spec.selector.withMatchLabels","text":"<pre><code>withMatchLabels(matchLabels)\n</code></pre>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-specselectorwithmatchlabelsmixin","title":"fn spec.selector.withMatchLabelsMixin","text":"<pre><code>withMatchLabelsMixin(matchLabels)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-spectracing","title":"obj spec.tracing","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithcustomtags","title":"fn spec.tracing.withCustomTags","text":"<pre><code>withCustomTags(customTags)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithcustomtagsmixin","title":"fn spec.tracing.withCustomTagsMixin","text":"<pre><code>withCustomTagsMixin(customTags)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithdisablespanreporting","title":"fn spec.tracing.withDisableSpanReporting","text":"<pre><code>withDisableSpanReporting(disableSpanReporting)\n</code></pre> <p>\"Controls span reporting.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithproviders","title":"fn spec.tracing.withProviders","text":"<pre><code>withProviders(providers)\n</code></pre> <p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithprovidersmixin","title":"fn spec.tracing.withProvidersMixin","text":"<pre><code>withProvidersMixin(providers)\n</code></pre> <p>\"Optional.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithrandomsamplingpercentage","title":"fn spec.tracing.withRandomSamplingPercentage","text":"<pre><code>withRandomSamplingPercentage(randomSamplingPercentage)\n</code></pre>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingwithuserequestidfortracesampling","title":"fn spec.tracing.withUseRequestIdForTraceSampling","text":"<pre><code>withUseRequestIdForTraceSampling(useRequestIdForTraceSampling)\n</code></pre>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-spectracingmatch","title":"obj spec.tracing.match","text":"<p>\"Allows tailoring of behavior to specific conditions.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingmatchwithmode","title":"fn spec.tracing.match.withMode","text":"<pre><code>withMode(mode)\n</code></pre>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#obj-spectracingproviders","title":"obj spec.tracing.providers","text":"<p>\"Optional.\"</p>"},{"location":"1.19/telemetry/v1alpha1/telemetry/#fn-spectracingproviderswithname","title":"fn spec.tracing.providers.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Required.\"</p>"}]}